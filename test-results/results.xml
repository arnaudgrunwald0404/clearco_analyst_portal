<testsuites id="" name="" tests="210" failures="133" skipped="0" errors="0" time="100.437065">
<testsuite name="api/api-endpoints.spec.ts" timestamp="2025-08-11T10:10:51.248Z" hostname="chromium" tests="30" failures="19" skipped="0" time="73.873" errors="0">
<testcase name="Authentication API Endpoints › POST /api/auth/login - successful login" classname="api/api-endpoints.spec.ts" time="1.203">
<failure message="api-endpoints.spec.ts:32:7 POST /api/auth/login - successful login" type="FAILURE">
<![CDATA[  [chromium] › api/api-endpoints.spec.ts:32:7 › Authentication API Endpoints › POST /api/auth/login - successful login 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      38 |     })
      39 |     
    > 40 |     expect(response.status()).toBe(200)
         |                               ^
      41 |     
      42 |     const data = await response.json()
      43 |     expect(data).toHaveProperty('success', true)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:40:31
]]>
</failure>
</testcase>
<testcase name="Authentication API Endpoints › POST /api/auth/login - invalid credentials" classname="api/api-endpoints.spec.ts" time="1.06">
<failure message="api-endpoints.spec.ts:47:7 POST /api/auth/login - invalid credentials" type="FAILURE">
<![CDATA[  [chromium] › api/api-endpoints.spec.ts:47:7 › Authentication API Endpoints › POST /api/auth/login - invalid credentials 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 403

      53 |     })
      54 |     
    > 55 |     expect(response.status()).toBe(401)
         |                               ^
      56 |     
      57 |     const data = await response.json()
      58 |     expect(data).toHaveProperty('success', false)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:55:31
]]>
</failure>
</testcase>
<testcase name="Authentication API Endpoints › POST /api/auth/analyst - analyst login" classname="api/api-endpoints.spec.ts" time="1.099">
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/general - requires authentication" classname="api/api-endpoints.spec.ts" time="0.045">
<failure message="api-endpoints.spec.ts:76:7 GET /api/settings/general - requires authentication" type="FAILURE">
<![CDATA[  [chromium] › api/api-endpoints.spec.ts:76:7 › Settings API Endpoints › GET /api/settings/general - requires authentication 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 200

      78 |     const response = await request.get(`${BASE_URL}/api/settings/general`)
      79 |     
    > 80 |     expect(response.status()).toBe(401)
         |                               ^
      81 |     
      82 |     const data = await response.json()
      83 |     expect(data).toHaveProperty('error', 'Authentication required')
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:80:31
]]>
</failure>
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/general - authenticated request" classname="api/api-endpoints.spec.ts" time="1.118">
</testcase>
<testcase name="Settings API Endpoints › PUT /api/settings/general - update settings" classname="api/api-endpoints.spec.ts" time="4.281">
</testcase>
<testcase name="Settings API Endpoints › PUT /api/settings/general - validation errors" classname="api/api-endpoints.spec.ts" time="0.663">
<failure message="api-endpoints.spec.ts:133:7 PUT /api/settings/general - validation errors" type="FAILURE">
<![CDATA[  [chromium] › api/api-endpoints.spec.ts:133:7 › Settings API Endpoints › PUT /api/settings/general - validation errors 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 401

      145 |     })
      146 |     
    > 147 |     expect(response.status()).toBe(400)
          |                               ^
      148 |     
      149 |     const data = await response.json()
      150 |     expect(data).toHaveProperty('error')
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:147:31
]]>
</failure>
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/calendar-connections - requires authentication" classname="api/api-endpoints.spec.ts" time="4.282">
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/calendar-connections - authenticated request" classname="api/api-endpoints.spec.ts" time="4.528">
<failure message="api-endpoints.spec.ts:162:7 GET /api/settings/calendar-connections - authenticated request" type="FAILURE">
<![CDATA[  [chromium] › api/api-endpoints.spec.ts:162:7 › Settings API Endpoints › GET /api/settings/calendar-connections - authenticated request 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      169 |     })
      170 |
    > 171 |     expect(response.status()).toBe(200)
          |                               ^
      172 |
      173 |     const body = await response.json()
      174 |     expect(body).toHaveProperty('success', true)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:171:31
]]>
</failure>
</testcase>
<testcase name="Analysts API Endpoints › GET /api/analysts - list analysts" classname="api/api-endpoints.spec.ts" time="5.055">
<failure message="api-endpoints.spec.ts:191:7 GET /api/analysts - list analysts" type="FAILURE">
<![CDATA[  [chromium] › api/api-endpoints.spec.ts:191:7 › Analysts API Endpoints › GET /api/analysts - list analysts 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      203 |     if (response.status() === 200) {
      204 |       const data = await response.json()
    > 205 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      206 |     }
      207 |   })
      208 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:205:35
]]>
</failure>
</testcase>
<testcase name="Analysts API Endpoints › POST /api/analysts - create analyst" classname="api/api-endpoints.spec.ts" time="3.43">
<failure message="api-endpoints.spec.ts:209:7 POST /api/analysts - create analyst" type="FAILURE">
<![CDATA[  [chromium] › api/api-endpoints.spec.ts:209:7 › Analysts API Endpoints › POST /api/analysts - create analyst 

    Error: expect(received).toHaveProperty(path, value)

    Expected path: "firstName"
    Received path: []

    Expected value: "Test"
    Received value: {"data": {"bio": null, "company": "Test Company", "createdAt": "2025-08-11T10:10:59.604614+00:00", "email": "test.analyst@example.com", "firstName": "Test", "id": "clme6ycp8rg3e3hl", "influence": "MEDIUM", "isArchived": false, "keyThemes": null, "lastContactDate": null, "lastName": "Analyst", "linkedinUrl": null, "location": null, "nextContactDate": null, "notes": null, "personalWebsite": null, "profileImageUrl": null, "relationshipHealth": "GOOD", "status": "ACTIVE", "tags": null, "title": "Senior Analyst", "twitterHandle": null, "type": "Analyst", "updatedAt": "2025-08-11T10:10:59.604614+00:00"}, "message": "Analyst created successfully", "success": true}

      228 |     if (response.status() === 201) {
      229 |       const data = await response.json()
    > 230 |       expect(data).toHaveProperty('firstName', 'Test')
          |                    ^
      231 |       expect(data).toHaveProperty('lastName', 'Analyst')
      232 |     }
      233 |   })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:230:20
]]>
</failure>
</testcase>
<testcase name="Analysts API Endpoints › POST /api/analysts - validation errors" classname="api/api-endpoints.spec.ts" time="1.605">
</testcase>
<testcase name="Analysts API Endpoints › GET /api/analysts/[id] - get specific analyst" classname="api/api-endpoints.spec.ts" time="1.461">
</testcase>
<testcase name="Analysts API Endpoints › POST /api/analysts/bulk - bulk create analysts" classname="api/api-endpoints.spec.ts" time="1.786">
<failure message="api-endpoints.spec.ts:284:7 POST /api/analysts/bulk - bulk create analysts" type="FAILURE">
<![CDATA[  [chromium] › api/api-endpoints.spec.ts:284:7 › Analysts API Endpoints › POST /api/analysts/bulk - bulk create analysts 

    Error: expect(received).toHaveProperty(path)

    Expected path: "created"
    Received path: []

    Received value: {"data": {"count": 0, "created": [], "errors": ["Failed to create analyst bulk1@example.com: Could not find the 'linkedIn' column of 'analysts' in the schema cache", "Failed to create analyst bulk2@example.com: Could not find the 'linkedIn' column of 'analysts' in the schema cache"]}, "success": true}

      313 |       const data = await response.json()
      314 |       expect(data).toHaveProperty('success', true)
    > 315 |       expect(data).toHaveProperty('created')
          |                    ^
      316 |     }
      317 |   })
      318 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:315:20
]]>
</failure>
</testcase>
<testcase name="Publications API Endpoints › GET /api/publications - list publications" classname="api/api-endpoints.spec.ts" time="1.429">
<failure message="api-endpoints.spec.ts:321:7 GET /api/publications - list publications" type="FAILURE">
<![CDATA[  [chromium] › api/api-endpoints.spec.ts:321:7 › Publications API Endpoints › GET /api/publications - list publications 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      333 |     if (response.status() === 200) {
      334 |       const data = await response.json()
    > 335 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      336 |     }
      337 |   })
      338 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:335:35
]]>
</failure>
</testcase>
<testcase name="Publications API Endpoints › POST /api/publications - create publication" classname="api/api-endpoints.spec.ts" time="1.15">
</testcase>
<testcase name="Publications API Endpoints › GET /api/publications/discover - publication discovery" classname="api/api-endpoints.spec.ts" time="10.174">
<failure message="api-endpoints.spec.ts:359:7 GET /api/publications/discover - publication discovery" type="FAILURE">
<![CDATA[  [chromium] › api/api-endpoints.spec.ts:359:7 › Publications API Endpoints › GET /api/publications/discover - publication discovery 

    TimeoutError: apiRequestContext.get: Timeout 10000ms exceeded.
    Call log:
      - → GET http://localhost:3000/api/publications/discover
        - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.7258.5 Safari/537.36
        - accept: */*
        - accept-encoding: gzip,deflate,br


      360 |     const authCookie = await getAuthCookie(request)
      361 |     
    > 362 |     const response = await request.get(`${BASE_URL}/api/publications/discover`, {
          |                                    ^
      363 |       headers: {
      364 |         'Cookie': authCookie
      365 |       }
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:362:36
]]>
</failure>
</testcase>
<testcase name="Events API Endpoints › GET /api/events - list events" classname="api/api-endpoints.spec.ts" time="1.609">
<failure message="api-endpoints.spec.ts:380:7 GET /api/events - list events" type="FAILURE">
<![CDATA[  [chromium] › api/api-endpoints.spec.ts:380:7 › Events API Endpoints › GET /api/events - list events 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      392 |     if (response.status() === 200) {
      393 |       const data = await response.json()
    > 394 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      395 |     }
      396 |   })
      397 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:394:35
]]>
</failure>
</testcase>
<testcase name="Events API Endpoints › POST /api/events - create event" classname="api/api-endpoints.spec.ts" time="0.976">
</testcase>
<testcase name="Awards API Endpoints › GET /api/awards - list awards" classname="api/api-endpoints.spec.ts" time="1.03">
<failure message="api-endpoints.spec.ts:419:7 GET /api/awards - list awards" type="FAILURE">
<![CDATA[  [chromium] › api/api-endpoints.spec.ts:419:7 › Awards API Endpoints › GET /api/awards - list awards 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      431 |     if (response.status() === 200) {
      432 |       const data = await response.json()
    > 433 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      434 |     }
      435 |   })
      436 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:433:35
]]>
</failure>
</testcase>
<testcase name="Dashboard API Endpoints › GET /api/dashboard/metrics - dashboard metrics" classname="api/api-endpoints.spec.ts" time="2.249">
<failure message="api-endpoints.spec.ts:439:7 GET /api/dashboard/metrics - dashboard metrics" type="FAILURE">
<![CDATA[  [chromium] › api/api-endpoints.spec.ts:439:7 › Dashboard API Endpoints › GET /api/dashboard/metrics - dashboard metrics 

    Error: expect(received).toHaveProperty(path)

    Expected path: "totalAnalysts"
    Received path: []

    Received value: {"cacheAge": 0, "cached": false, "data": {"activeAlerts": 0, "activeAnalysts": 0, "analystsAddedPast90Days": 0, "averageInfluenceScore": 0, "briefingFollowUps": 0, "briefingsDue": 0, "briefingsPast90Days": 0, "briefingsPlanned": 0, "briefingsYTD": 0, "cacheDuration": 300, "cacheEnabled": true, "calendarMeetings": 0, "completedBriefings": 0, "contentItemsPast90Days": 0, "coverageByTier": {"HIGH": 0, "LOW": 0, "MEDIUM": 0, "VERY_HIGH": 0}, "engagementRate": 0, "expectedPerformanceGain": "80-90% faster dashboard loads", "newAnalysts": [], "newsletterEngagements": 0, "newslettersSentPast90Days": 0, "notificationsYTD": 0, "publishedContent": 0, "queryOptimization": "Cached with Supabase queries", "recentContentItems": [{"createdAt": "2025-08-11T10:11:04.443Z", "id": "sample-1", "status": "published", "title": "People Analytics: Driving Data-Driven HR Decisions", "type": "RESEARCH_REPORT"}, {"createdAt": "2025-08-10T10:11:04.443Z", "id": "sample-2", "status": "published", "title": "Remote Work Best Practices for HR Leaders", "type": "BLOG_POST"}, {"createdAt": "2025-08-09T10:11:04.443Z", "id": "sample-3", "status": "published", "title": "Employee Experience Platforms: Market Analysis", "type": "WHITEPAPER"}], "recentInteractions": 0, "relationshipHealth": 3, "relevantSocialPosts": 0, "totalAnalysts": 0, "upcomingPublications": 0}, "success": true}

      451 |     if (response.status() === 200) {
      452 |       const data = await response.json()
    > 453 |       expect(data).toHaveProperty('totalAnalysts')
          |                    ^
      454 |       expect(data).toHaveProperty('activeAnalysts')
      455 |       expect(data).toHaveProperty('engagementRate')
      456 |     }
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:453:20
]]>
</failure>
</testcase>
<testcase name="Dashboard API Endpoints › GET /api/dashboard/top-analysts - top analysts" classname="api/api-endpoints.spec.ts" time="2.497">
<failure message="api-endpoints.spec.ts:459:7 GET /api/dashboard/top-analysts - top analysts" type="FAILURE">
<![CDATA[  [chromium] › api/api-endpoints.spec.ts:459:7 › Dashboard API Endpoints › GET /api/dashboard/top-analysts - top analysts 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      471 |     if (response.status() === 200) {
      472 |       const data = await response.json()
    > 473 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      474 |     }
      475 |   })
      476 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:473:35
]]>
</failure>
</testcase>
<testcase name="Dashboard API Endpoints › GET /api/dashboard/recent-activity - recent activity" classname="api/api-endpoints.spec.ts" time="5.874">
<failure message="api-endpoints.spec.ts:477:7 GET /api/dashboard/recent-activity - recent activity" type="FAILURE">
<![CDATA[  [chromium] › api/api-endpoints.spec.ts:477:7 › Dashboard API Endpoints › GET /api/dashboard/recent-activity - recent activity 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      489 |     if (response.status() === 200) {
      490 |       const data = await response.json()
    > 491 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      492 |     }
      493 |   })
      494 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:491:35
]]>
</failure>
</testcase>
<testcase name="Briefings API Endpoints › GET /api/briefings - list briefings" classname="api/api-endpoints.spec.ts" time="2.091">
<failure message="api-endpoints.spec.ts:497:7 GET /api/briefings - list briefings" type="FAILURE">
<![CDATA[  [chromium] › api/api-endpoints.spec.ts:497:7 › Briefings API Endpoints › GET /api/briefings - list briefings 

    Error: expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [200, 401]

      505 |     
      506 |     // Should return 200 for success or 401 for auth failure
    > 507 |     expect([200, 401]).toContain(response.status())
          |                        ^
      508 |     
      509 |     if (response.status() === 200) {
      510 |       const data = await response.json()
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:507:24
]]>
</failure>
</testcase>
<testcase name="Social Media API Endpoints › GET /api/social-media/recent-activity - recent social activity" classname="api/api-endpoints.spec.ts" time="5.887">
<failure message="api-endpoints.spec.ts:517:7 GET /api/social-media/recent-activity - recent social activity" type="FAILURE">
<![CDATA[  [chromium] › api/api-endpoints.spec.ts:517:7 › Social Media API Endpoints › GET /api/social-media/recent-activity - recent social activity 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      529 |     if (response.status() === 200) {
      530 |       const data = await response.json()
    > 531 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      532 |     }
      533 |   })
      534 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:531:35
]]>
</failure>
</testcase>
<testcase name="Error Handling › 404 for non-existent endpoints" classname="api/api-endpoints.spec.ts" time="1.134">
</testcase>
<testcase name="Error Handling › 405 for wrong HTTP methods" classname="api/api-endpoints.spec.ts" time="0.046">
</testcase>
<testcase name="Error Handling › 400 for malformed JSON" classname="api/api-endpoints.spec.ts" time="1.561">
</testcase>
<testcase name="Rate Limiting and Security › API endpoints have appropriate CORS headers" classname="api/api-endpoints.spec.ts" time="0.008">
<failure message="api-endpoints.spec.ts:565:7 API endpoints have appropriate CORS headers" type="FAILURE">
<![CDATA[  [chromium] › api/api-endpoints.spec.ts:565:7 › Rate Limiting and Security › API endpoints have appropriate CORS headers 

    TypeError: request.options is not a function

      564 | test.describe('Rate Limiting and Security', () => {
      565 |   test('API endpoints have appropriate CORS headers', async ({ request }) => {
    > 566 |     const response = await request.options(`${BASE_URL}/api/settings/general`)
          |                                    ^
      567 |     
      568 |     const headers = response.headers()
      569 |     // Check for security headers (these may vary based on your implementation)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:566:36
]]>
</failure>
</testcase>
<testcase name="Rate Limiting and Security › API endpoints reject requests with invalid content types" classname="api/api-endpoints.spec.ts" time="4.542">
<failure message="api-endpoints.spec.ts:573:7 API endpoints reject requests with invalid content types" type="FAILURE">
<![CDATA[  [chromium] › api/api-endpoints.spec.ts:573:7 › Rate Limiting and Security › API endpoints reject requests with invalid content types 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 500

      582 |     })
      583 |     
    > 584 |     expect(response.status()).toBe(400)
          |                               ^
      585 |   })
      586 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:584:31
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="api/api-endpoints.spec.ts" timestamp="2025-08-11T10:10:51.248Z" hostname="firefox" tests="30" failures="19" skipped="0" time="59.356" errors="0">
<testcase name="Authentication API Endpoints › POST /api/auth/login - successful login" classname="api/api-endpoints.spec.ts" time="5.141">
<failure message="api-endpoints.spec.ts:32:7 POST /api/auth/login - successful login" type="FAILURE">
<![CDATA[  [firefox] › api/api-endpoints.spec.ts:32:7 › Authentication API Endpoints › POST /api/auth/login - successful login 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      38 |     })
      39 |     
    > 40 |     expect(response.status()).toBe(200)
         |                               ^
      41 |     
      42 |     const data = await response.json()
      43 |     expect(data).toHaveProperty('success', true)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:40:31
]]>
</failure>
</testcase>
<testcase name="Authentication API Endpoints › POST /api/auth/login - invalid credentials" classname="api/api-endpoints.spec.ts" time="7.423">
<failure message="api-endpoints.spec.ts:47:7 POST /api/auth/login - invalid credentials" type="FAILURE">
<![CDATA[  [firefox] › api/api-endpoints.spec.ts:47:7 › Authentication API Endpoints › POST /api/auth/login - invalid credentials 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 403

      53 |     })
      54 |     
    > 55 |     expect(response.status()).toBe(401)
         |                               ^
      56 |     
      57 |     const data = await response.json()
      58 |     expect(data).toHaveProperty('success', false)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:55:31
]]>
</failure>
</testcase>
<testcase name="Authentication API Endpoints › POST /api/auth/analyst - analyst login" classname="api/api-endpoints.spec.ts" time="4.289">
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/general - requires authentication" classname="api/api-endpoints.spec.ts" time="2.426">
<failure message="api-endpoints.spec.ts:76:7 GET /api/settings/general - requires authentication" type="FAILURE">
<![CDATA[  [firefox] › api/api-endpoints.spec.ts:76:7 › Settings API Endpoints › GET /api/settings/general - requires authentication 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 200

      78 |     const response = await request.get(`${BASE_URL}/api/settings/general`)
      79 |     
    > 80 |     expect(response.status()).toBe(401)
         |                               ^
      81 |     
      82 |     const data = await response.json()
      83 |     expect(data).toHaveProperty('error', 'Authentication required')
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:80:31
]]>
</failure>
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/general - authenticated request" classname="api/api-endpoints.spec.ts" time="1.908">
</testcase>
<testcase name="Settings API Endpoints › PUT /api/settings/general - update settings" classname="api/api-endpoints.spec.ts" time="2.335">
</testcase>
<testcase name="Settings API Endpoints › PUT /api/settings/general - validation errors" classname="api/api-endpoints.spec.ts" time="1.593">
<failure message="api-endpoints.spec.ts:133:7 PUT /api/settings/general - validation errors" type="FAILURE">
<![CDATA[  [firefox] › api/api-endpoints.spec.ts:133:7 › Settings API Endpoints › PUT /api/settings/general - validation errors 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 401

      145 |     })
      146 |     
    > 147 |     expect(response.status()).toBe(400)
          |                               ^
      148 |     
      149 |     const data = await response.json()
      150 |     expect(data).toHaveProperty('error')
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:147:31
]]>
</failure>
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/calendar-connections - requires authentication" classname="api/api-endpoints.spec.ts" time="0.941">
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/calendar-connections - authenticated request" classname="api/api-endpoints.spec.ts" time="0.818">
<failure message="api-endpoints.spec.ts:162:7 GET /api/settings/calendar-connections - authenticated request" type="FAILURE">
<![CDATA[  [firefox] › api/api-endpoints.spec.ts:162:7 › Settings API Endpoints › GET /api/settings/calendar-connections - authenticated request 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      169 |     })
      170 |
    > 171 |     expect(response.status()).toBe(200)
          |                               ^
      172 |
      173 |     const body = await response.json()
      174 |     expect(body).toHaveProperty('success', true)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:171:31
]]>
</failure>
</testcase>
<testcase name="Analysts API Endpoints › GET /api/analysts - list analysts" classname="api/api-endpoints.spec.ts" time="0.721">
<failure message="api-endpoints.spec.ts:191:7 GET /api/analysts - list analysts" type="FAILURE">
<![CDATA[  [firefox] › api/api-endpoints.spec.ts:191:7 › Analysts API Endpoints › GET /api/analysts - list analysts 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      203 |     if (response.status() === 200) {
      204 |       const data = await response.json()
    > 205 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      206 |     }
      207 |   })
      208 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:205:35
]]>
</failure>
</testcase>
<testcase name="Analysts API Endpoints › POST /api/analysts - create analyst" classname="api/api-endpoints.spec.ts" time="4.686">
<failure message="api-endpoints.spec.ts:209:7 POST /api/analysts - create analyst" type="FAILURE">
<![CDATA[  [firefox] › api/api-endpoints.spec.ts:209:7 › Analysts API Endpoints › POST /api/analysts - create analyst 

    Error: expect(received).toContain(expected) // indexOf

    Expected value: 409
    Received array: [201, 401]

      224 |     
      225 |     // Should return 201 for success or 401 for auth failure
    > 226 |     expect([201, 401]).toContain(response.status())
          |                        ^
      227 |     
      228 |     if (response.status() === 201) {
      229 |       const data = await response.json()
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:226:24
]]>
</failure>
</testcase>
<testcase name="Analysts API Endpoints › POST /api/analysts - validation errors" classname="api/api-endpoints.spec.ts" time="0.489">
</testcase>
<testcase name="Analysts API Endpoints › GET /api/analysts/[id] - get specific analyst" classname="api/api-endpoints.spec.ts" time="0.327">
</testcase>
<testcase name="Analysts API Endpoints › POST /api/analysts/bulk - bulk create analysts" classname="api/api-endpoints.spec.ts" time="1.605">
<failure message="api-endpoints.spec.ts:284:7 POST /api/analysts/bulk - bulk create analysts" type="FAILURE">
<![CDATA[  [firefox] › api/api-endpoints.spec.ts:284:7 › Analysts API Endpoints › POST /api/analysts/bulk - bulk create analysts 

    Error: expect(received).toHaveProperty(path)

    Expected path: "created"
    Received path: []

    Received value: {"data": {"count": 0, "created": [], "errors": ["Failed to create analyst bulk1@example.com: Could not find the 'linkedIn' column of 'analysts' in the schema cache", "Failed to create analyst bulk2@example.com: Could not find the 'linkedIn' column of 'analysts' in the schema cache"]}, "success": true}

      313 |       const data = await response.json()
      314 |       expect(data).toHaveProperty('success', true)
    > 315 |       expect(data).toHaveProperty('created')
          |                    ^
      316 |     }
      317 |   })
      318 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:315:20
]]>
</failure>
</testcase>
<testcase name="Publications API Endpoints › GET /api/publications - list publications" classname="api/api-endpoints.spec.ts" time="0.498">
<failure message="api-endpoints.spec.ts:321:7 GET /api/publications - list publications" type="FAILURE">
<![CDATA[  [firefox] › api/api-endpoints.spec.ts:321:7 › Publications API Endpoints › GET /api/publications - list publications 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      333 |     if (response.status() === 200) {
      334 |       const data = await response.json()
    > 335 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      336 |     }
      337 |   })
      338 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:335:35
]]>
</failure>
</testcase>
<testcase name="Publications API Endpoints › POST /api/publications - create publication" classname="api/api-endpoints.spec.ts" time="0.154">
</testcase>
<testcase name="Publications API Endpoints › GET /api/publications/discover - publication discovery" classname="api/api-endpoints.spec.ts" time="12.795">
<failure message="api-endpoints.spec.ts:359:7 GET /api/publications/discover - publication discovery" type="FAILURE">
<![CDATA[  [firefox] › api/api-endpoints.spec.ts:359:7 › Publications API Endpoints › GET /api/publications/discover - publication discovery 

    TimeoutError: apiRequestContext.get: Timeout 10000ms exceeded.
    Call log:
      - → GET http://localhost:3000/api/publications/discover
        - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:140.0.2) Gecko/20100101 Firefox/140.0.2
        - accept: */*
        - accept-encoding: gzip,deflate,br


      360 |     const authCookie = await getAuthCookie(request)
      361 |     
    > 362 |     const response = await request.get(`${BASE_URL}/api/publications/discover`, {
          |                                    ^
      363 |       headers: {
      364 |         'Cookie': authCookie
      365 |       }
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:362:36
]]>
</failure>
</testcase>
<testcase name="Events API Endpoints › GET /api/events - list events" classname="api/api-endpoints.spec.ts" time="3.382">
<failure message="api-endpoints.spec.ts:380:7 GET /api/events - list events" type="FAILURE">
<![CDATA[  [firefox] › api/api-endpoints.spec.ts:380:7 › Events API Endpoints › GET /api/events - list events 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      392 |     if (response.status() === 200) {
      393 |       const data = await response.json()
    > 394 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      395 |     }
      396 |   })
      397 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:394:35
]]>
</failure>
</testcase>
<testcase name="Events API Endpoints › POST /api/events - create event" classname="api/api-endpoints.spec.ts" time="1.655">
</testcase>
<testcase name="Awards API Endpoints › GET /api/awards - list awards" classname="api/api-endpoints.spec.ts" time="0.659">
<failure message="api-endpoints.spec.ts:419:7 GET /api/awards - list awards" type="FAILURE">
<![CDATA[  [firefox] › api/api-endpoints.spec.ts:419:7 › Awards API Endpoints › GET /api/awards - list awards 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      431 |     if (response.status() === 200) {
      432 |       const data = await response.json()
    > 433 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      434 |     }
      435 |   })
      436 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:433:35
]]>
</failure>
</testcase>
<testcase name="Dashboard API Endpoints › GET /api/dashboard/metrics - dashboard metrics" classname="api/api-endpoints.spec.ts" time="2.354">
<failure message="api-endpoints.spec.ts:439:7 GET /api/dashboard/metrics - dashboard metrics" type="FAILURE">
<![CDATA[  [firefox] › api/api-endpoints.spec.ts:439:7 › Dashboard API Endpoints › GET /api/dashboard/metrics - dashboard metrics 

    Error: expect(received).toHaveProperty(path)

    Expected path: "totalAnalysts"
    Received path: []

    Received value: {"cacheAge": 0, "cached": false, "data": {"activeAlerts": 0, "activeAnalysts": 0, "analystsAddedPast90Days": 0, "averageInfluenceScore": 0, "briefingFollowUps": 0, "briefingsDue": 0, "briefingsPast90Days": 0, "briefingsPlanned": 0, "briefingsYTD": 0, "cacheDuration": 300, "cacheEnabled": true, "calendarMeetings": 0, "completedBriefings": 0, "contentItemsPast90Days": 0, "coverageByTier": {"HIGH": 0, "LOW": 0, "MEDIUM": 0, "VERY_HIGH": 0}, "engagementRate": 0, "expectedPerformanceGain": "80-90% faster dashboard loads", "newAnalysts": [], "newsletterEngagements": 0, "newslettersSentPast90Days": 0, "notificationsYTD": 0, "publishedContent": 0, "queryOptimization": "Cached with Supabase queries", "recentContentItems": [{"createdAt": "2025-08-11T10:11:25.973Z", "id": "sample-1", "status": "published", "title": "People Analytics: Driving Data-Driven HR Decisions", "type": "RESEARCH_REPORT"}, {"createdAt": "2025-08-10T10:11:25.973Z", "id": "sample-2", "status": "published", "title": "Remote Work Best Practices for HR Leaders", "type": "BLOG_POST"}, {"createdAt": "2025-08-09T10:11:25.973Z", "id": "sample-3", "status": "published", "title": "Employee Experience Platforms: Market Analysis", "type": "WHITEPAPER"}], "recentInteractions": 0, "relationshipHealth": 3, "relevantSocialPosts": 0, "totalAnalysts": 0, "upcomingPublications": 0}, "success": true}

      451 |     if (response.status() === 200) {
      452 |       const data = await response.json()
    > 453 |       expect(data).toHaveProperty('totalAnalysts')
          |                    ^
      454 |       expect(data).toHaveProperty('activeAnalysts')
      455 |       expect(data).toHaveProperty('engagementRate')
      456 |     }
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:453:20
]]>
</failure>
</testcase>
<testcase name="Dashboard API Endpoints › GET /api/dashboard/top-analysts - top analysts" classname="api/api-endpoints.spec.ts" time="0.442">
<failure message="api-endpoints.spec.ts:459:7 GET /api/dashboard/top-analysts - top analysts" type="FAILURE">
<![CDATA[  [firefox] › api/api-endpoints.spec.ts:459:7 › Dashboard API Endpoints › GET /api/dashboard/top-analysts - top analysts 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      471 |     if (response.status() === 200) {
      472 |       const data = await response.json()
    > 473 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      474 |     }
      475 |   })
      476 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:473:35
]]>
</failure>
</testcase>
<testcase name="Dashboard API Endpoints › GET /api/dashboard/recent-activity - recent activity" classname="api/api-endpoints.spec.ts" time="0.772">
<failure message="api-endpoints.spec.ts:477:7 GET /api/dashboard/recent-activity - recent activity" type="FAILURE">
<![CDATA[  [firefox] › api/api-endpoints.spec.ts:477:7 › Dashboard API Endpoints › GET /api/dashboard/recent-activity - recent activity 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      489 |     if (response.status() === 200) {
      490 |       const data = await response.json()
    > 491 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      492 |     }
      493 |   })
      494 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:491:35
]]>
</failure>
</testcase>
<testcase name="Briefings API Endpoints › GET /api/briefings - list briefings" classname="api/api-endpoints.spec.ts" time="0.236">
<failure message="api-endpoints.spec.ts:497:7 GET /api/briefings - list briefings" type="FAILURE">
<![CDATA[  [firefox] › api/api-endpoints.spec.ts:497:7 › Briefings API Endpoints › GET /api/briefings - list briefings 

    Error: expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [200, 401]

      505 |     
      506 |     // Should return 200 for success or 401 for auth failure
    > 507 |     expect([200, 401]).toContain(response.status())
          |                        ^
      508 |     
      509 |     if (response.status() === 200) {
      510 |       const data = await response.json()
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:507:24
]]>
</failure>
</testcase>
<testcase name="Social Media API Endpoints › GET /api/social-media/recent-activity - recent social activity" classname="api/api-endpoints.spec.ts" time="0.588">
<failure message="api-endpoints.spec.ts:517:7 GET /api/social-media/recent-activity - recent social activity" type="FAILURE">
<![CDATA[  [firefox] › api/api-endpoints.spec.ts:517:7 › Social Media API Endpoints › GET /api/social-media/recent-activity - recent social activity 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      529 |     if (response.status() === 200) {
      530 |       const data = await response.json()
    > 531 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      532 |     }
      533 |   })
      534 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:531:35
]]>
</failure>
</testcase>
<testcase name="Error Handling › 404 for non-existent endpoints" classname="api/api-endpoints.spec.ts" time="0.305">
</testcase>
<testcase name="Error Handling › 405 for wrong HTTP methods" classname="api/api-endpoints.spec.ts" time="0.041">
</testcase>
<testcase name="Error Handling › 400 for malformed JSON" classname="api/api-endpoints.spec.ts" time="0.34">
</testcase>
<testcase name="Rate Limiting and Security › API endpoints have appropriate CORS headers" classname="api/api-endpoints.spec.ts" time="0.006">
<failure message="api-endpoints.spec.ts:565:7 API endpoints have appropriate CORS headers" type="FAILURE">
<![CDATA[  [firefox] › api/api-endpoints.spec.ts:565:7 › Rate Limiting and Security › API endpoints have appropriate CORS headers 

    TypeError: request.options is not a function

      564 | test.describe('Rate Limiting and Security', () => {
      565 |   test('API endpoints have appropriate CORS headers', async ({ request }) => {
    > 566 |     const response = await request.options(`${BASE_URL}/api/settings/general`)
          |                                    ^
      567 |     
      568 |     const headers = response.headers()
      569 |     // Check for security headers (these may vary based on your implementation)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:566:36
]]>
</failure>
</testcase>
<testcase name="Rate Limiting and Security › API endpoints reject requests with invalid content types" classname="api/api-endpoints.spec.ts" time="0.427">
<failure message="api-endpoints.spec.ts:573:7 API endpoints reject requests with invalid content types" type="FAILURE">
<![CDATA[  [firefox] › api/api-endpoints.spec.ts:573:7 › Rate Limiting and Security › API endpoints reject requests with invalid content types 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 500

      582 |     })
      583 |     
    > 584 |     expect(response.status()).toBe(400)
          |                               ^
      585 |   })
      586 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:584:31
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="api/api-endpoints.spec.ts" timestamp="2025-08-11T10:10:51.248Z" hostname="webkit" tests="30" failures="19" skipped="0" time="55.745" errors="0">
<testcase name="Authentication API Endpoints › POST /api/auth/login - successful login" classname="api/api-endpoints.spec.ts" time="0.328">
<failure message="api-endpoints.spec.ts:32:7 POST /api/auth/login - successful login" type="FAILURE">
<![CDATA[  [webkit] › api/api-endpoints.spec.ts:32:7 › Authentication API Endpoints › POST /api/auth/login - successful login 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      38 |     })
      39 |     
    > 40 |     expect(response.status()).toBe(200)
         |                               ^
      41 |     
      42 |     const data = await response.json()
      43 |     expect(data).toHaveProperty('success', true)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:40:31
]]>
</failure>
</testcase>
<testcase name="Authentication API Endpoints › POST /api/auth/login - invalid credentials" classname="api/api-endpoints.spec.ts" time="0.322">
<failure message="api-endpoints.spec.ts:47:7 POST /api/auth/login - invalid credentials" type="FAILURE">
<![CDATA[  [webkit] › api/api-endpoints.spec.ts:47:7 › Authentication API Endpoints › POST /api/auth/login - invalid credentials 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 403

      53 |     })
      54 |     
    > 55 |     expect(response.status()).toBe(401)
         |                               ^
      56 |     
      57 |     const data = await response.json()
      58 |     expect(data).toHaveProperty('success', false)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:55:31
]]>
</failure>
</testcase>
<testcase name="Authentication API Endpoints › POST /api/auth/analyst - analyst login" classname="api/api-endpoints.spec.ts" time="0.343">
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/general - requires authentication" classname="api/api-endpoints.spec.ts" time="0.298">
<failure message="api-endpoints.spec.ts:76:7 GET /api/settings/general - requires authentication" type="FAILURE">
<![CDATA[  [webkit] › api/api-endpoints.spec.ts:76:7 › Settings API Endpoints › GET /api/settings/general - requires authentication 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 200

      78 |     const response = await request.get(`${BASE_URL}/api/settings/general`)
      79 |     
    > 80 |     expect(response.status()).toBe(401)
         |                               ^
      81 |     
      82 |     const data = await response.json()
      83 |     expect(data).toHaveProperty('error', 'Authentication required')
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:80:31
]]>
</failure>
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/general - authenticated request" classname="api/api-endpoints.spec.ts" time="0.194">
</testcase>
<testcase name="Settings API Endpoints › PUT /api/settings/general - update settings" classname="api/api-endpoints.spec.ts" time="1.094">
</testcase>
<testcase name="Settings API Endpoints › PUT /api/settings/general - validation errors" classname="api/api-endpoints.spec.ts" time="1.284">
<failure message="api-endpoints.spec.ts:133:7 PUT /api/settings/general - validation errors" type="FAILURE">
<![CDATA[  [webkit] › api/api-endpoints.spec.ts:133:7 › Settings API Endpoints › PUT /api/settings/general - validation errors 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 401

      145 |     })
      146 |     
    > 147 |     expect(response.status()).toBe(400)
          |                               ^
      148 |     
      149 |     const data = await response.json()
      150 |     expect(data).toHaveProperty('error')
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:147:31
]]>
</failure>
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/calendar-connections - requires authentication" classname="api/api-endpoints.spec.ts" time="0.765">
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/calendar-connections - authenticated request" classname="api/api-endpoints.spec.ts" time="0.621">
<failure message="api-endpoints.spec.ts:162:7 GET /api/settings/calendar-connections - authenticated request" type="FAILURE">
<![CDATA[  [webkit] › api/api-endpoints.spec.ts:162:7 › Settings API Endpoints › GET /api/settings/calendar-connections - authenticated request 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      169 |     })
      170 |
    > 171 |     expect(response.status()).toBe(200)
          |                               ^
      172 |
      173 |     const body = await response.json()
      174 |     expect(body).toHaveProperty('success', true)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:171:31
]]>
</failure>
</testcase>
<testcase name="Analysts API Endpoints › GET /api/analysts - list analysts" classname="api/api-endpoints.spec.ts" time="0.649">
<failure message="api-endpoints.spec.ts:191:7 GET /api/analysts - list analysts" type="FAILURE">
<![CDATA[  [webkit] › api/api-endpoints.spec.ts:191:7 › Analysts API Endpoints › GET /api/analysts - list analysts 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      203 |     if (response.status() === 200) {
      204 |       const data = await response.json()
    > 205 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      206 |     }
      207 |   })
      208 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:205:35
]]>
</failure>
</testcase>
<testcase name="Analysts API Endpoints › POST /api/analysts - create analyst" classname="api/api-endpoints.spec.ts" time="0.555">
<failure message="api-endpoints.spec.ts:209:7 POST /api/analysts - create analyst" type="FAILURE">
<![CDATA[  [webkit] › api/api-endpoints.spec.ts:209:7 › Analysts API Endpoints › POST /api/analysts - create analyst 

    Error: expect(received).toContain(expected) // indexOf

    Expected value: 409
    Received array: [201, 401]

      224 |     
      225 |     // Should return 201 for success or 401 for auth failure
    > 226 |     expect([201, 401]).toContain(response.status())
          |                        ^
      227 |     
      228 |     if (response.status() === 201) {
      229 |       const data = await response.json()
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:226:24
]]>
</failure>
</testcase>
<testcase name="Analysts API Endpoints › POST /api/analysts - validation errors" classname="api/api-endpoints.spec.ts" time="0.307">
</testcase>
<testcase name="Analysts API Endpoints › GET /api/analysts/[id] - get specific analyst" classname="api/api-endpoints.spec.ts" time="0.211">
</testcase>
<testcase name="Analysts API Endpoints › POST /api/analysts/bulk - bulk create analysts" classname="api/api-endpoints.spec.ts" time="1.016">
<failure message="api-endpoints.spec.ts:284:7 POST /api/analysts/bulk - bulk create analysts" type="FAILURE">
<![CDATA[  [webkit] › api/api-endpoints.spec.ts:284:7 › Analysts API Endpoints › POST /api/analysts/bulk - bulk create analysts 

    Error: expect(received).toHaveProperty(path)

    Expected path: "created"
    Received path: []

    Received value: {"data": {"count": 0, "created": [], "errors": ["Failed to create analyst bulk1@example.com: Could not find the 'linkedIn' column of 'analysts' in the schema cache", "Failed to create analyst bulk2@example.com: Could not find the 'linkedIn' column of 'analysts' in the schema cache"]}, "success": true}

      313 |       const data = await response.json()
      314 |       expect(data).toHaveProperty('success', true)
    > 315 |       expect(data).toHaveProperty('created')
          |                    ^
      316 |     }
      317 |   })
      318 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:315:20
]]>
</failure>
</testcase>
<testcase name="Publications API Endpoints › GET /api/publications - list publications" classname="api/api-endpoints.spec.ts" time="1.251">
<failure message="api-endpoints.spec.ts:321:7 GET /api/publications - list publications" type="FAILURE">
<![CDATA[  [webkit] › api/api-endpoints.spec.ts:321:7 › Publications API Endpoints › GET /api/publications - list publications 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      333 |     if (response.status() === 200) {
      334 |       const data = await response.json()
    > 335 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      336 |     }
      337 |   })
      338 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:335:35
]]>
</failure>
</testcase>
<testcase name="Publications API Endpoints › POST /api/publications - create publication" classname="api/api-endpoints.spec.ts" time="0.695">
</testcase>
<testcase name="Publications API Endpoints › GET /api/publications/discover - publication discovery" classname="api/api-endpoints.spec.ts" time="10.147">
<failure message="api-endpoints.spec.ts:359:7 GET /api/publications/discover - publication discovery" type="FAILURE">
<![CDATA[  [webkit] › api/api-endpoints.spec.ts:359:7 › Publications API Endpoints › GET /api/publications/discover - publication discovery 

    TimeoutError: apiRequestContext.get: Timeout 10000ms exceeded.
    Call log:
      - → GET http://localhost:3000/api/publications/discover
        - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15
        - accept: */*
        - accept-encoding: gzip,deflate,br


      360 |     const authCookie = await getAuthCookie(request)
      361 |     
    > 362 |     const response = await request.get(`${BASE_URL}/api/publications/discover`, {
          |                                    ^
      363 |       headers: {
      364 |         'Cookie': authCookie
      365 |       }
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:362:36
]]>
</failure>
</testcase>
<testcase name="Events API Endpoints › GET /api/events - list events" classname="api/api-endpoints.spec.ts" time="8.836">
<failure message="api-endpoints.spec.ts:380:7 GET /api/events - list events" type="FAILURE">
<![CDATA[  [webkit] › api/api-endpoints.spec.ts:380:7 › Events API Endpoints › GET /api/events - list events 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      392 |     if (response.status() === 200) {
      393 |       const data = await response.json()
    > 394 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      395 |     }
      396 |   })
      397 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:394:35
]]>
</failure>
</testcase>
<testcase name="Events API Endpoints › POST /api/events - create event" classname="api/api-endpoints.spec.ts" time="6.899">
</testcase>
<testcase name="Awards API Endpoints › GET /api/awards - list awards" classname="api/api-endpoints.spec.ts" time="8.88">
<failure message="api-endpoints.spec.ts:419:7 GET /api/awards - list awards" type="FAILURE">
<![CDATA[  [webkit] › api/api-endpoints.spec.ts:419:7 › Awards API Endpoints › GET /api/awards - list awards 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      431 |     if (response.status() === 200) {
      432 |       const data = await response.json()
    > 433 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      434 |     }
      435 |   })
      436 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:433:35
]]>
</failure>
</testcase>
<testcase name="Dashboard API Endpoints › GET /api/dashboard/metrics - dashboard metrics" classname="api/api-endpoints.spec.ts" time="3.733">
<failure message="api-endpoints.spec.ts:439:7 GET /api/dashboard/metrics - dashboard metrics" type="FAILURE">
<![CDATA[  [webkit] › api/api-endpoints.spec.ts:439:7 › Dashboard API Endpoints › GET /api/dashboard/metrics - dashboard metrics 

    Error: expect(received).toHaveProperty(path)

    Expected path: "totalAnalysts"
    Received path: []

    Received value: {"cacheAge": 17, "cached": true, "data": {"activeAlerts": 0, "activeAnalysts": 0, "analystsAddedPast90Days": 0, "averageInfluenceScore": 0, "briefingFollowUps": 0, "briefingsDue": 0, "briefingsPast90Days": 0, "briefingsPlanned": 0, "briefingsYTD": 0, "cacheDuration": 300, "cacheEnabled": true, "calendarMeetings": 0, "completedBriefings": 0, "contentItemsPast90Days": 0, "coverageByTier": {"HIGH": 0, "LOW": 0, "MEDIUM": 0, "VERY_HIGH": 0}, "engagementRate": 0, "expectedPerformanceGain": "80-90% faster dashboard loads", "newAnalysts": [], "newsletterEngagements": 0, "newslettersSentPast90Days": 0, "notificationsYTD": 0, "publishedContent": 0, "queryOptimization": "Cached with Supabase queries", "recentContentItems": [{"createdAt": "2025-08-11T10:11:25.973Z", "id": "sample-1", "status": "published", "title": "People Analytics: Driving Data-Driven HR Decisions", "type": "RESEARCH_REPORT"}, {"createdAt": "2025-08-10T10:11:25.973Z", "id": "sample-2", "status": "published", "title": "Remote Work Best Practices for HR Leaders", "type": "BLOG_POST"}, {"createdAt": "2025-08-09T10:11:25.973Z", "id": "sample-3", "status": "published", "title": "Employee Experience Platforms: Market Analysis", "type": "WHITEPAPER"}], "recentInteractions": 0, "relationshipHealth": 3, "relevantSocialPosts": 0, "totalAnalysts": 0, "upcomingPublications": 0}, "success": true}

      451 |     if (response.status() === 200) {
      452 |       const data = await response.json()
    > 453 |       expect(data).toHaveProperty('totalAnalysts')
          |                    ^
      454 |       expect(data).toHaveProperty('activeAnalysts')
      455 |       expect(data).toHaveProperty('engagementRate')
      456 |     }
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:453:20
]]>
</failure>
</testcase>
<testcase name="Dashboard API Endpoints › GET /api/dashboard/top-analysts - top analysts" classname="api/api-endpoints.spec.ts" time="2.502">
<failure message="api-endpoints.spec.ts:459:7 GET /api/dashboard/top-analysts - top analysts" type="FAILURE">
<![CDATA[  [webkit] › api/api-endpoints.spec.ts:459:7 › Dashboard API Endpoints › GET /api/dashboard/top-analysts - top analysts 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      471 |     if (response.status() === 200) {
      472 |       const data = await response.json()
    > 473 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      474 |     }
      475 |   })
      476 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:473:35
]]>
</failure>
</testcase>
<testcase name="Dashboard API Endpoints › GET /api/dashboard/recent-activity - recent activity" classname="api/api-endpoints.spec.ts" time="2.211">
<failure message="api-endpoints.spec.ts:477:7 GET /api/dashboard/recent-activity - recent activity" type="FAILURE">
<![CDATA[  [webkit] › api/api-endpoints.spec.ts:477:7 › Dashboard API Endpoints › GET /api/dashboard/recent-activity - recent activity 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      489 |     if (response.status() === 200) {
      490 |       const data = await response.json()
    > 491 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      492 |     }
      493 |   })
      494 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:491:35
]]>
</failure>
</testcase>
<testcase name="Briefings API Endpoints › GET /api/briefings - list briefings" classname="api/api-endpoints.spec.ts" time="0.451">
<failure message="api-endpoints.spec.ts:497:7 GET /api/briefings - list briefings" type="FAILURE">
<![CDATA[  [webkit] › api/api-endpoints.spec.ts:497:7 › Briefings API Endpoints › GET /api/briefings - list briefings 

    Error: expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [200, 401]

      505 |     
      506 |     // Should return 200 for success or 401 for auth failure
    > 507 |     expect([200, 401]).toContain(response.status())
          |                        ^
      508 |     
      509 |     if (response.status() === 200) {
      510 |       const data = await response.json()
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:507:24
]]>
</failure>
</testcase>
<testcase name="Social Media API Endpoints › GET /api/social-media/recent-activity - recent social activity" classname="api/api-endpoints.spec.ts" time="0.716">
<failure message="api-endpoints.spec.ts:517:7 GET /api/social-media/recent-activity - recent social activity" type="FAILURE">
<![CDATA[  [webkit] › api/api-endpoints.spec.ts:517:7 › Social Media API Endpoints › GET /api/social-media/recent-activity - recent social activity 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      529 |     if (response.status() === 200) {
      530 |       const data = await response.json()
    > 531 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      532 |     }
      533 |   })
      534 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:531:35
]]>
</failure>
</testcase>
<testcase name="Error Handling › 404 for non-existent endpoints" classname="api/api-endpoints.spec.ts" time="0.3">
</testcase>
<testcase name="Error Handling › 405 for wrong HTTP methods" classname="api/api-endpoints.spec.ts" time="0.245">
</testcase>
<testcase name="Error Handling › 400 for malformed JSON" classname="api/api-endpoints.spec.ts" time="0.448">
</testcase>
<testcase name="Rate Limiting and Security › API endpoints have appropriate CORS headers" classname="api/api-endpoints.spec.ts" time="0.005">
<failure message="api-endpoints.spec.ts:565:7 API endpoints have appropriate CORS headers" type="FAILURE">
<![CDATA[  [webkit] › api/api-endpoints.spec.ts:565:7 › Rate Limiting and Security › API endpoints have appropriate CORS headers 

    TypeError: request.options is not a function

      564 | test.describe('Rate Limiting and Security', () => {
      565 |   test('API endpoints have appropriate CORS headers', async ({ request }) => {
    > 566 |     const response = await request.options(`${BASE_URL}/api/settings/general`)
          |                                    ^
      567 |     
      568 |     const headers = response.headers()
      569 |     // Check for security headers (these may vary based on your implementation)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:566:36
]]>
</failure>
</testcase>
<testcase name="Rate Limiting and Security › API endpoints reject requests with invalid content types" classname="api/api-endpoints.spec.ts" time="0.439">
<failure message="api-endpoints.spec.ts:573:7 API endpoints reject requests with invalid content types" type="FAILURE">
<![CDATA[  [webkit] › api/api-endpoints.spec.ts:573:7 › Rate Limiting and Security › API endpoints reject requests with invalid content types 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 500

      582 |     })
      583 |     
    > 584 |     expect(response.status()).toBe(400)
          |                               ^
      585 |   })
      586 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:584:31
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="api/api-endpoints.spec.ts" timestamp="2025-08-11T10:10:51.248Z" hostname="Mobile Chrome" tests="30" failures="19" skipped="0" time="26.617" errors="0">
<testcase name="Authentication API Endpoints › POST /api/auth/login - successful login" classname="api/api-endpoints.spec.ts" time="0.443">
<failure message="api-endpoints.spec.ts:32:7 POST /api/auth/login - successful login" type="FAILURE">
<![CDATA[  [Mobile Chrome] › api/api-endpoints.spec.ts:32:7 › Authentication API Endpoints › POST /api/auth/login - successful login 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      38 |     })
      39 |     
    > 40 |     expect(response.status()).toBe(200)
         |                               ^
      41 |     
      42 |     const data = await response.json()
      43 |     expect(data).toHaveProperty('success', true)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:40:31
]]>
</failure>
</testcase>
<testcase name="Authentication API Endpoints › POST /api/auth/login - invalid credentials" classname="api/api-endpoints.spec.ts" time="0.371">
<failure message="api-endpoints.spec.ts:47:7 POST /api/auth/login - invalid credentials" type="FAILURE">
<![CDATA[  [Mobile Chrome] › api/api-endpoints.spec.ts:47:7 › Authentication API Endpoints › POST /api/auth/login - invalid credentials 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 403

      53 |     })
      54 |     
    > 55 |     expect(response.status()).toBe(401)
         |                               ^
      56 |     
      57 |     const data = await response.json()
      58 |     expect(data).toHaveProperty('success', false)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:55:31
]]>
</failure>
</testcase>
<testcase name="Authentication API Endpoints › POST /api/auth/analyst - analyst login" classname="api/api-endpoints.spec.ts" time="0.354">
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/general - requires authentication" classname="api/api-endpoints.spec.ts" time="0.135">
<failure message="api-endpoints.spec.ts:76:7 GET /api/settings/general - requires authentication" type="FAILURE">
<![CDATA[  [Mobile Chrome] › api/api-endpoints.spec.ts:76:7 › Settings API Endpoints › GET /api/settings/general - requires authentication 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 200

      78 |     const response = await request.get(`${BASE_URL}/api/settings/general`)
      79 |     
    > 80 |     expect(response.status()).toBe(401)
         |                               ^
      81 |     
      82 |     const data = await response.json()
      83 |     expect(data).toHaveProperty('error', 'Authentication required')
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:80:31
]]>
</failure>
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/general - authenticated request" classname="api/api-endpoints.spec.ts" time="0.739">
</testcase>
<testcase name="Settings API Endpoints › PUT /api/settings/general - update settings" classname="api/api-endpoints.spec.ts" time="0.806">
</testcase>
<testcase name="Settings API Endpoints › PUT /api/settings/general - validation errors" classname="api/api-endpoints.spec.ts" time="0.524">
<failure message="api-endpoints.spec.ts:133:7 PUT /api/settings/general - validation errors" type="FAILURE">
<![CDATA[  [Mobile Chrome] › api/api-endpoints.spec.ts:133:7 › Settings API Endpoints › PUT /api/settings/general - validation errors 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 401

      145 |     })
      146 |     
    > 147 |     expect(response.status()).toBe(400)
          |                               ^
      148 |     
      149 |     const data = await response.json()
      150 |     expect(data).toHaveProperty('error')
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:147:31
]]>
</failure>
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/calendar-connections - requires authentication" classname="api/api-endpoints.spec.ts" time="0.358">
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/calendar-connections - authenticated request" classname="api/api-endpoints.spec.ts" time="0.745">
<failure message="api-endpoints.spec.ts:162:7 GET /api/settings/calendar-connections - authenticated request" type="FAILURE">
<![CDATA[  [Mobile Chrome] › api/api-endpoints.spec.ts:162:7 › Settings API Endpoints › GET /api/settings/calendar-connections - authenticated request 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      169 |     })
      170 |
    > 171 |     expect(response.status()).toBe(200)
          |                               ^
      172 |
      173 |     const body = await response.json()
      174 |     expect(body).toHaveProperty('success', true)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:171:31
]]>
</failure>
</testcase>
<testcase name="Analysts API Endpoints › GET /api/analysts - list analysts" classname="api/api-endpoints.spec.ts" time="0.438">
<failure message="api-endpoints.spec.ts:191:7 GET /api/analysts - list analysts" type="FAILURE">
<![CDATA[  [Mobile Chrome] › api/api-endpoints.spec.ts:191:7 › Analysts API Endpoints › GET /api/analysts - list analysts 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      203 |     if (response.status() === 200) {
      204 |       const data = await response.json()
    > 205 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      206 |     }
      207 |   })
      208 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:205:35
]]>
</failure>
</testcase>
<testcase name="Analysts API Endpoints › POST /api/analysts - create analyst" classname="api/api-endpoints.spec.ts" time="1.23">
<failure message="api-endpoints.spec.ts:209:7 POST /api/analysts - create analyst" type="FAILURE">
<![CDATA[  [Mobile Chrome] › api/api-endpoints.spec.ts:209:7 › Analysts API Endpoints › POST /api/analysts - create analyst 

    Error: expect(received).toContain(expected) // indexOf

    Expected value: 409
    Received array: [201, 401]

      224 |     
      225 |     // Should return 201 for success or 401 for auth failure
    > 226 |     expect([201, 401]).toContain(response.status())
          |                        ^
      227 |     
      228 |     if (response.status() === 201) {
      229 |       const data = await response.json()
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:226:24
]]>
</failure>
</testcase>
<testcase name="Analysts API Endpoints › POST /api/analysts - validation errors" classname="api/api-endpoints.spec.ts" time="0.475">
</testcase>
<testcase name="Analysts API Endpoints › GET /api/analysts/[id] - get specific analyst" classname="api/api-endpoints.spec.ts" time="0.728">
</testcase>
<testcase name="Analysts API Endpoints › POST /api/analysts/bulk - bulk create analysts" classname="api/api-endpoints.spec.ts" time="1.72">
<failure message="api-endpoints.spec.ts:284:7 POST /api/analysts/bulk - bulk create analysts" type="FAILURE">
<![CDATA[  [Mobile Chrome] › api/api-endpoints.spec.ts:284:7 › Analysts API Endpoints › POST /api/analysts/bulk - bulk create analysts 

    Error: expect(received).toHaveProperty(path)

    Expected path: "created"
    Received path: []

    Received value: {"data": {"count": 0, "created": [], "errors": ["Failed to create analyst bulk1@example.com: Could not find the 'linkedIn' column of 'analysts' in the schema cache", "Failed to create analyst bulk2@example.com: Could not find the 'linkedIn' column of 'analysts' in the schema cache"]}, "success": true}

      313 |       const data = await response.json()
      314 |       expect(data).toHaveProperty('success', true)
    > 315 |       expect(data).toHaveProperty('created')
          |                    ^
      316 |     }
      317 |   })
      318 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:315:20
]]>
</failure>
</testcase>
<testcase name="Publications API Endpoints › GET /api/publications - list publications" classname="api/api-endpoints.spec.ts" time="1.066">
<failure message="api-endpoints.spec.ts:321:7 GET /api/publications - list publications" type="FAILURE">
<![CDATA[  [Mobile Chrome] › api/api-endpoints.spec.ts:321:7 › Publications API Endpoints › GET /api/publications - list publications 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      333 |     if (response.status() === 200) {
      334 |       const data = await response.json()
    > 335 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      336 |     }
      337 |   })
      338 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:335:35
]]>
</failure>
</testcase>
<testcase name="Publications API Endpoints › POST /api/publications - create publication" classname="api/api-endpoints.spec.ts" time="0.594">
</testcase>
<testcase name="Publications API Endpoints › GET /api/publications/discover - publication discovery" classname="api/api-endpoints.spec.ts" time="10.567">
<failure message="api-endpoints.spec.ts:359:7 GET /api/publications/discover - publication discovery" type="FAILURE">
<![CDATA[  [Mobile Chrome] › api/api-endpoints.spec.ts:359:7 › Publications API Endpoints › GET /api/publications/discover - publication discovery 

    TimeoutError: apiRequestContext.get: Timeout 10000ms exceeded.
    Call log:
      - → GET http://localhost:3000/api/publications/discover
        - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.7258.5 Mobile Safari/537.36
        - accept: */*
        - accept-encoding: gzip,deflate,br


      360 |     const authCookie = await getAuthCookie(request)
      361 |     
    > 362 |     const response = await request.get(`${BASE_URL}/api/publications/discover`, {
          |                                    ^
      363 |       headers: {
      364 |         'Cookie': authCookie
      365 |       }
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:362:36
]]>
</failure>
</testcase>
<testcase name="Events API Endpoints › GET /api/events - list events" classname="api/api-endpoints.spec.ts" time="0.647">
<failure message="api-endpoints.spec.ts:380:7 GET /api/events - list events" type="FAILURE">
<![CDATA[  [Mobile Chrome] › api/api-endpoints.spec.ts:380:7 › Events API Endpoints › GET /api/events - list events 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      392 |     if (response.status() === 200) {
      393 |       const data = await response.json()
    > 394 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      395 |     }
      396 |   })
      397 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:394:35
]]>
</failure>
</testcase>
<testcase name="Events API Endpoints › POST /api/events - create event" classname="api/api-endpoints.spec.ts" time="0.352">
</testcase>
<testcase name="Awards API Endpoints › GET /api/awards - list awards" classname="api/api-endpoints.spec.ts" time="0.82">
<failure message="api-endpoints.spec.ts:419:7 GET /api/awards - list awards" type="FAILURE">
<![CDATA[  [Mobile Chrome] › api/api-endpoints.spec.ts:419:7 › Awards API Endpoints › GET /api/awards - list awards 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      431 |     if (response.status() === 200) {
      432 |       const data = await response.json()
    > 433 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      434 |     }
      435 |   })
      436 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:433:35
]]>
</failure>
</testcase>
<testcase name="Dashboard API Endpoints › GET /api/dashboard/metrics - dashboard metrics" classname="api/api-endpoints.spec.ts" time="0.979">
<failure message="api-endpoints.spec.ts:439:7 GET /api/dashboard/metrics - dashboard metrics" type="FAILURE">
<![CDATA[  [Mobile Chrome] › api/api-endpoints.spec.ts:439:7 › Dashboard API Endpoints › GET /api/dashboard/metrics - dashboard metrics 

    Error: expect(received).toHaveProperty(path)

    Expected path: "totalAnalysts"
    Received path: []

    Received value: {"cacheAge": 24, "cached": true, "data": {"activeAlerts": 0, "activeAnalysts": 0, "analystsAddedPast90Days": 0, "averageInfluenceScore": 0, "briefingFollowUps": 0, "briefingsDue": 0, "briefingsPast90Days": 0, "briefingsPlanned": 0, "briefingsYTD": 0, "cacheDuration": 300, "cacheEnabled": true, "calendarMeetings": 0, "completedBriefings": 0, "contentItemsPast90Days": 0, "coverageByTier": {"HIGH": 0, "LOW": 0, "MEDIUM": 0, "VERY_HIGH": 0}, "engagementRate": 0, "expectedPerformanceGain": "80-90% faster dashboard loads", "newAnalysts": [], "newsletterEngagements": 0, "newslettersSentPast90Days": 0, "notificationsYTD": 0, "publishedContent": 0, "queryOptimization": "Cached with Supabase queries", "recentContentItems": [{"createdAt": "2025-08-11T10:11:25.973Z", "id": "sample-1", "status": "published", "title": "People Analytics: Driving Data-Driven HR Decisions", "type": "RESEARCH_REPORT"}, {"createdAt": "2025-08-10T10:11:25.973Z", "id": "sample-2", "status": "published", "title": "Remote Work Best Practices for HR Leaders", "type": "BLOG_POST"}, {"createdAt": "2025-08-09T10:11:25.973Z", "id": "sample-3", "status": "published", "title": "Employee Experience Platforms: Market Analysis", "type": "WHITEPAPER"}], "recentInteractions": 0, "relationshipHealth": 3, "relevantSocialPosts": 0, "totalAnalysts": 0, "upcomingPublications": 0}, "success": true}

      451 |     if (response.status() === 200) {
      452 |       const data = await response.json()
    > 453 |       expect(data).toHaveProperty('totalAnalysts')
          |                    ^
      454 |       expect(data).toHaveProperty('activeAnalysts')
      455 |       expect(data).toHaveProperty('engagementRate')
      456 |     }
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:453:20
]]>
</failure>
</testcase>
<testcase name="Dashboard API Endpoints › GET /api/dashboard/top-analysts - top analysts" classname="api/api-endpoints.spec.ts" time="0.34">
<failure message="api-endpoints.spec.ts:459:7 GET /api/dashboard/top-analysts - top analysts" type="FAILURE">
<![CDATA[  [Mobile Chrome] › api/api-endpoints.spec.ts:459:7 › Dashboard API Endpoints › GET /api/dashboard/top-analysts - top analysts 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      471 |     if (response.status() === 200) {
      472 |       const data = await response.json()
    > 473 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      474 |     }
      475 |   })
      476 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:473:35
]]>
</failure>
</testcase>
<testcase name="Dashboard API Endpoints › GET /api/dashboard/recent-activity - recent activity" classname="api/api-endpoints.spec.ts" time="0.353">
<failure message="api-endpoints.spec.ts:477:7 GET /api/dashboard/recent-activity - recent activity" type="FAILURE">
<![CDATA[  [Mobile Chrome] › api/api-endpoints.spec.ts:477:7 › Dashboard API Endpoints › GET /api/dashboard/recent-activity - recent activity 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      489 |     if (response.status() === 200) {
      490 |       const data = await response.json()
    > 491 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      492 |     }
      493 |   })
      494 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:491:35
]]>
</failure>
</testcase>
<testcase name="Briefings API Endpoints › GET /api/briefings - list briefings" classname="api/api-endpoints.spec.ts" time="0.271">
<failure message="api-endpoints.spec.ts:497:7 GET /api/briefings - list briefings" type="FAILURE">
<![CDATA[  [Mobile Chrome] › api/api-endpoints.spec.ts:497:7 › Briefings API Endpoints › GET /api/briefings - list briefings 

    Error: expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [200, 401]

      505 |     
      506 |     // Should return 200 for success or 401 for auth failure
    > 507 |     expect([200, 401]).toContain(response.status())
          |                        ^
      508 |     
      509 |     if (response.status() === 200) {
      510 |       const data = await response.json()
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:507:24
]]>
</failure>
</testcase>
<testcase name="Social Media API Endpoints › GET /api/social-media/recent-activity - recent social activity" classname="api/api-endpoints.spec.ts" time="0.579">
<failure message="api-endpoints.spec.ts:517:7 GET /api/social-media/recent-activity - recent social activity" type="FAILURE">
<![CDATA[  [Mobile Chrome] › api/api-endpoints.spec.ts:517:7 › Social Media API Endpoints › GET /api/social-media/recent-activity - recent social activity 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      529 |     if (response.status() === 200) {
      530 |       const data = await response.json()
    > 531 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      532 |     }
      533 |   })
      534 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:531:35
]]>
</failure>
</testcase>
<testcase name="Error Handling › 404 for non-existent endpoints" classname="api/api-endpoints.spec.ts" time="0.156">
</testcase>
<testcase name="Error Handling › 405 for wrong HTTP methods" classname="api/api-endpoints.spec.ts" time="0.14">
</testcase>
<testcase name="Error Handling › 400 for malformed JSON" classname="api/api-endpoints.spec.ts" time="0.246">
</testcase>
<testcase name="Rate Limiting and Security › API endpoints have appropriate CORS headers" classname="api/api-endpoints.spec.ts" time="0.002">
<failure message="api-endpoints.spec.ts:565:7 API endpoints have appropriate CORS headers" type="FAILURE">
<![CDATA[  [Mobile Chrome] › api/api-endpoints.spec.ts:565:7 › Rate Limiting and Security › API endpoints have appropriate CORS headers 

    TypeError: request.options is not a function

      564 | test.describe('Rate Limiting and Security', () => {
      565 |   test('API endpoints have appropriate CORS headers', async ({ request }) => {
    > 566 |     const response = await request.options(`${BASE_URL}/api/settings/general`)
          |                                    ^
      567 |     
      568 |     const headers = response.headers()
      569 |     // Check for security headers (these may vary based on your implementation)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:566:36
]]>
</failure>
</testcase>
<testcase name="Rate Limiting and Security › API endpoints reject requests with invalid content types" classname="api/api-endpoints.spec.ts" time="0.439">
<failure message="api-endpoints.spec.ts:573:7 API endpoints reject requests with invalid content types" type="FAILURE">
<![CDATA[  [Mobile Chrome] › api/api-endpoints.spec.ts:573:7 › Rate Limiting and Security › API endpoints reject requests with invalid content types 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 500

      582 |     })
      583 |     
    > 584 |     expect(response.status()).toBe(400)
          |                               ^
      585 |   })
      586 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:584:31
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="api/api-endpoints.spec.ts" timestamp="2025-08-11T10:10:51.248Z" hostname="Mobile Safari" tests="30" failures="19" skipped="0" time="28.59" errors="0">
<testcase name="Authentication API Endpoints › POST /api/auth/login - successful login" classname="api/api-endpoints.spec.ts" time="0.324">
<failure message="api-endpoints.spec.ts:32:7 POST /api/auth/login - successful login" type="FAILURE">
<![CDATA[  [Mobile Safari] › api/api-endpoints.spec.ts:32:7 › Authentication API Endpoints › POST /api/auth/login - successful login 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      38 |     })
      39 |     
    > 40 |     expect(response.status()).toBe(200)
         |                               ^
      41 |     
      42 |     const data = await response.json()
      43 |     expect(data).toHaveProperty('success', true)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:40:31
]]>
</failure>
</testcase>
<testcase name="Authentication API Endpoints › POST /api/auth/login - invalid credentials" classname="api/api-endpoints.spec.ts" time="0.317">
<failure message="api-endpoints.spec.ts:47:7 POST /api/auth/login - invalid credentials" type="FAILURE">
<![CDATA[  [Mobile Safari] › api/api-endpoints.spec.ts:47:7 › Authentication API Endpoints › POST /api/auth/login - invalid credentials 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 403

      53 |     })
      54 |     
    > 55 |     expect(response.status()).toBe(401)
         |                               ^
      56 |     
      57 |     const data = await response.json()
      58 |     expect(data).toHaveProperty('success', false)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:55:31
]]>
</failure>
</testcase>
<testcase name="Authentication API Endpoints › POST /api/auth/analyst - analyst login" classname="api/api-endpoints.spec.ts" time="0.492">
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/general - requires authentication" classname="api/api-endpoints.spec.ts" time="0.304">
<failure message="api-endpoints.spec.ts:76:7 GET /api/settings/general - requires authentication" type="FAILURE">
<![CDATA[  [Mobile Safari] › api/api-endpoints.spec.ts:76:7 › Settings API Endpoints › GET /api/settings/general - requires authentication 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 200

      78 |     const response = await request.get(`${BASE_URL}/api/settings/general`)
      79 |     
    > 80 |     expect(response.status()).toBe(401)
         |                               ^
      81 |     
      82 |     const data = await response.json()
      83 |     expect(data).toHaveProperty('error', 'Authentication required')
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:80:31
]]>
</failure>
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/general - authenticated request" classname="api/api-endpoints.spec.ts" time="1.015">
</testcase>
<testcase name="Settings API Endpoints › PUT /api/settings/general - update settings" classname="api/api-endpoints.spec.ts" time="0.723">
</testcase>
<testcase name="Settings API Endpoints › PUT /api/settings/general - validation errors" classname="api/api-endpoints.spec.ts" time="0.594">
<failure message="api-endpoints.spec.ts:133:7 PUT /api/settings/general - validation errors" type="FAILURE">
<![CDATA[  [Mobile Safari] › api/api-endpoints.spec.ts:133:7 › Settings API Endpoints › PUT /api/settings/general - validation errors 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 401

      145 |     })
      146 |     
    > 147 |     expect(response.status()).toBe(400)
          |                               ^
      148 |     
      149 |     const data = await response.json()
      150 |     expect(data).toHaveProperty('error')
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:147:31
]]>
</failure>
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/calendar-connections - requires authentication" classname="api/api-endpoints.spec.ts" time="0.322">
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/calendar-connections - authenticated request" classname="api/api-endpoints.spec.ts" time="0.568">
<failure message="api-endpoints.spec.ts:162:7 GET /api/settings/calendar-connections - authenticated request" type="FAILURE">
<![CDATA[  [Mobile Safari] › api/api-endpoints.spec.ts:162:7 › Settings API Endpoints › GET /api/settings/calendar-connections - authenticated request 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      169 |     })
      170 |
    > 171 |     expect(response.status()).toBe(200)
          |                               ^
      172 |
      173 |     const body = await response.json()
      174 |     expect(body).toHaveProperty('success', true)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:171:31
]]>
</failure>
</testcase>
<testcase name="Analysts API Endpoints › GET /api/analysts - list analysts" classname="api/api-endpoints.spec.ts" time="0.489">
<failure message="api-endpoints.spec.ts:191:7 GET /api/analysts - list analysts" type="FAILURE">
<![CDATA[  [Mobile Safari] › api/api-endpoints.spec.ts:191:7 › Analysts API Endpoints › GET /api/analysts - list analysts 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      203 |     if (response.status() === 200) {
      204 |       const data = await response.json()
    > 205 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      206 |     }
      207 |   })
      208 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:205:35
]]>
</failure>
</testcase>
<testcase name="Analysts API Endpoints › POST /api/analysts - create analyst" classname="api/api-endpoints.spec.ts" time="0.668">
<failure message="api-endpoints.spec.ts:209:7 POST /api/analysts - create analyst" type="FAILURE">
<![CDATA[  [Mobile Safari] › api/api-endpoints.spec.ts:209:7 › Analysts API Endpoints › POST /api/analysts - create analyst 

    Error: expect(received).toContain(expected) // indexOf

    Expected value: 409
    Received array: [201, 401]

      224 |     
      225 |     // Should return 201 for success or 401 for auth failure
    > 226 |     expect([201, 401]).toContain(response.status())
          |                        ^
      227 |     
      228 |     if (response.status() === 201) {
      229 |       const data = await response.json()
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:226:24
]]>
</failure>
</testcase>
<testcase name="Analysts API Endpoints › POST /api/analysts - validation errors" classname="api/api-endpoints.spec.ts" time="0.537">
</testcase>
<testcase name="Analysts API Endpoints › GET /api/analysts/[id] - get specific analyst" classname="api/api-endpoints.spec.ts" time="0.297">
</testcase>
<testcase name="Analysts API Endpoints › POST /api/analysts/bulk - bulk create analysts" classname="api/api-endpoints.spec.ts" time="1.934">
<failure message="api-endpoints.spec.ts:284:7 POST /api/analysts/bulk - bulk create analysts" type="FAILURE">
<![CDATA[  [Mobile Safari] › api/api-endpoints.spec.ts:284:7 › Analysts API Endpoints › POST /api/analysts/bulk - bulk create analysts 

    Error: expect(received).toHaveProperty(path)

    Expected path: "created"
    Received path: []

    Received value: {"data": {"count": 0, "created": [], "errors": ["Failed to create analyst bulk1@example.com: Could not find the 'linkedIn' column of 'analysts' in the schema cache", "Failed to create analyst bulk2@example.com: Could not find the 'linkedIn' column of 'analysts' in the schema cache"]}, "success": true}

      313 |       const data = await response.json()
      314 |       expect(data).toHaveProperty('success', true)
    > 315 |       expect(data).toHaveProperty('created')
          |                    ^
      316 |     }
      317 |   })
      318 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:315:20
]]>
</failure>
</testcase>
<testcase name="Publications API Endpoints › GET /api/publications - list publications" classname="api/api-endpoints.spec.ts" time="1.117">
<failure message="api-endpoints.spec.ts:321:7 GET /api/publications - list publications" type="FAILURE">
<![CDATA[  [Mobile Safari] › api/api-endpoints.spec.ts:321:7 › Publications API Endpoints › GET /api/publications - list publications 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      333 |     if (response.status() === 200) {
      334 |       const data = await response.json()
    > 335 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      336 |     }
      337 |   })
      338 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:335:35
]]>
</failure>
</testcase>
<testcase name="Publications API Endpoints › POST /api/publications - create publication" classname="api/api-endpoints.spec.ts" time="1.522">
</testcase>
<testcase name="Publications API Endpoints › GET /api/publications/discover - publication discovery" classname="api/api-endpoints.spec.ts" time="10.487">
<failure message="api-endpoints.spec.ts:359:7 GET /api/publications/discover - publication discovery" type="FAILURE">
<![CDATA[  [Mobile Safari] › api/api-endpoints.spec.ts:359:7 › Publications API Endpoints › GET /api/publications/discover - publication discovery 

    TimeoutError: apiRequestContext.get: Timeout 10000ms exceeded.
    Call log:
      - → GET http://localhost:3000/api/publications/discover
        - user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Mobile/15E148 Safari/604.1
        - accept: */*
        - accept-encoding: gzip,deflate,br


      360 |     const authCookie = await getAuthCookie(request)
      361 |     
    > 362 |     const response = await request.get(`${BASE_URL}/api/publications/discover`, {
          |                                    ^
      363 |       headers: {
      364 |         'Cookie': authCookie
      365 |       }
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:362:36
]]>
</failure>
</testcase>
<testcase name="Events API Endpoints › GET /api/events - list events" classname="api/api-endpoints.spec.ts" time="0.309">
<failure message="api-endpoints.spec.ts:380:7 GET /api/events - list events" type="FAILURE">
<![CDATA[  [Mobile Safari] › api/api-endpoints.spec.ts:380:7 › Events API Endpoints › GET /api/events - list events 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      392 |     if (response.status() === 200) {
      393 |       const data = await response.json()
    > 394 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      395 |     }
      396 |   })
      397 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:394:35
]]>
</failure>
</testcase>
<testcase name="Events API Endpoints › POST /api/events - create event" classname="api/api-endpoints.spec.ts" time="0.399">
</testcase>
<testcase name="Awards API Endpoints › GET /api/awards - list awards" classname="api/api-endpoints.spec.ts" time="0.807">
<failure message="api-endpoints.spec.ts:419:7 GET /api/awards - list awards" type="FAILURE">
<![CDATA[  [Mobile Safari] › api/api-endpoints.spec.ts:419:7 › Awards API Endpoints › GET /api/awards - list awards 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      431 |     if (response.status() === 200) {
      432 |       const data = await response.json()
    > 433 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      434 |     }
      435 |   })
      436 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:433:35
]]>
</failure>
</testcase>
<testcase name="Dashboard API Endpoints › GET /api/dashboard/metrics - dashboard metrics" classname="api/api-endpoints.spec.ts" time="1.563">
<failure message="api-endpoints.spec.ts:439:7 GET /api/dashboard/metrics - dashboard metrics" type="FAILURE">
<![CDATA[  [Mobile Safari] › api/api-endpoints.spec.ts:439:7 › Dashboard API Endpoints › GET /api/dashboard/metrics - dashboard metrics 

    Error: expect(received).toHaveProperty(path)

    Expected path: "totalAnalysts"
    Received path: []

    Received value: {"cacheAge": 0, "cached": false, "data": {"activeAlerts": 0, "activeAnalysts": 0, "analystsAddedPast90Days": 0, "averageInfluenceScore": 0, "briefingFollowUps": 0, "briefingsDue": 0, "briefingsPast90Days": 0, "briefingsPlanned": 0, "briefingsYTD": 0, "cacheDuration": 300, "cacheEnabled": true, "calendarMeetings": 0, "completedBriefings": 0, "contentItemsPast90Days": 0, "coverageByTier": {"HIGH": 0, "LOW": 0, "MEDIUM": 0, "VERY_HIGH": 0}, "engagementRate": 0, "expectedPerformanceGain": "80-90% faster dashboard loads", "newAnalysts": [], "newsletterEngagements": 0, "newslettersSentPast90Days": 0, "notificationsYTD": 0, "publishedContent": 0, "queryOptimization": "Cached with Supabase queries", "recentContentItems": [{"createdAt": "2025-08-11T10:11:58.053Z", "id": "sample-1", "status": "published", "title": "People Analytics: Driving Data-Driven HR Decisions", "type": "RESEARCH_REPORT"}, {"createdAt": "2025-08-10T10:11:58.053Z", "id": "sample-2", "status": "published", "title": "Remote Work Best Practices for HR Leaders", "type": "BLOG_POST"}, {"createdAt": "2025-08-09T10:11:58.053Z", "id": "sample-3", "status": "published", "title": "Employee Experience Platforms: Market Analysis", "type": "WHITEPAPER"}], "recentInteractions": 0, "relationshipHealth": 3, "relevantSocialPosts": 0, "totalAnalysts": 0, "upcomingPublications": 0}, "success": true}

      451 |     if (response.status() === 200) {
      452 |       const data = await response.json()
    > 453 |       expect(data).toHaveProperty('totalAnalysts')
          |                    ^
      454 |       expect(data).toHaveProperty('activeAnalysts')
      455 |       expect(data).toHaveProperty('engagementRate')
      456 |     }
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:453:20
]]>
</failure>
</testcase>
<testcase name="Dashboard API Endpoints › GET /api/dashboard/top-analysts - top analysts" classname="api/api-endpoints.spec.ts" time="0.81">
<failure message="api-endpoints.spec.ts:459:7 GET /api/dashboard/top-analysts - top analysts" type="FAILURE">
<![CDATA[  [Mobile Safari] › api/api-endpoints.spec.ts:459:7 › Dashboard API Endpoints › GET /api/dashboard/top-analysts - top analysts 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      471 |     if (response.status() === 200) {
      472 |       const data = await response.json()
    > 473 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      474 |     }
      475 |   })
      476 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:473:35
]]>
</failure>
</testcase>
<testcase name="Dashboard API Endpoints › GET /api/dashboard/recent-activity - recent activity" classname="api/api-endpoints.spec.ts" time="1.166">
<failure message="api-endpoints.spec.ts:477:7 GET /api/dashboard/recent-activity - recent activity" type="FAILURE">
<![CDATA[  [Mobile Safari] › api/api-endpoints.spec.ts:477:7 › Dashboard API Endpoints › GET /api/dashboard/recent-activity - recent activity 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      489 |     if (response.status() === 200) {
      490 |       const data = await response.json()
    > 491 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      492 |     }
      493 |   })
      494 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:491:35
]]>
</failure>
</testcase>
<testcase name="Briefings API Endpoints › GET /api/briefings - list briefings" classname="api/api-endpoints.spec.ts" time="0.361">
<failure message="api-endpoints.spec.ts:497:7 GET /api/briefings - list briefings" type="FAILURE">
<![CDATA[  [Mobile Safari] › api/api-endpoints.spec.ts:497:7 › Briefings API Endpoints › GET /api/briefings - list briefings 

    Error: expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [200, 401]

      505 |     
      506 |     // Should return 200 for success or 401 for auth failure
    > 507 |     expect([200, 401]).toContain(response.status())
          |                        ^
      508 |     
      509 |     if (response.status() === 200) {
      510 |       const data = await response.json()
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:507:24
]]>
</failure>
</testcase>
<testcase name="Social Media API Endpoints › GET /api/social-media/recent-activity - recent social activity" classname="api/api-endpoints.spec.ts" time="0.627">
<failure message="api-endpoints.spec.ts:517:7 GET /api/social-media/recent-activity - recent social activity" type="FAILURE">
<![CDATA[  [Mobile Safari] › api/api-endpoints.spec.ts:517:7 › Social Media API Endpoints › GET /api/social-media/recent-activity - recent social activity 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      529 |     if (response.status() === 200) {
      530 |       const data = await response.json()
    > 531 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      532 |     }
      533 |   })
      534 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:531:35
]]>
</failure>
</testcase>
<testcase name="Error Handling › 404 for non-existent endpoints" classname="api/api-endpoints.spec.ts" time="0.127">
</testcase>
<testcase name="Error Handling › 405 for wrong HTTP methods" classname="api/api-endpoints.spec.ts" time="0.037">
</testcase>
<testcase name="Error Handling › 400 for malformed JSON" classname="api/api-endpoints.spec.ts" time="0.231">
</testcase>
<testcase name="Rate Limiting and Security › API endpoints have appropriate CORS headers" classname="api/api-endpoints.spec.ts" time="0.002">
<failure message="api-endpoints.spec.ts:565:7 API endpoints have appropriate CORS headers" type="FAILURE">
<![CDATA[  [Mobile Safari] › api/api-endpoints.spec.ts:565:7 › Rate Limiting and Security › API endpoints have appropriate CORS headers 

    TypeError: request.options is not a function

      564 | test.describe('Rate Limiting and Security', () => {
      565 |   test('API endpoints have appropriate CORS headers', async ({ request }) => {
    > 566 |     const response = await request.options(`${BASE_URL}/api/settings/general`)
          |                                    ^
      567 |     
      568 |     const headers = response.headers()
      569 |     // Check for security headers (these may vary based on your implementation)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:566:36
]]>
</failure>
</testcase>
<testcase name="Rate Limiting and Security › API endpoints reject requests with invalid content types" classname="api/api-endpoints.spec.ts" time="0.441">
<failure message="api-endpoints.spec.ts:573:7 API endpoints reject requests with invalid content types" type="FAILURE">
<![CDATA[  [Mobile Safari] › api/api-endpoints.spec.ts:573:7 › Rate Limiting and Security › API endpoints reject requests with invalid content types 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 500

      582 |     })
      583 |     
    > 584 |     expect(response.status()).toBe(400)
          |                               ^
      585 |   })
      586 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:584:31
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="api/api-endpoints.spec.ts" timestamp="2025-08-11T10:10:51.248Z" hostname="Microsoft Edge" tests="30" failures="19" skipped="0" time="31.107" errors="0">
<testcase name="Authentication API Endpoints › POST /api/auth/login - successful login" classname="api/api-endpoints.spec.ts" time="0.305">
<failure message="api-endpoints.spec.ts:32:7 POST /api/auth/login - successful login" type="FAILURE">
<![CDATA[  [Microsoft Edge] › api/api-endpoints.spec.ts:32:7 › Authentication API Endpoints › POST /api/auth/login - successful login 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      38 |     })
      39 |     
    > 40 |     expect(response.status()).toBe(200)
         |                               ^
      41 |     
      42 |     const data = await response.json()
      43 |     expect(data).toHaveProperty('success', true)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:40:31
]]>
</failure>
</testcase>
<testcase name="Authentication API Endpoints › POST /api/auth/login - invalid credentials" classname="api/api-endpoints.spec.ts" time="0.993">
<failure message="api-endpoints.spec.ts:47:7 POST /api/auth/login - invalid credentials" type="FAILURE">
<![CDATA[  [Microsoft Edge] › api/api-endpoints.spec.ts:47:7 › Authentication API Endpoints › POST /api/auth/login - invalid credentials 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 403

      53 |     })
      54 |     
    > 55 |     expect(response.status()).toBe(401)
         |                               ^
      56 |     
      57 |     const data = await response.json()
      58 |     expect(data).toHaveProperty('success', false)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:55:31
]]>
</failure>
</testcase>
<testcase name="Authentication API Endpoints › POST /api/auth/analyst - analyst login" classname="api/api-endpoints.spec.ts" time="0.897">
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/general - requires authentication" classname="api/api-endpoints.spec.ts" time="0.461">
<failure message="api-endpoints.spec.ts:76:7 GET /api/settings/general - requires authentication" type="FAILURE">
<![CDATA[  [Microsoft Edge] › api/api-endpoints.spec.ts:76:7 › Settings API Endpoints › GET /api/settings/general - requires authentication 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 200

      78 |     const response = await request.get(`${BASE_URL}/api/settings/general`)
      79 |     
    > 80 |     expect(response.status()).toBe(401)
         |                               ^
      81 |     
      82 |     const data = await response.json()
      83 |     expect(data).toHaveProperty('error', 'Authentication required')
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:80:31
]]>
</failure>
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/general - authenticated request" classname="api/api-endpoints.spec.ts" time="0.325">
</testcase>
<testcase name="Settings API Endpoints › PUT /api/settings/general - update settings" classname="api/api-endpoints.spec.ts" time="0.392">
</testcase>
<testcase name="Settings API Endpoints › PUT /api/settings/general - validation errors" classname="api/api-endpoints.spec.ts" time="0.422">
<failure message="api-endpoints.spec.ts:133:7 PUT /api/settings/general - validation errors" type="FAILURE">
<![CDATA[  [Microsoft Edge] › api/api-endpoints.spec.ts:133:7 › Settings API Endpoints › PUT /api/settings/general - validation errors 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 401

      145 |     })
      146 |     
    > 147 |     expect(response.status()).toBe(400)
          |                               ^
      148 |     
      149 |     const data = await response.json()
      150 |     expect(data).toHaveProperty('error')
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:147:31
]]>
</failure>
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/calendar-connections - requires authentication" classname="api/api-endpoints.spec.ts" time="1.434">
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/calendar-connections - authenticated request" classname="api/api-endpoints.spec.ts" time="2.429">
<failure message="api-endpoints.spec.ts:162:7 GET /api/settings/calendar-connections - authenticated request" type="FAILURE">
<![CDATA[  [Microsoft Edge] › api/api-endpoints.spec.ts:162:7 › Settings API Endpoints › GET /api/settings/calendar-connections - authenticated request 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      169 |     })
      170 |
    > 171 |     expect(response.status()).toBe(200)
          |                               ^
      172 |
      173 |     const body = await response.json()
      174 |     expect(body).toHaveProperty('success', true)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:171:31
]]>
</failure>
</testcase>
<testcase name="Analysts API Endpoints › GET /api/analysts - list analysts" classname="api/api-endpoints.spec.ts" time="2.745">
<failure message="api-endpoints.spec.ts:191:7 GET /api/analysts - list analysts" type="FAILURE">
<![CDATA[  [Microsoft Edge] › api/api-endpoints.spec.ts:191:7 › Analysts API Endpoints › GET /api/analysts - list analysts 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      203 |     if (response.status() === 200) {
      204 |       const data = await response.json()
    > 205 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      206 |     }
      207 |   })
      208 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:205:35
]]>
</failure>
</testcase>
<testcase name="Analysts API Endpoints › POST /api/analysts - create analyst" classname="api/api-endpoints.spec.ts" time="1.442">
<failure message="api-endpoints.spec.ts:209:7 POST /api/analysts - create analyst" type="FAILURE">
<![CDATA[  [Microsoft Edge] › api/api-endpoints.spec.ts:209:7 › Analysts API Endpoints › POST /api/analysts - create analyst 

    Error: expect(received).toContain(expected) // indexOf

    Expected value: 409
    Received array: [201, 401]

      224 |     
      225 |     // Should return 201 for success or 401 for auth failure
    > 226 |     expect([201, 401]).toContain(response.status())
          |                        ^
      227 |     
      228 |     if (response.status() === 201) {
      229 |       const data = await response.json()
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:226:24
]]>
</failure>
</testcase>
<testcase name="Analysts API Endpoints › POST /api/analysts - validation errors" classname="api/api-endpoints.spec.ts" time="0.517">
</testcase>
<testcase name="Analysts API Endpoints › GET /api/analysts/[id] - get specific analyst" classname="api/api-endpoints.spec.ts" time="0.419">
</testcase>
<testcase name="Analysts API Endpoints › POST /api/analysts/bulk - bulk create analysts" classname="api/api-endpoints.spec.ts" time="0.946">
<failure message="api-endpoints.spec.ts:284:7 POST /api/analysts/bulk - bulk create analysts" type="FAILURE">
<![CDATA[  [Microsoft Edge] › api/api-endpoints.spec.ts:284:7 › Analysts API Endpoints › POST /api/analysts/bulk - bulk create analysts 

    Error: expect(received).toHaveProperty(path)

    Expected path: "created"
    Received path: []

    Received value: {"data": {"count": 0, "created": [], "errors": ["Failed to create analyst bulk1@example.com: Could not find the 'linkedIn' column of 'analysts' in the schema cache", "Failed to create analyst bulk2@example.com: Could not find the 'linkedIn' column of 'analysts' in the schema cache"]}, "success": true}

      313 |       const data = await response.json()
      314 |       expect(data).toHaveProperty('success', true)
    > 315 |       expect(data).toHaveProperty('created')
          |                    ^
      316 |     }
      317 |   })
      318 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:315:20
]]>
</failure>
</testcase>
<testcase name="Publications API Endpoints › GET /api/publications - list publications" classname="api/api-endpoints.spec.ts" time="0.718">
<failure message="api-endpoints.spec.ts:321:7 GET /api/publications - list publications" type="FAILURE">
<![CDATA[  [Microsoft Edge] › api/api-endpoints.spec.ts:321:7 › Publications API Endpoints › GET /api/publications - list publications 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      333 |     if (response.status() === 200) {
      334 |       const data = await response.json()
    > 335 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      336 |     }
      337 |   })
      338 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:335:35
]]>
</failure>
</testcase>
<testcase name="Publications API Endpoints › POST /api/publications - create publication" classname="api/api-endpoints.spec.ts" time="0.253">
</testcase>
<testcase name="Publications API Endpoints › GET /api/publications/discover - publication discovery" classname="api/api-endpoints.spec.ts" time="10.431">
<failure message="api-endpoints.spec.ts:359:7 GET /api/publications/discover - publication discovery" type="FAILURE">
<![CDATA[  [Microsoft Edge] › api/api-endpoints.spec.ts:359:7 › Publications API Endpoints › GET /api/publications/discover - publication discovery 

    TimeoutError: apiRequestContext.get: Timeout 10000ms exceeded.
    Call log:
      - → GET http://localhost:3000/api/publications/discover
        - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.7258.5 Safari/537.36 Edg/139.0.7258.5
        - accept: */*
        - accept-encoding: gzip,deflate,br


      360 |     const authCookie = await getAuthCookie(request)
      361 |     
    > 362 |     const response = await request.get(`${BASE_URL}/api/publications/discover`, {
          |                                    ^
      363 |       headers: {
      364 |         'Cookie': authCookie
      365 |       }
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:362:36
]]>
</failure>
</testcase>
<testcase name="Events API Endpoints › GET /api/events - list events" classname="api/api-endpoints.spec.ts" time="0.454">
<failure message="api-endpoints.spec.ts:380:7 GET /api/events - list events" type="FAILURE">
<![CDATA[  [Microsoft Edge] › api/api-endpoints.spec.ts:380:7 › Events API Endpoints › GET /api/events - list events 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      392 |     if (response.status() === 200) {
      393 |       const data = await response.json()
    > 394 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      395 |     }
      396 |   })
      397 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:394:35
]]>
</failure>
</testcase>
<testcase name="Events API Endpoints › POST /api/events - create event" classname="api/api-endpoints.spec.ts" time="0.251">
</testcase>
<testcase name="Awards API Endpoints › GET /api/awards - list awards" classname="api/api-endpoints.spec.ts" time="0.85">
<failure message="api-endpoints.spec.ts:419:7 GET /api/awards - list awards" type="FAILURE">
<![CDATA[  [Microsoft Edge] › api/api-endpoints.spec.ts:419:7 › Awards API Endpoints › GET /api/awards - list awards 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      431 |     if (response.status() === 200) {
      432 |       const data = await response.json()
    > 433 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      434 |     }
      435 |   })
      436 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:433:35
]]>
</failure>
</testcase>
<testcase name="Dashboard API Endpoints › GET /api/dashboard/metrics - dashboard metrics" classname="api/api-endpoints.spec.ts" time="0.553">
<failure message="api-endpoints.spec.ts:439:7 GET /api/dashboard/metrics - dashboard metrics" type="FAILURE">
<![CDATA[  [Microsoft Edge] › api/api-endpoints.spec.ts:439:7 › Dashboard API Endpoints › GET /api/dashboard/metrics - dashboard metrics 

    Error: expect(received).toHaveProperty(path)

    Expected path: "totalAnalysts"
    Received path: []

    Received value: {"cacheAge": 10, "cached": true, "data": {"activeAlerts": 0, "activeAnalysts": 0, "analystsAddedPast90Days": 0, "averageInfluenceScore": 0, "briefingFollowUps": 0, "briefingsDue": 0, "briefingsPast90Days": 0, "briefingsPlanned": 0, "briefingsYTD": 0, "cacheDuration": 300, "cacheEnabled": true, "calendarMeetings": 0, "completedBriefings": 0, "contentItemsPast90Days": 0, "coverageByTier": {"HIGH": 0, "LOW": 0, "MEDIUM": 0, "VERY_HIGH": 0}, "engagementRate": 0, "expectedPerformanceGain": "80-90% faster dashboard loads", "newAnalysts": [], "newsletterEngagements": 0, "newslettersSentPast90Days": 0, "notificationsYTD": 0, "publishedContent": 0, "queryOptimization": "Cached with Supabase queries", "recentContentItems": [{"createdAt": "2025-08-11T10:11:58.053Z", "id": "sample-1", "status": "published", "title": "People Analytics: Driving Data-Driven HR Decisions", "type": "RESEARCH_REPORT"}, {"createdAt": "2025-08-10T10:11:58.053Z", "id": "sample-2", "status": "published", "title": "Remote Work Best Practices for HR Leaders", "type": "BLOG_POST"}, {"createdAt": "2025-08-09T10:11:58.053Z", "id": "sample-3", "status": "published", "title": "Employee Experience Platforms: Market Analysis", "type": "WHITEPAPER"}], "recentInteractions": 0, "relationshipHealth": 3, "relevantSocialPosts": 0, "totalAnalysts": 0, "upcomingPublications": 0}, "success": true}

      451 |     if (response.status() === 200) {
      452 |       const data = await response.json()
    > 453 |       expect(data).toHaveProperty('totalAnalysts')
          |                    ^
      454 |       expect(data).toHaveProperty('activeAnalysts')
      455 |       expect(data).toHaveProperty('engagementRate')
      456 |     }
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:453:20
]]>
</failure>
</testcase>
<testcase name="Dashboard API Endpoints › GET /api/dashboard/top-analysts - top analysts" classname="api/api-endpoints.spec.ts" time="0.685">
<failure message="api-endpoints.spec.ts:459:7 GET /api/dashboard/top-analysts - top analysts" type="FAILURE">
<![CDATA[  [Microsoft Edge] › api/api-endpoints.spec.ts:459:7 › Dashboard API Endpoints › GET /api/dashboard/top-analysts - top analysts 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      471 |     if (response.status() === 200) {
      472 |       const data = await response.json()
    > 473 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      474 |     }
      475 |   })
      476 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:473:35
]]>
</failure>
</testcase>
<testcase name="Dashboard API Endpoints › GET /api/dashboard/recent-activity - recent activity" classname="api/api-endpoints.spec.ts" time="0.537">
<failure message="api-endpoints.spec.ts:477:7 GET /api/dashboard/recent-activity - recent activity" type="FAILURE">
<![CDATA[  [Microsoft Edge] › api/api-endpoints.spec.ts:477:7 › Dashboard API Endpoints › GET /api/dashboard/recent-activity - recent activity 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      489 |     if (response.status() === 200) {
      490 |       const data = await response.json()
    > 491 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      492 |     }
      493 |   })
      494 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:491:35
]]>
</failure>
</testcase>
<testcase name="Briefings API Endpoints › GET /api/briefings - list briefings" classname="api/api-endpoints.spec.ts" time="0.322">
<failure message="api-endpoints.spec.ts:497:7 GET /api/briefings - list briefings" type="FAILURE">
<![CDATA[  [Microsoft Edge] › api/api-endpoints.spec.ts:497:7 › Briefings API Endpoints › GET /api/briefings - list briefings 

    Error: expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [200, 401]

      505 |     
      506 |     // Should return 200 for success or 401 for auth failure
    > 507 |     expect([200, 401]).toContain(response.status())
          |                        ^
      508 |     
      509 |     if (response.status() === 200) {
      510 |       const data = await response.json()
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:507:24
]]>
</failure>
</testcase>
<testcase name="Social Media API Endpoints › GET /api/social-media/recent-activity - recent social activity" classname="api/api-endpoints.spec.ts" time="0.818">
<failure message="api-endpoints.spec.ts:517:7 GET /api/social-media/recent-activity - recent social activity" type="FAILURE">
<![CDATA[  [Microsoft Edge] › api/api-endpoints.spec.ts:517:7 › Social Media API Endpoints › GET /api/social-media/recent-activity - recent social activity 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      529 |     if (response.status() === 200) {
      530 |       const data = await response.json()
    > 531 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      532 |     }
      533 |   })
      534 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:531:35
]]>
</failure>
</testcase>
<testcase name="Error Handling › 404 for non-existent endpoints" classname="api/api-endpoints.spec.ts" time="0.331">
</testcase>
<testcase name="Error Handling › 405 for wrong HTTP methods" classname="api/api-endpoints.spec.ts" time="0.296">
</testcase>
<testcase name="Error Handling › 400 for malformed JSON" classname="api/api-endpoints.spec.ts" time="0.449">
</testcase>
<testcase name="Rate Limiting and Security › API endpoints have appropriate CORS headers" classname="api/api-endpoints.spec.ts" time="0.002">
<failure message="api-endpoints.spec.ts:565:7 API endpoints have appropriate CORS headers" type="FAILURE">
<![CDATA[  [Microsoft Edge] › api/api-endpoints.spec.ts:565:7 › Rate Limiting and Security › API endpoints have appropriate CORS headers 

    TypeError: request.options is not a function

      564 | test.describe('Rate Limiting and Security', () => {
      565 |   test('API endpoints have appropriate CORS headers', async ({ request }) => {
    > 566 |     const response = await request.options(`${BASE_URL}/api/settings/general`)
          |                                    ^
      567 |     
      568 |     const headers = response.headers()
      569 |     // Check for security headers (these may vary based on your implementation)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:566:36
]]>
</failure>
</testcase>
<testcase name="Rate Limiting and Security › API endpoints reject requests with invalid content types" classname="api/api-endpoints.spec.ts" time="0.43">
<failure message="api-endpoints.spec.ts:573:7 API endpoints reject requests with invalid content types" type="FAILURE">
<![CDATA[  [Microsoft Edge] › api/api-endpoints.spec.ts:573:7 › Rate Limiting and Security › API endpoints reject requests with invalid content types 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 500

      582 |     })
      583 |     
    > 584 |     expect(response.status()).toBe(400)
          |                               ^
      585 |   })
      586 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:584:31
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="api/api-endpoints.spec.ts" timestamp="2025-08-11T10:10:51.248Z" hostname="Google Chrome" tests="30" failures="19" skipped="0" time="43.906" errors="0">
<testcase name="Authentication API Endpoints › POST /api/auth/login - successful login" classname="api/api-endpoints.spec.ts" time="0.377">
<failure message="api-endpoints.spec.ts:32:7 POST /api/auth/login - successful login" type="FAILURE">
<![CDATA[  [Google Chrome] › api/api-endpoints.spec.ts:32:7 › Authentication API Endpoints › POST /api/auth/login - successful login 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      38 |     })
      39 |     
    > 40 |     expect(response.status()).toBe(200)
         |                               ^
      41 |     
      42 |     const data = await response.json()
      43 |     expect(data).toHaveProperty('success', true)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:40:31
]]>
</failure>
</testcase>
<testcase name="Authentication API Endpoints › POST /api/auth/login - invalid credentials" classname="api/api-endpoints.spec.ts" time="0.33">
<failure message="api-endpoints.spec.ts:47:7 POST /api/auth/login - invalid credentials" type="FAILURE">
<![CDATA[  [Google Chrome] › api/api-endpoints.spec.ts:47:7 › Authentication API Endpoints › POST /api/auth/login - invalid credentials 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 403

      53 |     })
      54 |     
    > 55 |     expect(response.status()).toBe(401)
         |                               ^
      56 |     
      57 |     const data = await response.json()
      58 |     expect(data).toHaveProperty('success', false)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:55:31
]]>
</failure>
</testcase>
<testcase name="Authentication API Endpoints › POST /api/auth/analyst - analyst login" classname="api/api-endpoints.spec.ts" time="0.629">
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/general - requires authentication" classname="api/api-endpoints.spec.ts" time="0.507">
<failure message="api-endpoints.spec.ts:76:7 GET /api/settings/general - requires authentication" type="FAILURE">
<![CDATA[  [Google Chrome] › api/api-endpoints.spec.ts:76:7 › Settings API Endpoints › GET /api/settings/general - requires authentication 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 200

      78 |     const response = await request.get(`${BASE_URL}/api/settings/general`)
      79 |     
    > 80 |     expect(response.status()).toBe(401)
         |                               ^
      81 |     
      82 |     const data = await response.json()
      83 |     expect(data).toHaveProperty('error', 'Authentication required')
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:80:31
]]>
</failure>
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/general - authenticated request" classname="api/api-endpoints.spec.ts" time="6.591">
</testcase>
<testcase name="Settings API Endpoints › PUT /api/settings/general - update settings" classname="api/api-endpoints.spec.ts" time="0.472">
</testcase>
<testcase name="Settings API Endpoints › PUT /api/settings/general - validation errors" classname="api/api-endpoints.spec.ts" time="6.127">
<failure message="api-endpoints.spec.ts:133:7 PUT /api/settings/general - validation errors" type="FAILURE">
<![CDATA[  [Google Chrome] › api/api-endpoints.spec.ts:133:7 › Settings API Endpoints › PUT /api/settings/general - validation errors 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 401

      145 |     })
      146 |     
    > 147 |     expect(response.status()).toBe(400)
          |                               ^
      148 |     
      149 |     const data = await response.json()
      150 |     expect(data).toHaveProperty('error')
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:147:31
]]>
</failure>
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/calendar-connections - requires authentication" classname="api/api-endpoints.spec.ts" time="0.206">
</testcase>
<testcase name="Settings API Endpoints › GET /api/settings/calendar-connections - authenticated request" classname="api/api-endpoints.spec.ts" time="5.869">
<failure message="api-endpoints.spec.ts:162:7 GET /api/settings/calendar-connections - authenticated request" type="FAILURE">
<![CDATA[  [Google Chrome] › api/api-endpoints.spec.ts:162:7 › Settings API Endpoints › GET /api/settings/calendar-connections - authenticated request 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      169 |     })
      170 |
    > 171 |     expect(response.status()).toBe(200)
          |                               ^
      172 |
      173 |     const body = await response.json()
      174 |     expect(body).toHaveProperty('success', true)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:171:31
]]>
</failure>
</testcase>
<testcase name="Analysts API Endpoints › GET /api/analysts - list analysts" classname="api/api-endpoints.spec.ts" time="1.607">
<failure message="api-endpoints.spec.ts:191:7 GET /api/analysts - list analysts" type="FAILURE">
<![CDATA[  [Google Chrome] › api/api-endpoints.spec.ts:191:7 › Analysts API Endpoints › GET /api/analysts - list analysts 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      203 |     if (response.status() === 200) {
      204 |       const data = await response.json()
    > 205 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      206 |     }
      207 |   })
      208 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:205:35
]]>
</failure>
</testcase>
<testcase name="Analysts API Endpoints › POST /api/analysts - create analyst" classname="api/api-endpoints.spec.ts" time="1.525">
<failure message="api-endpoints.spec.ts:209:7 POST /api/analysts - create analyst" type="FAILURE">
<![CDATA[  [Google Chrome] › api/api-endpoints.spec.ts:209:7 › Analysts API Endpoints › POST /api/analysts - create analyst 

    Error: expect(received).toContain(expected) // indexOf

    Expected value: 409
    Received array: [201, 401]

      224 |     
      225 |     // Should return 201 for success or 401 for auth failure
    > 226 |     expect([201, 401]).toContain(response.status())
          |                        ^
      227 |     
      228 |     if (response.status() === 201) {
      229 |       const data = await response.json()
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:226:24
]]>
</failure>
</testcase>
<testcase name="Analysts API Endpoints › POST /api/analysts - validation errors" classname="api/api-endpoints.spec.ts" time="0.978">
</testcase>
<testcase name="Analysts API Endpoints › GET /api/analysts/[id] - get specific analyst" classname="api/api-endpoints.spec.ts" time="1.333">
</testcase>
<testcase name="Analysts API Endpoints › POST /api/analysts/bulk - bulk create analysts" classname="api/api-endpoints.spec.ts" time="0.791">
<failure message="api-endpoints.spec.ts:284:7 POST /api/analysts/bulk - bulk create analysts" type="FAILURE">
<![CDATA[  [Google Chrome] › api/api-endpoints.spec.ts:284:7 › Analysts API Endpoints › POST /api/analysts/bulk - bulk create analysts 

    Error: expect(received).toHaveProperty(path)

    Expected path: "created"
    Received path: []

    Received value: {"data": {"count": 0, "created": [], "errors": ["Failed to create analyst bulk1@example.com: Could not find the 'linkedIn' column of 'analysts' in the schema cache", "Failed to create analyst bulk2@example.com: Could not find the 'linkedIn' column of 'analysts' in the schema cache"]}, "success": true}

      313 |       const data = await response.json()
      314 |       expect(data).toHaveProperty('success', true)
    > 315 |       expect(data).toHaveProperty('created')
          |                    ^
      316 |     }
      317 |   })
      318 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:315:20
]]>
</failure>
</testcase>
<testcase name="Publications API Endpoints › GET /api/publications - list publications" classname="api/api-endpoints.spec.ts" time="0.63">
<failure message="api-endpoints.spec.ts:321:7 GET /api/publications - list publications" type="FAILURE">
<![CDATA[  [Google Chrome] › api/api-endpoints.spec.ts:321:7 › Publications API Endpoints › GET /api/publications - list publications 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      333 |     if (response.status() === 200) {
      334 |       const data = await response.json()
    > 335 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      336 |     }
      337 |   })
      338 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:335:35
]]>
</failure>
</testcase>
<testcase name="Publications API Endpoints › POST /api/publications - create publication" classname="api/api-endpoints.spec.ts" time="0.358">
</testcase>
<testcase name="Publications API Endpoints › GET /api/publications/discover - publication discovery" classname="api/api-endpoints.spec.ts" time="10.169">
<failure message="api-endpoints.spec.ts:359:7 GET /api/publications/discover - publication discovery" type="FAILURE">
<![CDATA[  [Google Chrome] › api/api-endpoints.spec.ts:359:7 › Publications API Endpoints › GET /api/publications/discover - publication discovery 

    TimeoutError: apiRequestContext.get: Timeout 10000ms exceeded.
    Call log:
      - → GET http://localhost:3000/api/publications/discover
        - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.7258.5 Safari/537.36
        - accept: */*
        - accept-encoding: gzip,deflate,br


      360 |     const authCookie = await getAuthCookie(request)
      361 |     
    > 362 |     const response = await request.get(`${BASE_URL}/api/publications/discover`, {
          |                                    ^
      363 |       headers: {
      364 |         'Cookie': authCookie
      365 |       }
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:362:36
]]>
</failure>
</testcase>
<testcase name="Events API Endpoints › GET /api/events - list events" classname="api/api-endpoints.spec.ts" time="0.382">
<failure message="api-endpoints.spec.ts:380:7 GET /api/events - list events" type="FAILURE">
<![CDATA[  [Google Chrome] › api/api-endpoints.spec.ts:380:7 › Events API Endpoints › GET /api/events - list events 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      392 |     if (response.status() === 200) {
      393 |       const data = await response.json()
    > 394 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      395 |     }
      396 |   })
      397 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:394:35
]]>
</failure>
</testcase>
<testcase name="Events API Endpoints › POST /api/events - create event" classname="api/api-endpoints.spec.ts" time="0.214">
</testcase>
<testcase name="Awards API Endpoints › GET /api/awards - list awards" classname="api/api-endpoints.spec.ts" time="0.535">
<failure message="api-endpoints.spec.ts:419:7 GET /api/awards - list awards" type="FAILURE">
<![CDATA[  [Google Chrome] › api/api-endpoints.spec.ts:419:7 › Awards API Endpoints › GET /api/awards - list awards 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      431 |     if (response.status() === 200) {
      432 |       const data = await response.json()
    > 433 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      434 |     }
      435 |   })
      436 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:433:35
]]>
</failure>
</testcase>
<testcase name="Dashboard API Endpoints › GET /api/dashboard/metrics - dashboard metrics" classname="api/api-endpoints.spec.ts" time="0.526">
<failure message="api-endpoints.spec.ts:439:7 GET /api/dashboard/metrics - dashboard metrics" type="FAILURE">
<![CDATA[  [Google Chrome] › api/api-endpoints.spec.ts:439:7 › Dashboard API Endpoints › GET /api/dashboard/metrics - dashboard metrics 

    Error: expect(received).toHaveProperty(path)

    Expected path: "totalAnalysts"
    Received path: []

    Received value: {"cacheAge": 22, "cached": true, "data": {"activeAlerts": 0, "activeAnalysts": 0, "analystsAddedPast90Days": 0, "averageInfluenceScore": 0, "briefingFollowUps": 0, "briefingsDue": 0, "briefingsPast90Days": 0, "briefingsPlanned": 0, "briefingsYTD": 0, "cacheDuration": 300, "cacheEnabled": true, "calendarMeetings": 0, "completedBriefings": 0, "contentItemsPast90Days": 0, "coverageByTier": {"HIGH": 0, "LOW": 0, "MEDIUM": 0, "VERY_HIGH": 0}, "engagementRate": 0, "expectedPerformanceGain": "80-90% faster dashboard loads", "newAnalysts": [], "newsletterEngagements": 0, "newslettersSentPast90Days": 0, "notificationsYTD": 0, "publishedContent": 0, "queryOptimization": "Cached with Supabase queries", "recentContentItems": [{"createdAt": "2025-08-11T10:11:58.053Z", "id": "sample-1", "status": "published", "title": "People Analytics: Driving Data-Driven HR Decisions", "type": "RESEARCH_REPORT"}, {"createdAt": "2025-08-10T10:11:58.053Z", "id": "sample-2", "status": "published", "title": "Remote Work Best Practices for HR Leaders", "type": "BLOG_POST"}, {"createdAt": "2025-08-09T10:11:58.053Z", "id": "sample-3", "status": "published", "title": "Employee Experience Platforms: Market Analysis", "type": "WHITEPAPER"}], "recentInteractions": 0, "relationshipHealth": 3, "relevantSocialPosts": 0, "totalAnalysts": 0, "upcomingPublications": 0}, "success": true}

      451 |     if (response.status() === 200) {
      452 |       const data = await response.json()
    > 453 |       expect(data).toHaveProperty('totalAnalysts')
          |                    ^
      454 |       expect(data).toHaveProperty('activeAnalysts')
      455 |       expect(data).toHaveProperty('engagementRate')
      456 |     }
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:453:20
]]>
</failure>
</testcase>
<testcase name="Dashboard API Endpoints › GET /api/dashboard/top-analysts - top analysts" classname="api/api-endpoints.spec.ts" time="1.047">
<failure message="api-endpoints.spec.ts:459:7 GET /api/dashboard/top-analysts - top analysts" type="FAILURE">
<![CDATA[  [Google Chrome] › api/api-endpoints.spec.ts:459:7 › Dashboard API Endpoints › GET /api/dashboard/top-analysts - top analysts 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      471 |     if (response.status() === 200) {
      472 |       const data = await response.json()
    > 473 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      474 |     }
      475 |   })
      476 |
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:473:35
]]>
</failure>
</testcase>
<testcase name="Dashboard API Endpoints › GET /api/dashboard/recent-activity - recent activity" classname="api/api-endpoints.spec.ts" time="0.4">
<failure message="api-endpoints.spec.ts:477:7 GET /api/dashboard/recent-activity - recent activity" type="FAILURE">
<![CDATA[  [Google Chrome] › api/api-endpoints.spec.ts:477:7 › Dashboard API Endpoints › GET /api/dashboard/recent-activity - recent activity 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      489 |     if (response.status() === 200) {
      490 |       const data = await response.json()
    > 491 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      492 |     }
      493 |   })
      494 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:491:35
]]>
</failure>
</testcase>
<testcase name="Briefings API Endpoints › GET /api/briefings - list briefings" classname="api/api-endpoints.spec.ts" time="0.347">
<failure message="api-endpoints.spec.ts:497:7 GET /api/briefings - list briefings" type="FAILURE">
<![CDATA[  [Google Chrome] › api/api-endpoints.spec.ts:497:7 › Briefings API Endpoints › GET /api/briefings - list briefings 

    Error: expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [200, 401]

      505 |     
      506 |     // Should return 200 for success or 401 for auth failure
    > 507 |     expect([200, 401]).toContain(response.status())
          |                        ^
      508 |     
      509 |     if (response.status() === 200) {
      510 |       const data = await response.json()
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:507:24
]]>
</failure>
</testcase>
<testcase name="Social Media API Endpoints › GET /api/social-media/recent-activity - recent social activity" classname="api/api-endpoints.spec.ts" time="0.95">
<failure message="api-endpoints.spec.ts:517:7 GET /api/social-media/recent-activity - recent social activity" type="FAILURE">
<![CDATA[  [Google Chrome] › api/api-endpoints.spec.ts:517:7 › Social Media API Endpoints › GET /api/social-media/recent-activity - recent social activity 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      529 |     if (response.status() === 200) {
      530 |       const data = await response.json()
    > 531 |       expect(Array.isArray(data)).toBe(true)
          |                                   ^
      532 |     }
      533 |   })
      534 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:531:35
]]>
</failure>
</testcase>
<testcase name="Error Handling › 404 for non-existent endpoints" classname="api/api-endpoints.spec.ts" time="0.188">
</testcase>
<testcase name="Error Handling › 405 for wrong HTTP methods" classname="api/api-endpoints.spec.ts" time="0.109">
</testcase>
<testcase name="Error Handling › 400 for malformed JSON" classname="api/api-endpoints.spec.ts" time="0.5">
</testcase>
<testcase name="Rate Limiting and Security › API endpoints have appropriate CORS headers" classname="api/api-endpoints.spec.ts" time="0.002">
<failure message="api-endpoints.spec.ts:565:7 API endpoints have appropriate CORS headers" type="FAILURE">
<![CDATA[  [Google Chrome] › api/api-endpoints.spec.ts:565:7 › Rate Limiting and Security › API endpoints have appropriate CORS headers 

    TypeError: request.options is not a function

      564 | test.describe('Rate Limiting and Security', () => {
      565 |   test('API endpoints have appropriate CORS headers', async ({ request }) => {
    > 566 |     const response = await request.options(`${BASE_URL}/api/settings/general`)
          |                                    ^
      567 |     
      568 |     const headers = response.headers()
      569 |     // Check for security headers (these may vary based on your implementation)
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:566:36
]]>
</failure>
</testcase>
<testcase name="Rate Limiting and Security › API endpoints reject requests with invalid content types" classname="api/api-endpoints.spec.ts" time="0.207">
<failure message="api-endpoints.spec.ts:573:7 API endpoints reject requests with invalid content types" type="FAILURE">
<![CDATA[  [Google Chrome] › api/api-endpoints.spec.ts:573:7 › Rate Limiting and Security › API endpoints reject requests with invalid content types 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 500

      582 |     })
      583 |     
    > 584 |     expect(response.status()).toBe(400)
          |                               ^
      585 |   })
      586 | })
        at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:584:31
]]>
</failure>
</testcase>
</testsuite>
</testsuites>