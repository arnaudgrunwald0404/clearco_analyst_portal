{
  "config": {
    "configFile": "/Users/arnaudgrunwald/AGcodework/analyst-portal/playwright.config.ts",
    "rootDir": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/global-setup.ts",
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 4
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "html",
        null
      ],
      [
        "json",
        {
          "outputFile": "test-results/results.json"
        }
      ],
      [
        "junit",
        {
          "outputFile": "test-results/results.xml"
        }
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/Users/arnaudgrunwald/AGcodework/analyst-portal/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "chromium",
        "name": "chromium",
        "testDir": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/arnaudgrunwald/AGcodework/analyst-portal/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "firefox",
        "name": "firefox",
        "testDir": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/arnaudgrunwald/AGcodework/analyst-portal/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "webkit",
        "name": "webkit",
        "testDir": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/arnaudgrunwald/AGcodework/analyst-portal/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "Mobile Chrome",
        "name": "Mobile Chrome",
        "testDir": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/arnaudgrunwald/AGcodework/analyst-portal/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "Mobile Safari",
        "name": "Mobile Safari",
        "testDir": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/arnaudgrunwald/AGcodework/analyst-portal/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "Microsoft Edge",
        "name": "Microsoft Edge",
        "testDir": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/arnaudgrunwald/AGcodework/analyst-portal/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "Google Chrome",
        "name": "Google Chrome",
        "testDir": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.54.2",
    "workers": 4,
    "webServer": {
      "command": "npm run dev",
      "url": "http://localhost:3000",
      "reuseExistingServer": true,
      "timeout": 120000
    }
  },
  "suites": [
    {
      "title": "api/api-endpoints.spec.ts",
      "file": "api/api-endpoints.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Authentication API Endpoints",
          "file": "api/api-endpoints.spec.ts",
          "line": 31,
          "column": 6,
          "specs": [
            {
              "title": "POST /api/auth/login - successful login",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 242,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m401\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:40:31",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 31,
                          "line": 40
                        },
                        "snippet": "  38 |     })\n  39 |     \n> 40 |     expect(response.status()).toBe(200)\n     |                               ^\n  41 |     \n  42 |     const data = await response.json()\n  43 |     expect(data).toHaveProperty('success', true)"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 31,
                            "line": 40
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n\n  38 |     })\n  39 |     \n> 40 |     expect(response.status()).toBe(200)\n     |                               ^\n  41 |     \n  42 |     const data = await response.json()\n  43 |     expect(data).toHaveProperty('success', true)\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:40:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:21.601Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 31,
                        "line": 40
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-35af82a0a6dcb797caf1",
              "file": "api/api-endpoints.spec.ts",
              "line": 32,
              "column": 7
            },
            {
              "title": "POST /api/auth/login - invalid credentials",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 1,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 455,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:55:31",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 31,
                          "line": 55
                        },
                        "snippet": "  53 |     })\n  54 |     \n> 55 |     expect(response.status()).toBe(401)\n     |                               ^\n  56 |     \n  57 |     const data = await response.json()\n  58 |     expect(data).toHaveProperty('success', false)"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 31,
                            "line": 55
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n  53 |     })\n  54 |     \n> 55 |     expect(response.status()).toBe(401)\n     |                               ^\n  56 |     \n  57 |     const data = await response.json()\n  58 |     expect(data).toHaveProperty('success', false)\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:55:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:21.580Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 31,
                        "line": 55
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-48334db225cb8ef2edb8",
              "file": "api/api-endpoints.spec.ts",
              "line": 47,
              "column": 7
            },
            {
              "title": "POST /api/auth/analyst - analyst login",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 878,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:21.602Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-4e0f5bc567522ec6f600",
              "file": "api/api-endpoints.spec.ts",
              "line": 62,
              "column": 7
            },
            {
              "title": "POST /api/auth/login - successful login",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 18,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 224,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m401\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:40:31",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 31,
                          "line": 40
                        },
                        "snippet": "  38 |     })\n  39 |     \n> 40 |     expect(response.status()).toBe(200)\n     |                               ^\n  41 |     \n  42 |     const data = await response.json()\n  43 |     expect(data).toHaveProperty('success', true)"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 31,
                            "line": 40
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n\n  38 |     })\n  39 |     \n> 40 |     expect(response.status()).toBe(200)\n     |                               ^\n  41 |     \n  42 |     const data = await response.json()\n  43 |     expect(data).toHaveProperty('success', true)\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:40:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:39.265Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 31,
                        "line": 40
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-a5fb12d1046dbde7eabe",
              "file": "api/api-endpoints.spec.ts",
              "line": 32,
              "column": 7
            },
            {
              "title": "POST /api/auth/login - invalid credentials",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 19,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 282,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:55:31",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 31,
                          "line": 55
                        },
                        "snippet": "  53 |     })\n  54 |     \n> 55 |     expect(response.status()).toBe(401)\n     |                               ^\n  56 |     \n  57 |     const data = await response.json()\n  58 |     expect(data).toHaveProperty('success', false)"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 31,
                            "line": 55
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n  53 |     })\n  54 |     \n> 55 |     expect(response.status()).toBe(401)\n     |                               ^\n  56 |     \n  57 |     const data = await response.json()\n  58 |     expect(data).toHaveProperty('success', false)\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:55:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:39.510Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 31,
                        "line": 55
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-65db0d2530d43eecf654",
              "file": "api/api-endpoints.spec.ts",
              "line": 47,
              "column": 7
            },
            {
              "title": "POST /api/auth/analyst - analyst login",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 20,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 890,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:39.823Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-0df7e00a4b0d6392d18a",
              "file": "api/api-endpoints.spec.ts",
              "line": 62,
              "column": 7
            },
            {
              "title": "POST /api/auth/login - successful login",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 36,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 267,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m401\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:40:31",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 31,
                          "line": 40
                        },
                        "snippet": "  38 |     })\n  39 |     \n> 40 |     expect(response.status()).toBe(200)\n     |                               ^\n  41 |     \n  42 |     const data = await response.json()\n  43 |     expect(data).toHaveProperty('success', true)"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 31,
                            "line": 40
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n\n  38 |     })\n  39 |     \n> 40 |     expect(response.status()).toBe(200)\n     |                               ^\n  41 |     \n  42 |     const data = await response.json()\n  43 |     expect(data).toHaveProperty('success', true)\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:40:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:47.824Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 31,
                        "line": 40
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-d474fdd5f772c44a215c",
              "file": "api/api-endpoints.spec.ts",
              "line": 32,
              "column": 7
            },
            {
              "title": "POST /api/auth/login - invalid credentials",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 37,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 347,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:55:31",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 31,
                          "line": 55
                        },
                        "snippet": "  53 |     })\n  54 |     \n> 55 |     expect(response.status()).toBe(401)\n     |                               ^\n  56 |     \n  57 |     const data = await response.json()\n  58 |     expect(data).toHaveProperty('success', false)"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 31,
                            "line": 55
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n  53 |     })\n  54 |     \n> 55 |     expect(response.status()).toBe(401)\n     |                               ^\n  56 |     \n  57 |     const data = await response.json()\n  58 |     expect(data).toHaveProperty('success', false)\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:55:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:48.158Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 31,
                        "line": 55
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-086e43223026256d6f56",
              "file": "api/api-endpoints.spec.ts",
              "line": 47,
              "column": 7
            },
            {
              "title": "POST /api/auth/analyst - analyst login",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 38,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 583,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:48.177Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-7f3074b67602fab9e197",
              "file": "api/api-endpoints.spec.ts",
              "line": 62,
              "column": 7
            },
            {
              "title": "POST /api/auth/login - successful login",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 55,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 318,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m401\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:40:31",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 31,
                          "line": 40
                        },
                        "snippet": "  38 |     })\n  39 |     \n> 40 |     expect(response.status()).toBe(200)\n     |                               ^\n  41 |     \n  42 |     const data = await response.json()\n  43 |     expect(data).toHaveProperty('success', true)"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 31,
                            "line": 40
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n\n  38 |     })\n  39 |     \n> 40 |     expect(response.status()).toBe(200)\n     |                               ^\n  41 |     \n  42 |     const data = await response.json()\n  43 |     expect(data).toHaveProperty('success', true)\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:40:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:55.657Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 31,
                        "line": 40
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-547c4eff2654e2375307",
              "file": "api/api-endpoints.spec.ts",
              "line": 32,
              "column": 7
            },
            {
              "title": "POST /api/auth/login - invalid credentials",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 56,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 520,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:55:31",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 31,
                          "line": 55
                        },
                        "snippet": "  53 |     })\n  54 |     \n> 55 |     expect(response.status()).toBe(401)\n     |                               ^\n  56 |     \n  57 |     const data = await response.json()\n  58 |     expect(data).toHaveProperty('success', false)"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 31,
                            "line": 55
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n  53 |     })\n  54 |     \n> 55 |     expect(response.status()).toBe(401)\n     |                               ^\n  56 |     \n  57 |     const data = await response.json()\n  58 |     expect(data).toHaveProperty('success', false)\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:55:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:56.248Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 31,
                        "line": 55
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-ac61d97f865516846439",
              "file": "api/api-endpoints.spec.ts",
              "line": 47,
              "column": 7
            },
            {
              "title": "POST /api/auth/analyst - analyst login",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 57,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 493,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:56.274Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-e03cef03e3182637935c",
              "file": "api/api-endpoints.spec.ts",
              "line": 62,
              "column": 7
            },
            {
              "title": "POST /api/auth/login - successful login",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 73,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 530,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m401\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:40:31",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 31,
                          "line": 40
                        },
                        "snippet": "  38 |     })\n  39 |     \n> 40 |     expect(response.status()).toBe(200)\n     |                               ^\n  41 |     \n  42 |     const data = await response.json()\n  43 |     expect(data).toHaveProperty('success', true)"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 31,
                            "line": 40
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n\n  38 |     })\n  39 |     \n> 40 |     expect(response.status()).toBe(200)\n     |                               ^\n  41 |     \n  42 |     const data = await response.json()\n  43 |     expect(data).toHaveProperty('success', true)\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:40:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:03.372Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 31,
                        "line": 40
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-7147046b68d89b9f0fa8",
              "file": "api/api-endpoints.spec.ts",
              "line": 32,
              "column": 7
            },
            {
              "title": "POST /api/auth/login - invalid credentials",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 74,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 409,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:55:31",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 31,
                          "line": 55
                        },
                        "snippet": "  53 |     })\n  54 |     \n> 55 |     expect(response.status()).toBe(401)\n     |                               ^\n  56 |     \n  57 |     const data = await response.json()\n  58 |     expect(data).toHaveProperty('success', false)"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 31,
                            "line": 55
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n  53 |     })\n  54 |     \n> 55 |     expect(response.status()).toBe(401)\n     |                               ^\n  56 |     \n  57 |     const data = await response.json()\n  58 |     expect(data).toHaveProperty('success', false)\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:55:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:03.878Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 31,
                        "line": 55
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-93f6256fc4f2a35b89e4",
              "file": "api/api-endpoints.spec.ts",
              "line": 47,
              "column": 7
            },
            {
              "title": "POST /api/auth/analyst - analyst login",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 75,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 425,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:04.283Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-7c8732640b77d6796766",
              "file": "api/api-endpoints.spec.ts",
              "line": 62,
              "column": 7
            },
            {
              "title": "POST /api/auth/login - successful login",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-e228cc48395412b565e8",
              "file": "api/api-endpoints.spec.ts",
              "line": 32,
              "column": 7
            },
            {
              "title": "POST /api/auth/login - invalid credentials",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-b7ca28e69436093720af",
              "file": "api/api-endpoints.spec.ts",
              "line": 47,
              "column": 7
            },
            {
              "title": "POST /api/auth/analyst - analyst login",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-083ca0cbdf80a5c16565",
              "file": "api/api-endpoints.spec.ts",
              "line": 62,
              "column": 7
            },
            {
              "title": "POST /api/auth/login - successful login",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-887739b63631143bfbb1",
              "file": "api/api-endpoints.spec.ts",
              "line": 32,
              "column": 7
            },
            {
              "title": "POST /api/auth/login - invalid credentials",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-52088613ad7cdbe9de17",
              "file": "api/api-endpoints.spec.ts",
              "line": 47,
              "column": 7
            },
            {
              "title": "POST /api/auth/analyst - analyst login",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-88807badede2df7694a2",
              "file": "api/api-endpoints.spec.ts",
              "line": 62,
              "column": 7
            }
          ]
        },
        {
          "title": "Settings API Endpoints",
          "file": "api/api-endpoints.spec.ts",
          "line": 75,
          "column": 6,
          "specs": [
            {
              "title": "GET /api/settings/general - requires authentication",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 3,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 46,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:21.594Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-4ed3d7d048e3e059cbaa",
              "file": "api/api-endpoints.spec.ts",
              "line": 76,
              "column": 7
            },
            {
              "title": "GET /api/settings/general - authenticated request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 3,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 997,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:21.647Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-524801f5ef13a4b22b5a",
              "file": "api/api-endpoints.spec.ts",
              "line": 87,
              "column": 7
            },
            {
              "title": "PUT /api/settings/general - update settings",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 4,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 6053,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:22.152Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-282893839d636ef7220b",
              "file": "api/api-endpoints.spec.ts",
              "line": 109,
              "column": 7
            },
            {
              "title": "PUT /api/settings/general - validation errors",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 5,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 6588,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m401\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:147:31",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 31,
                          "line": 147
                        },
                        "snippet": "  145 |     })\n  146 |     \n> 147 |     expect(response.status()).toBe(400)\n      |                               ^\n  148 |     \n  149 |     const data = await response.json()\n  150 |     expect(data).toHaveProperty('error')"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 31,
                            "line": 147
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n\n  145 |     })\n  146 |     \n> 147 |     expect(response.status()).toBe(400)\n      |                               ^\n  148 |     \n  149 |     const data = await response.json()\n  150 |     expect(data).toHaveProperty('error')\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:147:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:22.587Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 31,
                        "line": 147
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-ca17a7511d72b38364aa",
              "file": "api/api-endpoints.spec.ts",
              "line": 133,
              "column": 7
            },
            {
              "title": "GET /api/settings/calendar-connections - requires authentication",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 5745,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:22.487Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-ce95573701a5f8419fb5",
              "file": "api/api-endpoints.spec.ts",
              "line": 153,
              "column": 7
            },
            {
              "title": "GET /api/settings/general - requires authentication",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 21,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 555,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:39.899Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-cfb34c123751b815c5b3",
              "file": "api/api-endpoints.spec.ts",
              "line": 76,
              "column": 7
            },
            {
              "title": "GET /api/settings/general - authenticated request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 22,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 585,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:40.151Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-eefc72e40e68cda9c09b",
              "file": "api/api-endpoints.spec.ts",
              "line": 87,
              "column": 7
            },
            {
              "title": "PUT /api/settings/general - update settings",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 21,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 1070,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:40.458Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-748a06418c011814f0c6",
              "file": "api/api-endpoints.spec.ts",
              "line": 109,
              "column": 7
            },
            {
              "title": "PUT /api/settings/general - validation errors",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 20,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 810,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m401\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:147:31",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 31,
                          "line": 147
                        },
                        "snippet": "  145 |     })\n  146 |     \n> 147 |     expect(response.status()).toBe(400)\n      |                               ^\n  148 |     \n  149 |     const data = await response.json()\n  150 |     expect(data).toHaveProperty('error')"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 31,
                            "line": 147
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n\n  145 |     })\n  146 |     \n> 147 |     expect(response.status()).toBe(400)\n      |                               ^\n  148 |     \n  149 |     const data = await response.json()\n  150 |     expect(data).toHaveProperty('error')\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:147:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:40.720Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 31,
                        "line": 147
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-2aeaa4d177eb5127286f",
              "file": "api/api-endpoints.spec.ts",
              "line": 133,
              "column": 7
            },
            {
              "title": "GET /api/settings/calendar-connections - requires authentication",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 22,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 664,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:40.744Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-0f74fd57ad003c57129a",
              "file": "api/api-endpoints.spec.ts",
              "line": 153,
              "column": 7
            },
            {
              "title": "GET /api/settings/general - requires authentication",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 39,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 172,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:48.429Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-eb8bf9cf39402d93924b",
              "file": "api/api-endpoints.spec.ts",
              "line": 76,
              "column": 7
            },
            {
              "title": "GET /api/settings/general - authenticated request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 40,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 325,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:48.888Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-7c0eb659187129aa8800",
              "file": "api/api-endpoints.spec.ts",
              "line": 87,
              "column": 7
            },
            {
              "title": "PUT /api/settings/general - update settings",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 39,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 614,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:48.606Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-155ce7bc17d124b6b1e0",
              "file": "api/api-endpoints.spec.ts",
              "line": 109,
              "column": 7
            },
            {
              "title": "PUT /api/settings/general - validation errors",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 38,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 463,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m401\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:147:31",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 31,
                          "line": 147
                        },
                        "snippet": "  145 |     })\n  146 |     \n> 147 |     expect(response.status()).toBe(400)\n      |                               ^\n  148 |     \n  149 |     const data = await response.json()\n  150 |     expect(data).toHaveProperty('error')"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 31,
                            "line": 147
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n\n  145 |     })\n  146 |     \n> 147 |     expect(response.status()).toBe(400)\n      |                               ^\n  148 |     \n  149 |     const data = await response.json()\n  150 |     expect(data).toHaveProperty('error')\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:147:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:48.767Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 31,
                        "line": 147
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-baa7b31a8f565612953f",
              "file": "api/api-endpoints.spec.ts",
              "line": 133,
              "column": 7
            },
            {
              "title": "GET /api/settings/calendar-connections - requires authentication",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 40,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 27,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:49.219Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-06c9f446d02c8d47d53f",
              "file": "api/api-endpoints.spec.ts",
              "line": 153,
              "column": 7
            },
            {
              "title": "GET /api/settings/general - requires authentication",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 58,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 224,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:56.452Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-355dc0dfee42a15db37d",
              "file": "api/api-endpoints.spec.ts",
              "line": 76,
              "column": 7
            },
            {
              "title": "GET /api/settings/general - authenticated request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 58,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 672,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:56.681Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-ce6fb32821fe62a0c3a7",
              "file": "api/api-endpoints.spec.ts",
              "line": 87,
              "column": 7
            },
            {
              "title": "PUT /api/settings/general - update settings",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 59,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 587,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:57.125Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-ff0297e5c8bed4a8af82",
              "file": "api/api-endpoints.spec.ts",
              "line": 109,
              "column": 7
            },
            {
              "title": "PUT /api/settings/general - validation errors",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 57,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 584,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m401\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:147:31",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 31,
                          "line": 147
                        },
                        "snippet": "  145 |     })\n  146 |     \n> 147 |     expect(response.status()).toBe(400)\n      |                               ^\n  148 |     \n  149 |     const data = await response.json()\n  150 |     expect(data).toHaveProperty('error')"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 31,
                            "line": 147
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n\n  145 |     })\n  146 |     \n> 147 |     expect(response.status()).toBe(400)\n      |                               ^\n  148 |     \n  149 |     const data = await response.json()\n  150 |     expect(data).toHaveProperty('error')\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:147:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:56.774Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 31,
                        "line": 147
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-745539353b6d2b95c56e",
              "file": "api/api-endpoints.spec.ts",
              "line": 133,
              "column": 7
            },
            {
              "title": "GET /api/settings/calendar-connections - requires authentication",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 58,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 14,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:57.357Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-c0e4a9664db05f9807eb",
              "file": "api/api-endpoints.spec.ts",
              "line": 153,
              "column": 7
            },
            {
              "title": "GET /api/settings/general - requires authentication",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 76,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 178,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:04.657Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-1b9ba0a9caa3c9fa1ff5",
              "file": "api/api-endpoints.spec.ts",
              "line": 76,
              "column": 7
            },
            {
              "title": "GET /api/settings/general - authenticated request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 77,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 205,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:04.778Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-6f17df94c1bbb726980d",
              "file": "api/api-endpoints.spec.ts",
              "line": 87,
              "column": 7
            },
            {
              "title": "PUT /api/settings/general - update settings",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 75,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 272,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:04.714Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-982531d6367e989f8de1",
              "file": "api/api-endpoints.spec.ts",
              "line": 109,
              "column": 7
            },
            {
              "title": "PUT /api/settings/general - validation errors",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 76,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 180,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m401\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:147:31",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 31,
                          "line": 147
                        },
                        "snippet": "  145 |     })\n  146 |     \n> 147 |     expect(response.status()).toBe(400)\n      |                               ^\n  148 |     \n  149 |     const data = await response.json()\n  150 |     expect(data).toHaveProperty('error')"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 31,
                            "line": 147
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n\n  145 |     })\n  146 |     \n> 147 |     expect(response.status()).toBe(400)\n      |                               ^\n  148 |     \n  149 |     const data = await response.json()\n  150 |     expect(data).toHaveProperty('error')\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:147:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:04.841Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 31,
                        "line": 147
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-84b03c4377775542b15f",
              "file": "api/api-endpoints.spec.ts",
              "line": 133,
              "column": 7
            },
            {
              "title": "GET /api/settings/calendar-connections - requires authentication",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 77,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 28,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:04.988Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-8742d07ffed61a0bf15e",
              "file": "api/api-endpoints.spec.ts",
              "line": 153,
              "column": 7
            },
            {
              "title": "GET /api/settings/general - requires authentication",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-d61951199eacc16425e5",
              "file": "api/api-endpoints.spec.ts",
              "line": 76,
              "column": 7
            },
            {
              "title": "GET /api/settings/general - authenticated request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-b0cd59041a180d9b734d",
              "file": "api/api-endpoints.spec.ts",
              "line": 87,
              "column": 7
            },
            {
              "title": "PUT /api/settings/general - update settings",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-fa6f25651f3214e8fed0",
              "file": "api/api-endpoints.spec.ts",
              "line": 109,
              "column": 7
            },
            {
              "title": "PUT /api/settings/general - validation errors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-9840690f26a7cfbbfcc2",
              "file": "api/api-endpoints.spec.ts",
              "line": 133,
              "column": 7
            },
            {
              "title": "GET /api/settings/calendar-connections - requires authentication",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-c0f4e87f2ebc57ac37ad",
              "file": "api/api-endpoints.spec.ts",
              "line": 153,
              "column": 7
            },
            {
              "title": "GET /api/settings/general - requires authentication",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-b8a9ca6bee9d4a096a7d",
              "file": "api/api-endpoints.spec.ts",
              "line": 76,
              "column": 7
            },
            {
              "title": "GET /api/settings/general - authenticated request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-67e0c1e94ac151dddfaa",
              "file": "api/api-endpoints.spec.ts",
              "line": 87,
              "column": 7
            },
            {
              "title": "PUT /api/settings/general - update settings",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-79a59423ebbe248eaee6",
              "file": "api/api-endpoints.spec.ts",
              "line": 109,
              "column": 7
            },
            {
              "title": "PUT /api/settings/general - validation errors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-24a4475d82ccdc5dea2e",
              "file": "api/api-endpoints.spec.ts",
              "line": 133,
              "column": 7
            },
            {
              "title": "GET /api/settings/calendar-connections - requires authentication",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-aecf6fdd9bb7d5e3aa63",
              "file": "api/api-endpoints.spec.ts",
              "line": 153,
              "column": 7
            }
          ]
        },
        {
          "title": "Analysts API Endpoints",
          "file": "api/api-endpoints.spec.ts",
          "line": 163,
          "column": 6,
          "specs": [
            {
              "title": "GET /api/analysts - list analysts",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 3,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 6716,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:178:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 178
                        },
                        "snippet": "  176 |     if (response.status() === 200) {\n  177 |       const data = await response.json()\n> 178 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  179 |     }\n  180 |   })\n  181 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 178
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  176 |     if (response.status() === 200) {\n  177 |       const data = await response.json()\n> 178 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  179 |     }\n  180 |   })\n  181 |\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:178:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:22.647Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 178
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-8d111dbb56aa16ccef9b",
              "file": "api/api-endpoints.spec.ts",
              "line": 164,
              "column": 7
            },
            {
              "title": "POST /api/analysts - create analyst",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 4,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1273,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[201, 401]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[201, 401]\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:199:24",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 24,
                          "line": 199
                        },
                        "snippet": "  197 |     \n  198 |     // Should return 201 for success or 401 for auth failure\n> 199 |     expect([201, 401]).toContain(response.status())\n      |                        ^\n  200 |     \n  201 |     if (response.status() === 201) {\n  202 |       const data = await response.json()"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 24,
                            "line": 199
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[201, 401]\u001b[39m\n\n  197 |     \n  198 |     // Should return 201 for success or 401 for auth failure\n> 199 |     expect([201, 401]).toContain(response.status())\n      |                        ^\n  200 |     \n  201 |     if (response.status() === 201) {\n  202 |       const data = await response.json()\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:199:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:28.211Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 24,
                        "line": 199
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-6f322087de06ad94431c",
              "file": "api/api-endpoints.spec.ts",
              "line": 182,
              "column": 7
            },
            {
              "title": "POST /api/analysts - validation errors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 939,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:28.234Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-a7802770d8bf36c211b3",
              "file": "api/api-endpoints.spec.ts",
              "line": 208,
              "column": 7
            },
            {
              "title": "GET /api/analysts/[id] - get specific analyst",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 277,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:29.175Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-79c3e21b8bf134524c78",
              "file": "api/api-endpoints.spec.ts",
              "line": 228,
              "column": 7
            },
            {
              "title": "POST /api/analysts/bulk - bulk create analysts",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 6,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 1968,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"created\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"data\": {\"count\": 0, \"created\": [], \"errors\": [\"Failed to create analyst bulk1@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\", \"Failed to create analyst bulk2@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\"]}, \"success\": true}\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"created\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"data\": {\"count\": 0, \"created\": [], \"errors\": [\"Failed to create analyst bulk1@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\", \"Failed to create analyst bulk2@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\"]}, \"success\": true}\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:288:20",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 20,
                          "line": 288
                        },
                        "snippet": "  286 |       const data = await response.json()\n  287 |       expect(data).toHaveProperty('success', true)\n> 288 |       expect(data).toHaveProperty('created')\n      |                    ^\n  289 |     }\n  290 |   })\n  291 | })"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 20,
                            "line": 288
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"created\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"data\": {\"count\": 0, \"created\": [], \"errors\": [\"Failed to create analyst bulk1@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\", \"Failed to create analyst bulk2@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\"]}, \"success\": true}\u001b[39m\n\n  286 |       const data = await response.json()\n  287 |       expect(data).toHaveProperty('success', true)\n> 288 |       expect(data).toHaveProperty('created')\n      |                    ^\n  289 |     }\n  290 |   })\n  291 | })\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:288:20"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:29.463Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 20,
                        "line": 288
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-a390dfed399cb72f203a",
              "file": "api/api-endpoints.spec.ts",
              "line": 257,
              "column": 7
            },
            {
              "title": "GET /api/analysts - list analysts",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 23,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 867,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:178:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 178
                        },
                        "snippet": "  176 |     if (response.status() === 200) {\n  177 |       const data = await response.json()\n> 178 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  179 |     }\n  180 |   })\n  181 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 178
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  176 |     if (response.status() === 200) {\n  177 |       const data = await response.json()\n> 178 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  179 |     }\n  180 |   })\n  181 |\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:178:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:41.127Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 178
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-6fb9463d892663a1ff13",
              "file": "api/api-endpoints.spec.ts",
              "line": 164,
              "column": 7
            },
            {
              "title": "POST /api/analysts - create analyst",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 22,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 819,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[201, 401]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[201, 401]\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:199:24",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 24,
                          "line": 199
                        },
                        "snippet": "  197 |     \n  198 |     // Should return 201 for success or 401 for auth failure\n> 199 |     expect([201, 401]).toContain(response.status())\n      |                        ^\n  200 |     \n  201 |     if (response.status() === 201) {\n  202 |       const data = await response.json()"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 24,
                            "line": 199
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[201, 401]\u001b[39m\n\n  197 |     \n  198 |     // Should return 201 for success or 401 for auth failure\n> 199 |     expect([201, 401]).toContain(response.status())\n      |                        ^\n  200 |     \n  201 |     if (response.status() === 201) {\n  202 |       const data = await response.json()\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:199:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:41.411Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 24,
                        "line": 199
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-12a52af34a920e89c819",
              "file": "api/api-endpoints.spec.ts",
              "line": 182,
              "column": 7
            },
            {
              "title": "POST /api/analysts - validation errors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 21,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 460,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:41.530Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-1c356bb8f19f16950c0a",
              "file": "api/api-endpoints.spec.ts",
              "line": 208,
              "column": 7
            },
            {
              "title": "GET /api/analysts/[id] - get specific analyst",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 24,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 644,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:41.828Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-a66f32086398c22824d7",
              "file": "api/api-endpoints.spec.ts",
              "line": 228,
              "column": 7
            },
            {
              "title": "POST /api/analysts/bulk - bulk create analysts",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 21,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 900,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"created\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"data\": {\"count\": 0, \"created\": [], \"errors\": [\"Failed to create analyst bulk1@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\", \"Failed to create analyst bulk2@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\"]}, \"success\": true}\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"created\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"data\": {\"count\": 0, \"created\": [], \"errors\": [\"Failed to create analyst bulk1@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\", \"Failed to create analyst bulk2@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\"]}, \"success\": true}\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:288:20",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 20,
                          "line": 288
                        },
                        "snippet": "  286 |       const data = await response.json()\n  287 |       expect(data).toHaveProperty('success', true)\n> 288 |       expect(data).toHaveProperty('created')\n      |                    ^\n  289 |     }\n  290 |   })\n  291 | })"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 20,
                            "line": 288
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"created\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"data\": {\"count\": 0, \"created\": [], \"errors\": [\"Failed to create analyst bulk1@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\", \"Failed to create analyst bulk2@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\"]}, \"success\": true}\u001b[39m\n\n  286 |       const data = await response.json()\n  287 |       expect(data).toHaveProperty('success', true)\n> 288 |       expect(data).toHaveProperty('created')\n      |                    ^\n  289 |     }\n  290 |   })\n  291 | })\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:288:20"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:41.993Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 20,
                        "line": 288
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-ae96ffa90d860a430644",
              "file": "api/api-endpoints.spec.ts",
              "line": 257,
              "column": 7
            },
            {
              "title": "GET /api/analysts - list analysts",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 39,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 265,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:178:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 178
                        },
                        "snippet": "  176 |     if (response.status() === 200) {\n  177 |       const data = await response.json()\n> 178 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  179 |     }\n  180 |   })\n  181 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 178
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  176 |     if (response.status() === 200) {\n  177 |       const data = await response.json()\n> 178 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  179 |     }\n  180 |   })\n  181 |\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:178:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:49.223Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 178
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-64dce08f9e8d85964e07",
              "file": "api/api-endpoints.spec.ts",
              "line": 164,
              "column": 7
            },
            {
              "title": "POST /api/analysts - create analyst",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 41,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 722,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[201, 401]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[201, 401]\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:199:24",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 24,
                          "line": 199
                        },
                        "snippet": "  197 |     \n  198 |     // Should return 201 for success or 401 for auth failure\n> 199 |     expect([201, 401]).toContain(response.status())\n      |                        ^\n  200 |     \n  201 |     if (response.status() === 201) {\n  202 |       const data = await response.json()"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 24,
                            "line": 199
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[201, 401]\u001b[39m\n\n  197 |     \n  198 |     // Should return 201 for success or 401 for auth failure\n> 199 |     expect([201, 401]).toContain(response.status())\n      |                        ^\n  200 |     \n  201 |     if (response.status() === 201) {\n  202 |       const data = await response.json()\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:199:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:49.517Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 24,
                        "line": 199
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-db9c3ca89f5cee58e26d",
              "file": "api/api-endpoints.spec.ts",
              "line": 182,
              "column": 7
            },
            {
              "title": "POST /api/analysts - validation errors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 40,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 242,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:49.249Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-a0eb924f2b06b12938d4",
              "file": "api/api-endpoints.spec.ts",
              "line": 208,
              "column": 7
            },
            {
              "title": "GET /api/analysts/[id] - get specific analyst",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 42,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 189,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:49.783Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-59331448cfee864edb36",
              "file": "api/api-endpoints.spec.ts",
              "line": 228,
              "column": 7
            },
            {
              "title": "POST /api/analysts/bulk - bulk create analysts",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 40,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 897,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"created\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"data\": {\"count\": 0, \"created\": [], \"errors\": [\"Failed to create analyst bulk1@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\", \"Failed to create analyst bulk2@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\"]}, \"success\": true}\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"created\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"data\": {\"count\": 0, \"created\": [], \"errors\": [\"Failed to create analyst bulk1@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\", \"Failed to create analyst bulk2@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\"]}, \"success\": true}\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:288:20",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 20,
                          "line": 288
                        },
                        "snippet": "  286 |       const data = await response.json()\n  287 |       expect(data).toHaveProperty('success', true)\n> 288 |       expect(data).toHaveProperty('created')\n      |                    ^\n  289 |     }\n  290 |   })\n  291 | })"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 20,
                            "line": 288
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"created\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"data\": {\"count\": 0, \"created\": [], \"errors\": [\"Failed to create analyst bulk1@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\", \"Failed to create analyst bulk2@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\"]}, \"success\": true}\u001b[39m\n\n  286 |       const data = await response.json()\n  287 |       expect(data).toHaveProperty('success', true)\n> 288 |       expect(data).toHaveProperty('created')\n      |                    ^\n  289 |     }\n  290 |   })\n  291 | })\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:288:20"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:49.493Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 20,
                        "line": 288
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-f4685148b5603af2148e",
              "file": "api/api-endpoints.spec.ts",
              "line": 257,
              "column": 7
            },
            {
              "title": "GET /api/analysts - list analysts",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 60,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 214,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:178:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 178
                        },
                        "snippet": "  176 |     if (response.status() === 200) {\n  177 |       const data = await response.json()\n> 178 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  179 |     }\n  180 |   })\n  181 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 178
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  176 |     if (response.status() === 200) {\n  177 |       const data = await response.json()\n> 178 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  179 |     }\n  180 |   })\n  181 |\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:178:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:57.665Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 178
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-aa9c3b00a5c6cc1dcb90",
              "file": "api/api-endpoints.spec.ts",
              "line": 164,
              "column": 7
            },
            {
              "title": "POST /api/analysts - create analyst",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 58,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 650,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[201, 401]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[201, 401]\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:199:24",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 24,
                          "line": 199
                        },
                        "snippet": "  197 |     \n  198 |     // Should return 201 for success or 401 for auth failure\n> 199 |     expect([201, 401]).toContain(response.status())\n      |                        ^\n  200 |     \n  201 |     if (response.status() === 201) {\n  202 |       const data = await response.json()"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 24,
                            "line": 199
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[201, 401]\u001b[39m\n\n  197 |     \n  198 |     // Should return 201 for success or 401 for auth failure\n> 199 |     expect([201, 401]).toContain(response.status())\n      |                        ^\n  200 |     \n  201 |     if (response.status() === 201) {\n  202 |       const data = await response.json()\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:199:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:57.373Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 24,
                        "line": 199
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-6f5e48f656c3ad8054d0",
              "file": "api/api-endpoints.spec.ts",
              "line": 182,
              "column": 7
            },
            {
              "title": "POST /api/analysts - validation errors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 59,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 449,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:57.717Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-6ae92bb85ea890267dd0",
              "file": "api/api-endpoints.spec.ts",
              "line": 208,
              "column": 7
            },
            {
              "title": "GET /api/analysts/[id] - get specific analyst",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 61,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 808,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:58.205Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-920a894dd169a793ff8b",
              "file": "api/api-endpoints.spec.ts",
              "line": 228,
              "column": 7
            },
            {
              "title": "POST /api/analysts/bulk - bulk create analysts",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 62,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 1148,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"created\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"data\": {\"count\": 0, \"created\": [], \"errors\": [\"Failed to create analyst bulk1@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\", \"Failed to create analyst bulk2@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\"]}, \"success\": true}\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"created\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"data\": {\"count\": 0, \"created\": [], \"errors\": [\"Failed to create analyst bulk1@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\", \"Failed to create analyst bulk2@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\"]}, \"success\": true}\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:288:20",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 20,
                          "line": 288
                        },
                        "snippet": "  286 |       const data = await response.json()\n  287 |       expect(data).toHaveProperty('success', true)\n> 288 |       expect(data).toHaveProperty('created')\n      |                    ^\n  289 |     }\n  290 |   })\n  291 | })"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 20,
                            "line": 288
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"created\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"data\": {\"count\": 0, \"created\": [], \"errors\": [\"Failed to create analyst bulk1@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\", \"Failed to create analyst bulk2@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\"]}, \"success\": true}\u001b[39m\n\n  286 |       const data = await response.json()\n  287 |       expect(data).toHaveProperty('success', true)\n> 288 |       expect(data).toHaveProperty('created')\n      |                    ^\n  289 |     }\n  290 |   })\n  291 | })\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:288:20"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:58.357Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 20,
                        "line": 288
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-5ba89cb8fe3b4e2a25d4",
              "file": "api/api-endpoints.spec.ts",
              "line": 257,
              "column": 7
            },
            {
              "title": "GET /api/analysts - list analysts",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 75,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 435,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:178:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 178
                        },
                        "snippet": "  176 |     if (response.status() === 200) {\n  177 |       const data = await response.json()\n> 178 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  179 |     }\n  180 |   })\n  181 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 178
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  176 |     if (response.status() === 200) {\n  177 |       const data = await response.json()\n> 178 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  179 |     }\n  180 |   })\n  181 |\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:178:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:04.989Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 178
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-adf4df776f8459b581ea",
              "file": "api/api-endpoints.spec.ts",
              "line": 164,
              "column": 7
            },
            {
              "title": "POST /api/analysts - create analyst",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 77,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 725,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[201, 401]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[201, 401]\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:199:24",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 24,
                          "line": 199
                        },
                        "snippet": "  197 |     \n  198 |     // Should return 201 for success or 401 for auth failure\n> 199 |     expect([201, 401]).toContain(response.status())\n      |                        ^\n  200 |     \n  201 |     if (response.status() === 201) {\n  202 |       const data = await response.json()"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 24,
                            "line": 199
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[201, 401]\u001b[39m\n\n  197 |     \n  198 |     // Should return 201 for success or 401 for auth failure\n> 199 |     expect([201, 401]).toContain(response.status())\n      |                        ^\n  200 |     \n  201 |     if (response.status() === 201) {\n  202 |       const data = await response.json()\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:199:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:05.019Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 24,
                        "line": 199
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-6a4fe457f352387477d0",
              "file": "api/api-endpoints.spec.ts",
              "line": 182,
              "column": 7
            },
            {
              "title": "POST /api/analysts - validation errors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 78,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 384,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:05.372Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-b0533b644f7dceb0c721",
              "file": "api/api-endpoints.spec.ts",
              "line": 208,
              "column": 7
            },
            {
              "title": "GET /api/analysts/[id] - get specific analyst",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 79,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 611,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:05.752Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-5d4694908e1827b70c95",
              "file": "api/api-endpoints.spec.ts",
              "line": 228,
              "column": 7
            },
            {
              "title": "POST /api/analysts/bulk - bulk create analysts",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 80,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 941,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"created\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"data\": {\"count\": 0, \"created\": [], \"errors\": [\"Failed to create analyst bulk1@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\", \"Failed to create analyst bulk2@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\"]}, \"success\": true}\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"created\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"data\": {\"count\": 0, \"created\": [], \"errors\": [\"Failed to create analyst bulk1@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\", \"Failed to create analyst bulk2@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\"]}, \"success\": true}\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:288:20",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 20,
                          "line": 288
                        },
                        "snippet": "  286 |       const data = await response.json()\n  287 |       expect(data).toHaveProperty('success', true)\n> 288 |       expect(data).toHaveProperty('created')\n      |                    ^\n  289 |     }\n  290 |   })\n  291 | })"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 20,
                            "line": 288
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"created\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"data\": {\"count\": 0, \"created\": [], \"errors\": [\"Failed to create analyst bulk1@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\", \"Failed to create analyst bulk2@example.com: Could not find the 'eligibleNewsletters' column of 'analysts' in the schema cache\"]}, \"success\": true}\u001b[39m\n\n  286 |       const data = await response.json()\n  287 |       expect(data).toHaveProperty('success', true)\n> 288 |       expect(data).toHaveProperty('created')\n      |                    ^\n  289 |     }\n  290 |   })\n  291 | })\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:288:20"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:06.120Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 20,
                        "line": 288
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-a6cf343309d83f9616d2",
              "file": "api/api-endpoints.spec.ts",
              "line": 257,
              "column": 7
            },
            {
              "title": "GET /api/analysts - list analysts",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-756adf1363e86df7ccfb",
              "file": "api/api-endpoints.spec.ts",
              "line": 164,
              "column": 7
            },
            {
              "title": "POST /api/analysts - create analyst",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-b7caf3afe5de962bee76",
              "file": "api/api-endpoints.spec.ts",
              "line": 182,
              "column": 7
            },
            {
              "title": "POST /api/analysts - validation errors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-036652034adf6859ffeb",
              "file": "api/api-endpoints.spec.ts",
              "line": 208,
              "column": 7
            },
            {
              "title": "GET /api/analysts/[id] - get specific analyst",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-1bbc67f9918ffbe5c5aa",
              "file": "api/api-endpoints.spec.ts",
              "line": 228,
              "column": 7
            },
            {
              "title": "POST /api/analysts/bulk - bulk create analysts",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-6457ca0f59a60d2d4e27",
              "file": "api/api-endpoints.spec.ts",
              "line": 257,
              "column": 7
            },
            {
              "title": "GET /api/analysts - list analysts",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-52108905a54c39300763",
              "file": "api/api-endpoints.spec.ts",
              "line": 164,
              "column": 7
            },
            {
              "title": "POST /api/analysts - create analyst",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-2cd7454826f63856d443",
              "file": "api/api-endpoints.spec.ts",
              "line": 182,
              "column": 7
            },
            {
              "title": "POST /api/analysts - validation errors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-ebe810ba1af5b2e46308",
              "file": "api/api-endpoints.spec.ts",
              "line": 208,
              "column": 7
            },
            {
              "title": "GET /api/analysts/[id] - get specific analyst",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-bd1e5ca732811faacb9c",
              "file": "api/api-endpoints.spec.ts",
              "line": 228,
              "column": 7
            },
            {
              "title": "POST /api/analysts/bulk - bulk create analysts",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-5e2306710fdfcd60c828",
              "file": "api/api-endpoints.spec.ts",
              "line": 257,
              "column": 7
            }
          ]
        },
        {
          "title": "Publications API Endpoints",
          "file": "api/api-endpoints.spec.ts",
          "line": 293,
          "column": 6,
          "specs": [
            {
              "title": "GET /api/publications - list publications",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 7,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 1150,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:308:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 308
                        },
                        "snippet": "  306 |     if (response.status() === 200) {\n  307 |       const data = await response.json()\n> 308 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  309 |     }\n  310 |   })\n  311 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 308
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  306 |     if (response.status() === 200) {\n  307 |       const data = await response.json()\n> 308 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  309 |     }\n  310 |   })\n  311 |\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:308:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:29.678Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 308
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-2f9eab716febb027d6f9",
              "file": "api/api-endpoints.spec.ts",
              "line": 294,
              "column": 7
            },
            {
              "title": "POST /api/publications - create publication",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 1100,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:29.455Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-0af48294d6c73a2cb36a",
              "file": "api/api-endpoints.spec.ts",
              "line": 312,
              "column": 7
            },
            {
              "title": "GET /api/publications/discover - publication discovery",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 8,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 11001,
                      "error": {
                        "message": "TimeoutError: apiRequestContext.get: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - → GET http://localhost:3000/api/publications/discover\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.7258.5 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "TimeoutError: apiRequestContext.get: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - → GET http://localhost:3000/api/publications/discover\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.7258.5 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:335:36",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 36,
                          "line": 335
                        },
                        "snippet": "  333 |     const authCookie = await getAuthCookie(request)\n  334 |     \n> 335 |     const response = await request.get(`${BASE_URL}/api/publications/discover`, {\n      |                                    ^\n  336 |       headers: {\n  337 |         'Cookie': authCookie\n  338 |       }"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 36,
                            "line": 335
                          },
                          "message": "TimeoutError: apiRequestContext.get: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - → GET http://localhost:3000/api/publications/discover\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.7258.5 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n\n  333 |     const authCookie = await getAuthCookie(request)\n  334 |     \n> 335 |     const response = await request.get(`${BASE_URL}/api/publications/discover`, {\n      |                                    ^\n  336 |       headers: {\n  337 |         'Cookie': authCookie\n  338 |       }\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:335:36"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:29.811Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 36,
                        "line": 335
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-d8670325689ab7f4c16e",
              "file": "api/api-endpoints.spec.ts",
              "line": 332,
              "column": 7
            },
            {
              "title": "GET /api/publications - list publications",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 25,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 482,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:308:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 308
                        },
                        "snippet": "  306 |     if (response.status() === 200) {\n  307 |       const data = await response.json()\n> 308 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  309 |     }\n  310 |   })\n  311 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 308
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  306 |     if (response.status() === 200) {\n  307 |       const data = await response.json()\n> 308 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  309 |     }\n  310 |   })\n  311 |\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:308:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:42.383Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 308
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-1cc0040722c7f828dcff",
              "file": "api/api-endpoints.spec.ts",
              "line": 294,
              "column": 7
            },
            {
              "title": "POST /api/publications - create publication",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 26,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 260,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:42.625Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-ddc43b68f0af2e57f2bb",
              "file": "api/api-endpoints.spec.ts",
              "line": 312,
              "column": 7
            },
            {
              "title": "GET /api/publications/discover - publication discovery",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 24,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 10559,
                      "error": {
                        "message": "TimeoutError: apiRequestContext.get: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - → GET http://localhost:3000/api/publications/discover\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:140.0.2) Gecko/20100101 Firefox/140.0.2\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "TimeoutError: apiRequestContext.get: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - → GET http://localhost:3000/api/publications/discover\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:140.0.2) Gecko/20100101 Firefox/140.0.2\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:335:36",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 36,
                          "line": 335
                        },
                        "snippet": "  333 |     const authCookie = await getAuthCookie(request)\n  334 |     \n> 335 |     const response = await request.get(`${BASE_URL}/api/publications/discover`, {\n      |                                    ^\n  336 |       headers: {\n  337 |         'Cookie': authCookie\n  338 |       }"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 36,
                            "line": 335
                          },
                          "message": "TimeoutError: apiRequestContext.get: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - → GET http://localhost:3000/api/publications/discover\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:140.0.2) Gecko/20100101 Firefox/140.0.2\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n\n  333 |     const authCookie = await getAuthCookie(request)\n  334 |     \n> 335 |     const response = await request.get(`${BASE_URL}/api/publications/discover`, {\n      |                                    ^\n  336 |       headers: {\n  337 |         'Cookie': authCookie\n  338 |       }\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:335:36"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:42.477Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 36,
                        "line": 335
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-2fe71eacc8eabd1a47f8",
              "file": "api/api-endpoints.spec.ts",
              "line": 332,
              "column": 7
            },
            {
              "title": "GET /api/publications - list publications",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 42,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 414,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:308:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 308
                        },
                        "snippet": "  306 |     if (response.status() === 200) {\n  307 |       const data = await response.json()\n> 308 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  309 |     }\n  310 |   })\n  311 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 308
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  306 |     if (response.status() === 200) {\n  307 |       const data = await response.json()\n> 308 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  309 |     }\n  310 |   })\n  311 |\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:308:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:49.976Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 308
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-32e054f460578cb8b856",
              "file": "api/api-endpoints.spec.ts",
              "line": 294,
              "column": 7
            },
            {
              "title": "POST /api/publications - create publication",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 43,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 578,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:50.590Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-940b71b6faa291e5d334",
              "file": "api/api-endpoints.spec.ts",
              "line": 312,
              "column": 7
            },
            {
              "title": "GET /api/publications/discover - publication discovery",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 45,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 10403,
                      "error": {
                        "message": "TimeoutError: apiRequestContext.get: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - → GET http://localhost:3000/api/publications/discover\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "TimeoutError: apiRequestContext.get: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - → GET http://localhost:3000/api/publications/discover\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:335:36",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 36,
                          "line": 335
                        },
                        "snippet": "  333 |     const authCookie = await getAuthCookie(request)\n  334 |     \n> 335 |     const response = await request.get(`${BASE_URL}/api/publications/discover`, {\n      |                                    ^\n  336 |       headers: {\n  337 |         'Cookie': authCookie\n  338 |       }"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 36,
                            "line": 335
                          },
                          "message": "TimeoutError: apiRequestContext.get: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - → GET http://localhost:3000/api/publications/discover\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/26.0 Safari/605.1.15\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n\n  333 |     const authCookie = await getAuthCookie(request)\n  334 |     \n> 335 |     const response = await request.get(`${BASE_URL}/api/publications/discover`, {\n      |                                    ^\n  336 |       headers: {\n  337 |         'Cookie': authCookie\n  338 |       }\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:335:36"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:50.778Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 36,
                        "line": 335
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-f7419bda8a52c7ce9856",
              "file": "api/api-endpoints.spec.ts",
              "line": 332,
              "column": 7
            },
            {
              "title": "GET /api/publications - list publications",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 59,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 563,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:308:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 308
                        },
                        "snippet": "  306 |     if (response.status() === 200) {\n  307 |       const data = await response.json()\n> 308 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  309 |     }\n  310 |   })\n  311 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 308
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  306 |     if (response.status() === 200) {\n  307 |       const data = await response.json()\n> 308 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  309 |     }\n  310 |   })\n  311 |\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:308:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:58.172Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 308
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-630f8188b93f94de4299",
              "file": "api/api-endpoints.spec.ts",
              "line": 294,
              "column": 7
            },
            {
              "title": "POST /api/publications - create publication",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 63,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 333,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:59.055Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-37896307a38df8ca2739",
              "file": "api/api-endpoints.spec.ts",
              "line": 312,
              "column": 7
            },
            {
              "title": "GET /api/publications/discover - publication discovery",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 61,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 10349,
                      "error": {
                        "message": "TimeoutError: apiRequestContext.get: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - → GET http://localhost:3000/api/publications/discover\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.7258.5 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "TimeoutError: apiRequestContext.get: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - → GET http://localhost:3000/api/publications/discover\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.7258.5 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:335:36",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 36,
                          "line": 335
                        },
                        "snippet": "  333 |     const authCookie = await getAuthCookie(request)\n  334 |     \n> 335 |     const response = await request.get(`${BASE_URL}/api/publications/discover`, {\n      |                                    ^\n  336 |       headers: {\n  337 |         'Cookie': authCookie\n  338 |       }"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 36,
                            "line": 335
                          },
                          "message": "TimeoutError: apiRequestContext.get: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - → GET http://localhost:3000/api/publications/discover\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Linux; Android 11; Pixel 5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.7258.5 Mobile Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n\n  333 |     const authCookie = await getAuthCookie(request)\n  334 |     \n> 335 |     const response = await request.get(`${BASE_URL}/api/publications/discover`, {\n      |                                    ^\n  336 |       headers: {\n  337 |         'Cookie': authCookie\n  338 |       }\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:335:36"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:59.021Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 36,
                        "line": 335
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-f507f08ecb86ac7ea26a",
              "file": "api/api-endpoints.spec.ts",
              "line": 332,
              "column": 7
            },
            {
              "title": "GET /api/publications - list publications",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 78,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 728,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:308:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 308
                        },
                        "snippet": "  306 |     if (response.status() === 200) {\n  307 |       const data = await response.json()\n> 308 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  309 |     }\n  310 |   })\n  311 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 308
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  306 |     if (response.status() === 200) {\n  307 |       const data = await response.json()\n> 308 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  309 |     }\n  310 |   })\n  311 |\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:308:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:05.763Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 308
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-297cbf1f9f5764eb3565",
              "file": "api/api-endpoints.spec.ts",
              "line": 294,
              "column": 7
            },
            {
              "title": "POST /api/publications - create publication",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 79,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 164,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:06.368Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-4997697e4106f0f74b81",
              "file": "api/api-endpoints.spec.ts",
              "line": 312,
              "column": 7
            },
            {
              "title": "GET /api/publications/discover - publication discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 81,
                      "parallelIndex": 3,
                      "status": "interrupted",
                      "duration": 4061,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:06.823Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-c4d128a6fe0a0f9298b0",
              "file": "api/api-endpoints.spec.ts",
              "line": 332,
              "column": 7
            },
            {
              "title": "GET /api/publications - list publications",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-8df2b9759126826f0350",
              "file": "api/api-endpoints.spec.ts",
              "line": 294,
              "column": 7
            },
            {
              "title": "POST /api/publications - create publication",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-7e2f6983a7b1910d1b4b",
              "file": "api/api-endpoints.spec.ts",
              "line": 312,
              "column": 7
            },
            {
              "title": "GET /api/publications/discover - publication discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-b05beeabd7c7eedd63af",
              "file": "api/api-endpoints.spec.ts",
              "line": 332,
              "column": 7
            },
            {
              "title": "GET /api/publications - list publications",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-74087db52b960402f9e4",
              "file": "api/api-endpoints.spec.ts",
              "line": 294,
              "column": 7
            },
            {
              "title": "POST /api/publications - create publication",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-85ba58d5737f0cbdff29",
              "file": "api/api-endpoints.spec.ts",
              "line": 312,
              "column": 7
            },
            {
              "title": "GET /api/publications/discover - publication discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-312d327a477f7a1ef4f1",
              "file": "api/api-endpoints.spec.ts",
              "line": 332,
              "column": 7
            }
          ]
        },
        {
          "title": "Events API Endpoints",
          "file": "api/api-endpoints.spec.ts",
          "line": 352,
          "column": 6,
          "specs": [
            {
              "title": "GET /api/events - list events",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 2151,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:367:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 367
                        },
                        "snippet": "  365 |     if (response.status() === 200) {\n  366 |       const data = await response.json()\n> 367 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  368 |     }\n  369 |   })\n  370 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 367
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  365 |     if (response.status() === 200) {\n  366 |       const data = await response.json()\n> 367 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  368 |     }\n  369 |   })\n  370 |\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:367:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:30.558Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 367
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-477bdf0526b42048045b",
              "file": "api/api-endpoints.spec.ts",
              "line": 353,
              "column": 7
            },
            {
              "title": "POST /api/events - create event",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 9,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 1561,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:31.157Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-2393652a391247ce1a92",
              "file": "api/api-endpoints.spec.ts",
              "line": 371,
              "column": 7
            },
            {
              "title": "GET /api/events - list events",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 27,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1143,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:367:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 367
                        },
                        "snippet": "  365 |     if (response.status() === 200) {\n  366 |       const data = await response.json()\n> 367 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  368 |     }\n  369 |   })\n  370 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 367
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  365 |     if (response.status() === 200) {\n  366 |       const data = await response.json()\n> 367 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  368 |     }\n  369 |   })\n  370 |\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:367:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:43.201Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 367
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-b5306ff9a0c0be9cb92d",
              "file": "api/api-endpoints.spec.ts",
              "line": 353,
              "column": 7
            },
            {
              "title": "POST /api/events - create event",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 26,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 473,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:42.888Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-b1d0bf278871b309e2c6",
              "file": "api/api-endpoints.spec.ts",
              "line": 371,
              "column": 7
            },
            {
              "title": "GET /api/events - list events",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 44,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 557,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:367:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 367
                        },
                        "snippet": "  365 |     if (response.status() === 200) {\n  366 |       const data = await response.json()\n> 367 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  368 |     }\n  369 |   })\n  370 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 367
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  365 |     if (response.status() === 200) {\n  366 |       const data = await response.json()\n> 367 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  368 |     }\n  369 |   })\n  370 |\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:367:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:50.778Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 367
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-5f7cdac3feca3caedaa2",
              "file": "api/api-endpoints.spec.ts",
              "line": 353,
              "column": 7
            },
            {
              "title": "POST /api/events - create event",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 43,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 158,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:51.173Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-44ef04f009e1fc9dad0b",
              "file": "api/api-endpoints.spec.ts",
              "line": 371,
              "column": 7
            },
            {
              "title": "GET /api/events - list events",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 63,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 263,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:367:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 367
                        },
                        "snippet": "  365 |     if (response.status() === 200) {\n  366 |       const data = await response.json()\n> 367 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  368 |     }\n  369 |   })\n  370 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 367
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  365 |     if (response.status() === 200) {\n  366 |       const data = await response.json()\n> 367 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  368 |     }\n  369 |   })\n  370 |\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:367:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:59.393Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 367
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-dbf51418a9edb8d82b67",
              "file": "api/api-endpoints.spec.ts",
              "line": 353,
              "column": 7
            },
            {
              "title": "POST /api/events - create event",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 64,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 389,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:59.822Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-1cb0228fa49c3f8ac757",
              "file": "api/api-endpoints.spec.ts",
              "line": 371,
              "column": 7
            },
            {
              "title": "GET /api/events - list events",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 79,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 676,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:367:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 367
                        },
                        "snippet": "  365 |     if (response.status() === 200) {\n  366 |       const data = await response.json()\n> 367 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  368 |     }\n  369 |   })\n  370 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 367
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  365 |     if (response.status() === 200) {\n  366 |       const data = await response.json()\n> 367 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  368 |     }\n  369 |   })\n  370 |\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:367:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:06.535Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 367
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-920dff6d1c033417e548",
              "file": "api/api-endpoints.spec.ts",
              "line": 353,
              "column": 7
            },
            {
              "title": "POST /api/events - create event",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 82,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 585,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:07.390Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-8ee88c507e565254172b",
              "file": "api/api-endpoints.spec.ts",
              "line": 371,
              "column": 7
            },
            {
              "title": "GET /api/events - list events",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-047c30e4c616865442a1",
              "file": "api/api-endpoints.spec.ts",
              "line": 353,
              "column": 7
            },
            {
              "title": "POST /api/events - create event",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-2092e0f12e9858ab951e",
              "file": "api/api-endpoints.spec.ts",
              "line": 371,
              "column": 7
            },
            {
              "title": "GET /api/events - list events",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-37ed329e6560938d2690",
              "file": "api/api-endpoints.spec.ts",
              "line": 353,
              "column": 7
            },
            {
              "title": "POST /api/events - create event",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-d27e968cb24c6d855041",
              "file": "api/api-endpoints.spec.ts",
              "line": 371,
              "column": 7
            }
          ]
        },
        {
          "title": "Awards API Endpoints",
          "file": "api/api-endpoints.spec.ts",
          "line": 391,
          "column": 6,
          "specs": [
            {
              "title": "GET /api/awards - list awards",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 10,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 1598,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[200, 401]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[200, 401]\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:402:24",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 24,
                          "line": 402
                        },
                        "snippet": "  400 |     \n  401 |     // Should return 200 for success or 401 for auth failure\n> 402 |     expect([200, 401]).toContain(response.status())\n      |                        ^\n  403 |     \n  404 |     if (response.status() === 200) {\n  405 |       const data = await response.json()"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 24,
                            "line": 402
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[200, 401]\u001b[39m\n\n  400 |     \n  401 |     // Should return 200 for success or 401 for auth failure\n> 402 |     expect([200, 401]).toContain(response.status())\n      |                        ^\n  403 |     \n  404 |     if (response.status() === 200) {\n  405 |       const data = await response.json()\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:402:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:31.926Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 24,
                        "line": 402
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-9043543ea2c3c7e1b31a",
              "file": "api/api-endpoints.spec.ts",
              "line": 392,
              "column": 7
            },
            {
              "title": "GET /api/awards - list awards",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 28,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 1289,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[200, 401]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[200, 401]\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:402:24",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 24,
                          "line": 402
                        },
                        "snippet": "  400 |     \n  401 |     // Should return 200 for success or 401 for auth failure\n> 402 |     expect([200, 401]).toContain(response.status())\n      |                        ^\n  403 |     \n  404 |     if (response.status() === 200) {\n  405 |       const data = await response.json()"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 24,
                            "line": 402
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[200, 401]\u001b[39m\n\n  400 |     \n  401 |     // Should return 200 for success or 401 for auth failure\n> 402 |     expect([200, 401]).toContain(response.status())\n      |                        ^\n  403 |     \n  404 |     if (response.status() === 200) {\n  405 |       const data = await response.json()\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:402:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:43.239Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 24,
                        "line": 402
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-cc104f477ba2081b72a2",
              "file": "api/api-endpoints.spec.ts",
              "line": 392,
              "column": 7
            },
            {
              "title": "GET /api/awards - list awards",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 43,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 410,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[200, 401]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[200, 401]\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:402:24",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 24,
                          "line": 402
                        },
                        "snippet": "  400 |     \n  401 |     // Should return 200 for success or 401 for auth failure\n> 402 |     expect([200, 401]).toContain(response.status())\n      |                        ^\n  403 |     \n  404 |     if (response.status() === 200) {\n  405 |       const data = await response.json()"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 24,
                            "line": 402
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[200, 401]\u001b[39m\n\n  400 |     \n  401 |     // Should return 200 for success or 401 for auth failure\n> 402 |     expect([200, 401]).toContain(response.status())\n      |                        ^\n  403 |     \n  404 |     if (response.status() === 200) {\n  405 |       const data = await response.json()\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:402:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:51.334Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 24,
                        "line": 402
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-562ad0456c5195ccb5eb",
              "file": "api/api-endpoints.spec.ts",
              "line": 392,
              "column": 7
            },
            {
              "title": "GET /api/awards - list awards",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 65,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 374,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[200, 401]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[200, 401]\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:402:24",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 24,
                          "line": 402
                        },
                        "snippet": "  400 |     \n  401 |     // Should return 200 for success or 401 for auth failure\n> 402 |     expect([200, 401]).toContain(response.status())\n      |                        ^\n  403 |     \n  404 |     if (response.status() === 200) {\n  405 |       const data = await response.json()"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 24,
                            "line": 402
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[200, 401]\u001b[39m\n\n  400 |     \n  401 |     // Should return 200 for success or 401 for auth failure\n> 402 |     expect([200, 401]).toContain(response.status())\n      |                        ^\n  403 |     \n  404 |     if (response.status() === 200) {\n  405 |       const data = await response.json()\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:402:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:59.983Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 24,
                        "line": 402
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-4ad7ff96c9ae54506c2f",
              "file": "api/api-endpoints.spec.ts",
              "line": 392,
              "column": 7
            },
            {
              "title": "GET /api/awards - list awards",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 83,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 557,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[200, 401]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[200, 401]\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:402:24",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 24,
                          "line": 402
                        },
                        "snippet": "  400 |     \n  401 |     // Should return 200 for success or 401 for auth failure\n> 402 |     expect([200, 401]).toContain(response.status())\n      |                        ^\n  403 |     \n  404 |     if (response.status() === 200) {\n  405 |       const data = await response.json()"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 24,
                            "line": 402
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m500\u001b[39m\nReceived array: \u001b[31m[200, 401]\u001b[39m\n\n  400 |     \n  401 |     // Should return 200 for success or 401 for auth failure\n> 402 |     expect([200, 401]).toContain(response.status())\n      |                        ^\n  403 |     \n  404 |     if (response.status() === 200) {\n  405 |       const data = await response.json()\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:402:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:07.537Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 24,
                        "line": 402
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-4185f526ce3324a175df",
              "file": "api/api-endpoints.spec.ts",
              "line": 392,
              "column": 7
            },
            {
              "title": "GET /api/awards - list awards",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-e57545d0b5278cc2b459",
              "file": "api/api-endpoints.spec.ts",
              "line": 392,
              "column": 7
            },
            {
              "title": "GET /api/awards - list awards",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-2f0415645ad4fc8cf904",
              "file": "api/api-endpoints.spec.ts",
              "line": 392,
              "column": 7
            }
          ]
        },
        {
          "title": "Dashboard API Endpoints",
          "file": "api/api-endpoints.spec.ts",
          "line": 411,
          "column": 6,
          "specs": [
            {
              "title": "GET /api/dashboard/metrics - dashboard metrics",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 11,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 2179,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"totalAnalysts\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"cacheAge\": 0, \"cached\": false, \"data\": {\"activeAlerts\": 0, \"activeAnalysts\": 99, \"analystsAddedPast90Days\": 99, \"averageInfluenceScore\": 0, \"briefingFollowUps\": 0, \"briefingsDue\": 0, \"briefingsPast90Days\": 0, \"briefingsPlanned\": 0, \"briefingsYTD\": 2, \"cacheDuration\": 300, \"cacheEnabled\": true, \"calendarMeetings\": 0, \"completedBriefings\": 0, \"contentItemsPast90Days\": 0, \"engagementRate\": 0, \"expectedPerformanceGain\": \"80-90% faster dashboard loads\", \"newAnalysts\": [{\"company\": \"AnalystCompany\", \"createdAt\": \"2025-08-01T09:01:19.935748+00:00\", \"firstName\": \"Sarah\", \"id\": \"cla28db4622c22443ebb41dae3d\", \"lastName\": \"Chen\"}, {\"company\": \"BLR\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"James\", \"id\": \"clec2663da\", \"lastName\": \"Davis\"}, {\"company\": \"3sixtyinsights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Nicholas\", \"id\": \"cl57d5aef7\", \"lastName\": \"Biron\"}, {\"company\": \"NextGen Insights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Yvette\", \"id\": \"clb97a8ef6\", \"lastName\": \"Cameron\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Jen\", \"id\": \"cl9277b2ec\", \"lastName\": \"Colletta\"}, {\"company\": \"Brandon Hall Group\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Mike\", \"id\": \"cl652fc6f3\", \"lastName\": \"Cook\"}, {\"company\": \"PeopleTech Partners\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Cara\", \"id\": \"cl3ea4b44b\", \"lastName\": \"Brennan\"}, {\"company\": \"NelsonHall\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Gary\", \"id\": \"cl51dc7829\", \"lastName\": \"Bragar\"}, {\"company\": \"IDC\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Megan\", \"id\": \"cl4ec31b8d\", \"lastName\": \"Buttita\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Elizabeth\", \"id\": \"cl26599969\", \"lastName\": \"Clarke\"}], \"newsletterEngagements\": 0, \"newslettersSentPast90Days\": 0, \"publishedContent\": 0, \"queryOptimization\": \"Cached with Supabase queries\", \"recentContentItems\": [], \"recentInteractions\": 2, \"relationshipHealth\": 4, \"relevantSocialPosts\": 0, \"totalAnalysts\": 99}, \"success\": true}\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"totalAnalysts\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"cacheAge\": 0, \"cached\": false, \"data\": {\"activeAlerts\": 0, \"activeAnalysts\": 99, \"analystsAddedPast90Days\": 99, \"averageInfluenceScore\": 0, \"briefingFollowUps\": 0, \"briefingsDue\": 0, \"briefingsPast90Days\": 0, \"briefingsPlanned\": 0, \"briefingsYTD\": 2, \"cacheDuration\": 300, \"cacheEnabled\": true, \"calendarMeetings\": 0, \"completedBriefings\": 0, \"contentItemsPast90Days\": 0, \"engagementRate\": 0, \"expectedPerformanceGain\": \"80-90% faster dashboard loads\", \"newAnalysts\": [{\"company\": \"AnalystCompany\", \"createdAt\": \"2025-08-01T09:01:19.935748+00:00\", \"firstName\": \"Sarah\", \"id\": \"cla28db4622c22443ebb41dae3d\", \"lastName\": \"Chen\"}, {\"company\": \"BLR\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"James\", \"id\": \"clec2663da\", \"lastName\": \"Davis\"}, {\"company\": \"3sixtyinsights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Nicholas\", \"id\": \"cl57d5aef7\", \"lastName\": \"Biron\"}, {\"company\": \"NextGen Insights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Yvette\", \"id\": \"clb97a8ef6\", \"lastName\": \"Cameron\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Jen\", \"id\": \"cl9277b2ec\", \"lastName\": \"Colletta\"}, {\"company\": \"Brandon Hall Group\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Mike\", \"id\": \"cl652fc6f3\", \"lastName\": \"Cook\"}, {\"company\": \"PeopleTech Partners\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Cara\", \"id\": \"cl3ea4b44b\", \"lastName\": \"Brennan\"}, {\"company\": \"NelsonHall\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Gary\", \"id\": \"cl51dc7829\", \"lastName\": \"Bragar\"}, {\"company\": \"IDC\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Megan\", \"id\": \"cl4ec31b8d\", \"lastName\": \"Buttita\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Elizabeth\", \"id\": \"cl26599969\", \"lastName\": \"Clarke\"}], \"newsletterEngagements\": 0, \"newslettersSentPast90Days\": 0, \"publishedContent\": 0, \"queryOptimization\": \"Cached with Supabase queries\", \"recentContentItems\": [], \"recentInteractions\": 2, \"relationshipHealth\": 4, \"relevantSocialPosts\": 0, \"totalAnalysts\": 99}, \"success\": true}\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:426:20",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 20,
                          "line": 426
                        },
                        "snippet": "  424 |     if (response.status() === 200) {\n  425 |       const data = await response.json()\n> 426 |       expect(data).toHaveProperty('totalAnalysts')\n      |                    ^\n  427 |       expect(data).toHaveProperty('activeAnalysts')\n  428 |       expect(data).toHaveProperty('engagementRate')\n  429 |     }"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 20,
                            "line": 426
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"totalAnalysts\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"cacheAge\": 0, \"cached\": false, \"data\": {\"activeAlerts\": 0, \"activeAnalysts\": 99, \"analystsAddedPast90Days\": 99, \"averageInfluenceScore\": 0, \"briefingFollowUps\": 0, \"briefingsDue\": 0, \"briefingsPast90Days\": 0, \"briefingsPlanned\": 0, \"briefingsYTD\": 2, \"cacheDuration\": 300, \"cacheEnabled\": true, \"calendarMeetings\": 0, \"completedBriefings\": 0, \"contentItemsPast90Days\": 0, \"engagementRate\": 0, \"expectedPerformanceGain\": \"80-90% faster dashboard loads\", \"newAnalysts\": [{\"company\": \"AnalystCompany\", \"createdAt\": \"2025-08-01T09:01:19.935748+00:00\", \"firstName\": \"Sarah\", \"id\": \"cla28db4622c22443ebb41dae3d\", \"lastName\": \"Chen\"}, {\"company\": \"BLR\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"James\", \"id\": \"clec2663da\", \"lastName\": \"Davis\"}, {\"company\": \"3sixtyinsights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Nicholas\", \"id\": \"cl57d5aef7\", \"lastName\": \"Biron\"}, {\"company\": \"NextGen Insights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Yvette\", \"id\": \"clb97a8ef6\", \"lastName\": \"Cameron\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Jen\", \"id\": \"cl9277b2ec\", \"lastName\": \"Colletta\"}, {\"company\": \"Brandon Hall Group\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Mike\", \"id\": \"cl652fc6f3\", \"lastName\": \"Cook\"}, {\"company\": \"PeopleTech Partners\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Cara\", \"id\": \"cl3ea4b44b\", \"lastName\": \"Brennan\"}, {\"company\": \"NelsonHall\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Gary\", \"id\": \"cl51dc7829\", \"lastName\": \"Bragar\"}, {\"company\": \"IDC\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Megan\", \"id\": \"cl4ec31b8d\", \"lastName\": \"Buttita\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Elizabeth\", \"id\": \"cl26599969\", \"lastName\": \"Clarke\"}], \"newsletterEngagements\": 0, \"newslettersSentPast90Days\": 0, \"publishedContent\": 0, \"queryOptimization\": \"Cached with Supabase queries\", \"recentContentItems\": [], \"recentInteractions\": 2, \"relationshipHealth\": 4, \"relevantSocialPosts\": 0, \"totalAnalysts\": 99}, \"success\": true}\u001b[39m\n\n  424 |     if (response.status() === 200) {\n  425 |       const data = await response.json()\n> 426 |       expect(data).toHaveProperty('totalAnalysts')\n      |                    ^\n  427 |       expect(data).toHaveProperty('activeAnalysts')\n  428 |       expect(data).toHaveProperty('engagementRate')\n  429 |     }\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:426:20"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:33.001Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 20,
                        "line": 426
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-fab1cf27e1d6e3e827eb",
              "file": "api/api-endpoints.spec.ts",
              "line": 412,
              "column": 7
            },
            {
              "title": "GET /api/dashboard/top-analysts - top analysts",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 9,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 2292,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:446:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 446
                        },
                        "snippet": "  444 |     if (response.status() === 200) {\n  445 |       const data = await response.json()\n> 446 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  447 |     }\n  448 |   })\n  449 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 446
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  444 |     if (response.status() === 200) {\n  445 |       const data = await response.json()\n> 446 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  447 |     }\n  448 |   })\n  449 |\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:446:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:32.725Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 446
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-17340d22fa63c0b3b2b5",
              "file": "api/api-endpoints.spec.ts",
              "line": 432,
              "column": 7
            },
            {
              "title": "GET /api/dashboard/recent-activity - recent activity",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 12,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 2999,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:464:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 464
                        },
                        "snippet": "  462 |     if (response.status() === 200) {\n  463 |       const data = await response.json()\n> 464 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  465 |     }\n  466 |   })\n  467 | })"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 464
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  462 |     if (response.status() === 200) {\n  463 |       const data = await response.json()\n> 464 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  465 |     }\n  466 |   })\n  467 | })\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:464:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:33.819Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 464
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-f77b407fd4c12c39adc2",
              "file": "api/api-endpoints.spec.ts",
              "line": 450,
              "column": 7
            },
            {
              "title": "GET /api/dashboard/metrics - dashboard metrics",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 26,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 1170,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"totalAnalysts\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"cacheAge\": 0, \"cached\": false, \"data\": {\"activeAlerts\": 0, \"activeAnalysts\": 99, \"analystsAddedPast90Days\": 99, \"averageInfluenceScore\": 0, \"briefingFollowUps\": 0, \"briefingsDue\": 0, \"briefingsPast90Days\": 0, \"briefingsPlanned\": 0, \"briefingsYTD\": 2, \"cacheDuration\": 300, \"cacheEnabled\": true, \"calendarMeetings\": 0, \"completedBriefings\": 0, \"contentItemsPast90Days\": 0, \"engagementRate\": 0, \"expectedPerformanceGain\": \"80-90% faster dashboard loads\", \"newAnalysts\": [{\"company\": \"AnalystCompany\", \"createdAt\": \"2025-08-01T09:01:19.935748+00:00\", \"firstName\": \"Sarah\", \"id\": \"cla28db4622c22443ebb41dae3d\", \"lastName\": \"Chen\"}, {\"company\": \"BLR\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"James\", \"id\": \"clec2663da\", \"lastName\": \"Davis\"}, {\"company\": \"3sixtyinsights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Nicholas\", \"id\": \"cl57d5aef7\", \"lastName\": \"Biron\"}, {\"company\": \"NextGen Insights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Yvette\", \"id\": \"clb97a8ef6\", \"lastName\": \"Cameron\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Jen\", \"id\": \"cl9277b2ec\", \"lastName\": \"Colletta\"}, {\"company\": \"Brandon Hall Group\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Mike\", \"id\": \"cl652fc6f3\", \"lastName\": \"Cook\"}, {\"company\": \"PeopleTech Partners\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Cara\", \"id\": \"cl3ea4b44b\", \"lastName\": \"Brennan\"}, {\"company\": \"NelsonHall\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Gary\", \"id\": \"cl51dc7829\", \"lastName\": \"Bragar\"}, {\"company\": \"IDC\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Megan\", \"id\": \"cl4ec31b8d\", \"lastName\": \"Buttita\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Elizabeth\", \"id\": \"cl26599969\", \"lastName\": \"Clarke\"}], \"newsletterEngagements\": 0, \"newslettersSentPast90Days\": 0, \"publishedContent\": 0, \"queryOptimization\": \"Cached with Supabase queries\", \"recentContentItems\": [], \"recentInteractions\": 2, \"relationshipHealth\": 4, \"relevantSocialPosts\": 0, \"totalAnalysts\": 99}, \"success\": true}\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"totalAnalysts\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"cacheAge\": 0, \"cached\": false, \"data\": {\"activeAlerts\": 0, \"activeAnalysts\": 99, \"analystsAddedPast90Days\": 99, \"averageInfluenceScore\": 0, \"briefingFollowUps\": 0, \"briefingsDue\": 0, \"briefingsPast90Days\": 0, \"briefingsPlanned\": 0, \"briefingsYTD\": 2, \"cacheDuration\": 300, \"cacheEnabled\": true, \"calendarMeetings\": 0, \"completedBriefings\": 0, \"contentItemsPast90Days\": 0, \"engagementRate\": 0, \"expectedPerformanceGain\": \"80-90% faster dashboard loads\", \"newAnalysts\": [{\"company\": \"AnalystCompany\", \"createdAt\": \"2025-08-01T09:01:19.935748+00:00\", \"firstName\": \"Sarah\", \"id\": \"cla28db4622c22443ebb41dae3d\", \"lastName\": \"Chen\"}, {\"company\": \"BLR\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"James\", \"id\": \"clec2663da\", \"lastName\": \"Davis\"}, {\"company\": \"3sixtyinsights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Nicholas\", \"id\": \"cl57d5aef7\", \"lastName\": \"Biron\"}, {\"company\": \"NextGen Insights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Yvette\", \"id\": \"clb97a8ef6\", \"lastName\": \"Cameron\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Jen\", \"id\": \"cl9277b2ec\", \"lastName\": \"Colletta\"}, {\"company\": \"Brandon Hall Group\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Mike\", \"id\": \"cl652fc6f3\", \"lastName\": \"Cook\"}, {\"company\": \"PeopleTech Partners\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Cara\", \"id\": \"cl3ea4b44b\", \"lastName\": \"Brennan\"}, {\"company\": \"NelsonHall\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Gary\", \"id\": \"cl51dc7829\", \"lastName\": \"Bragar\"}, {\"company\": \"IDC\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Megan\", \"id\": \"cl4ec31b8d\", \"lastName\": \"Buttita\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Elizabeth\", \"id\": \"cl26599969\", \"lastName\": \"Clarke\"}], \"newsletterEngagements\": 0, \"newslettersSentPast90Days\": 0, \"publishedContent\": 0, \"queryOptimization\": \"Cached with Supabase queries\", \"recentContentItems\": [], \"recentInteractions\": 2, \"relationshipHealth\": 4, \"relevantSocialPosts\": 0, \"totalAnalysts\": 99}, \"success\": true}\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:426:20",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 20,
                          "line": 426
                        },
                        "snippet": "  424 |     if (response.status() === 200) {\n  425 |       const data = await response.json()\n> 426 |       expect(data).toHaveProperty('totalAnalysts')\n      |                    ^\n  427 |       expect(data).toHaveProperty('activeAnalysts')\n  428 |       expect(data).toHaveProperty('engagementRate')\n  429 |     }"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 20,
                            "line": 426
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"totalAnalysts\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"cacheAge\": 0, \"cached\": false, \"data\": {\"activeAlerts\": 0, \"activeAnalysts\": 99, \"analystsAddedPast90Days\": 99, \"averageInfluenceScore\": 0, \"briefingFollowUps\": 0, \"briefingsDue\": 0, \"briefingsPast90Days\": 0, \"briefingsPlanned\": 0, \"briefingsYTD\": 2, \"cacheDuration\": 300, \"cacheEnabled\": true, \"calendarMeetings\": 0, \"completedBriefings\": 0, \"contentItemsPast90Days\": 0, \"engagementRate\": 0, \"expectedPerformanceGain\": \"80-90% faster dashboard loads\", \"newAnalysts\": [{\"company\": \"AnalystCompany\", \"createdAt\": \"2025-08-01T09:01:19.935748+00:00\", \"firstName\": \"Sarah\", \"id\": \"cla28db4622c22443ebb41dae3d\", \"lastName\": \"Chen\"}, {\"company\": \"BLR\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"James\", \"id\": \"clec2663da\", \"lastName\": \"Davis\"}, {\"company\": \"3sixtyinsights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Nicholas\", \"id\": \"cl57d5aef7\", \"lastName\": \"Biron\"}, {\"company\": \"NextGen Insights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Yvette\", \"id\": \"clb97a8ef6\", \"lastName\": \"Cameron\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Jen\", \"id\": \"cl9277b2ec\", \"lastName\": \"Colletta\"}, {\"company\": \"Brandon Hall Group\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Mike\", \"id\": \"cl652fc6f3\", \"lastName\": \"Cook\"}, {\"company\": \"PeopleTech Partners\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Cara\", \"id\": \"cl3ea4b44b\", \"lastName\": \"Brennan\"}, {\"company\": \"NelsonHall\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Gary\", \"id\": \"cl51dc7829\", \"lastName\": \"Bragar\"}, {\"company\": \"IDC\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Megan\", \"id\": \"cl4ec31b8d\", \"lastName\": \"Buttita\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Elizabeth\", \"id\": \"cl26599969\", \"lastName\": \"Clarke\"}], \"newsletterEngagements\": 0, \"newslettersSentPast90Days\": 0, \"publishedContent\": 0, \"queryOptimization\": \"Cached with Supabase queries\", \"recentContentItems\": [], \"recentInteractions\": 2, \"relationshipHealth\": 4, \"relevantSocialPosts\": 0, \"totalAnalysts\": 99}, \"success\": true}\u001b[39m\n\n  424 |     if (response.status() === 200) {\n  425 |       const data = await response.json()\n> 426 |       expect(data).toHaveProperty('totalAnalysts')\n      |                    ^\n  427 |       expect(data).toHaveProperty('activeAnalysts')\n  428 |       expect(data).toHaveProperty('engagementRate')\n  429 |     }\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:426:20"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:43.368Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 20,
                        "line": 426
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-ddb3a28a0fdd31b2eabf",
              "file": "api/api-endpoints.spec.ts",
              "line": 412,
              "column": 7
            },
            {
              "title": "GET /api/dashboard/top-analysts - top analysts",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 29,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1176,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:446:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 446
                        },
                        "snippet": "  444 |     if (response.status() === 200) {\n  445 |       const data = await response.json()\n> 446 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  447 |     }\n  448 |   })\n  449 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 446
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  444 |     if (response.status() === 200) {\n  445 |       const data = await response.json()\n> 446 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  447 |     }\n  448 |   })\n  449 |\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:446:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:44.773Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 446
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-66597c36bc77cdc3dffe",
              "file": "api/api-endpoints.spec.ts",
              "line": 432,
              "column": 7
            },
            {
              "title": "GET /api/dashboard/recent-activity - recent activity",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 30,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 625,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:464:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 464
                        },
                        "snippet": "  462 |     if (response.status() === 200) {\n  463 |       const data = await response.json()\n> 464 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  465 |     }\n  466 |   })\n  467 | })"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 464
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  462 |     if (response.status() === 200) {\n  463 |       const data = await response.json()\n> 464 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  465 |     }\n  466 |   })\n  467 | })\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:464:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:45.185Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 464
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-3c5a4741e7d548d7b03f",
              "file": "api/api-endpoints.spec.ts",
              "line": 450,
              "column": 7
            },
            {
              "title": "GET /api/dashboard/metrics - dashboard metrics",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 46,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 398,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"totalAnalysts\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"cacheAge\": 7, \"cached\": true, \"data\": {\"activeAlerts\": 0, \"activeAnalysts\": 99, \"analystsAddedPast90Days\": 99, \"averageInfluenceScore\": 0, \"briefingFollowUps\": 0, \"briefingsDue\": 0, \"briefingsPast90Days\": 0, \"briefingsPlanned\": 0, \"briefingsYTD\": 2, \"cacheDuration\": 300, \"cacheEnabled\": true, \"calendarMeetings\": 0, \"completedBriefings\": 0, \"contentItemsPast90Days\": 0, \"engagementRate\": 0, \"expectedPerformanceGain\": \"80-90% faster dashboard loads\", \"newAnalysts\": [{\"company\": \"AnalystCompany\", \"createdAt\": \"2025-08-01T09:01:19.935748+00:00\", \"firstName\": \"Sarah\", \"id\": \"cla28db4622c22443ebb41dae3d\", \"lastName\": \"Chen\"}, {\"company\": \"BLR\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"James\", \"id\": \"clec2663da\", \"lastName\": \"Davis\"}, {\"company\": \"3sixtyinsights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Nicholas\", \"id\": \"cl57d5aef7\", \"lastName\": \"Biron\"}, {\"company\": \"NextGen Insights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Yvette\", \"id\": \"clb97a8ef6\", \"lastName\": \"Cameron\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Jen\", \"id\": \"cl9277b2ec\", \"lastName\": \"Colletta\"}, {\"company\": \"Brandon Hall Group\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Mike\", \"id\": \"cl652fc6f3\", \"lastName\": \"Cook\"}, {\"company\": \"PeopleTech Partners\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Cara\", \"id\": \"cl3ea4b44b\", \"lastName\": \"Brennan\"}, {\"company\": \"NelsonHall\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Gary\", \"id\": \"cl51dc7829\", \"lastName\": \"Bragar\"}, {\"company\": \"IDC\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Megan\", \"id\": \"cl4ec31b8d\", \"lastName\": \"Buttita\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Elizabeth\", \"id\": \"cl26599969\", \"lastName\": \"Clarke\"}], \"newsletterEngagements\": 0, \"newslettersSentPast90Days\": 0, \"publishedContent\": 0, \"queryOptimization\": \"Cached with Supabase queries\", \"recentContentItems\": [], \"recentInteractions\": 2, \"relationshipHealth\": 4, \"relevantSocialPosts\": 0, \"totalAnalysts\": 99}, \"success\": true}\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"totalAnalysts\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"cacheAge\": 7, \"cached\": true, \"data\": {\"activeAlerts\": 0, \"activeAnalysts\": 99, \"analystsAddedPast90Days\": 99, \"averageInfluenceScore\": 0, \"briefingFollowUps\": 0, \"briefingsDue\": 0, \"briefingsPast90Days\": 0, \"briefingsPlanned\": 0, \"briefingsYTD\": 2, \"cacheDuration\": 300, \"cacheEnabled\": true, \"calendarMeetings\": 0, \"completedBriefings\": 0, \"contentItemsPast90Days\": 0, \"engagementRate\": 0, \"expectedPerformanceGain\": \"80-90% faster dashboard loads\", \"newAnalysts\": [{\"company\": \"AnalystCompany\", \"createdAt\": \"2025-08-01T09:01:19.935748+00:00\", \"firstName\": \"Sarah\", \"id\": \"cla28db4622c22443ebb41dae3d\", \"lastName\": \"Chen\"}, {\"company\": \"BLR\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"James\", \"id\": \"clec2663da\", \"lastName\": \"Davis\"}, {\"company\": \"3sixtyinsights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Nicholas\", \"id\": \"cl57d5aef7\", \"lastName\": \"Biron\"}, {\"company\": \"NextGen Insights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Yvette\", \"id\": \"clb97a8ef6\", \"lastName\": \"Cameron\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Jen\", \"id\": \"cl9277b2ec\", \"lastName\": \"Colletta\"}, {\"company\": \"Brandon Hall Group\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Mike\", \"id\": \"cl652fc6f3\", \"lastName\": \"Cook\"}, {\"company\": \"PeopleTech Partners\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Cara\", \"id\": \"cl3ea4b44b\", \"lastName\": \"Brennan\"}, {\"company\": \"NelsonHall\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Gary\", \"id\": \"cl51dc7829\", \"lastName\": \"Bragar\"}, {\"company\": \"IDC\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Megan\", \"id\": \"cl4ec31b8d\", \"lastName\": \"Buttita\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Elizabeth\", \"id\": \"cl26599969\", \"lastName\": \"Clarke\"}], \"newsletterEngagements\": 0, \"newslettersSentPast90Days\": 0, \"publishedContent\": 0, \"queryOptimization\": \"Cached with Supabase queries\", \"recentContentItems\": [], \"recentInteractions\": 2, \"relationshipHealth\": 4, \"relevantSocialPosts\": 0, \"totalAnalysts\": 99}, \"success\": true}\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:426:20",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 20,
                          "line": 426
                        },
                        "snippet": "  424 |     if (response.status() === 200) {\n  425 |       const data = await response.json()\n> 426 |       expect(data).toHaveProperty('totalAnalysts')\n      |                    ^\n  427 |       expect(data).toHaveProperty('activeAnalysts')\n  428 |       expect(data).toHaveProperty('engagementRate')\n  429 |     }"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 20,
                            "line": 426
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"totalAnalysts\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"cacheAge\": 7, \"cached\": true, \"data\": {\"activeAlerts\": 0, \"activeAnalysts\": 99, \"analystsAddedPast90Days\": 99, \"averageInfluenceScore\": 0, \"briefingFollowUps\": 0, \"briefingsDue\": 0, \"briefingsPast90Days\": 0, \"briefingsPlanned\": 0, \"briefingsYTD\": 2, \"cacheDuration\": 300, \"cacheEnabled\": true, \"calendarMeetings\": 0, \"completedBriefings\": 0, \"contentItemsPast90Days\": 0, \"engagementRate\": 0, \"expectedPerformanceGain\": \"80-90% faster dashboard loads\", \"newAnalysts\": [{\"company\": \"AnalystCompany\", \"createdAt\": \"2025-08-01T09:01:19.935748+00:00\", \"firstName\": \"Sarah\", \"id\": \"cla28db4622c22443ebb41dae3d\", \"lastName\": \"Chen\"}, {\"company\": \"BLR\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"James\", \"id\": \"clec2663da\", \"lastName\": \"Davis\"}, {\"company\": \"3sixtyinsights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Nicholas\", \"id\": \"cl57d5aef7\", \"lastName\": \"Biron\"}, {\"company\": \"NextGen Insights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Yvette\", \"id\": \"clb97a8ef6\", \"lastName\": \"Cameron\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Jen\", \"id\": \"cl9277b2ec\", \"lastName\": \"Colletta\"}, {\"company\": \"Brandon Hall Group\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Mike\", \"id\": \"cl652fc6f3\", \"lastName\": \"Cook\"}, {\"company\": \"PeopleTech Partners\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Cara\", \"id\": \"cl3ea4b44b\", \"lastName\": \"Brennan\"}, {\"company\": \"NelsonHall\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Gary\", \"id\": \"cl51dc7829\", \"lastName\": \"Bragar\"}, {\"company\": \"IDC\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Megan\", \"id\": \"cl4ec31b8d\", \"lastName\": \"Buttita\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Elizabeth\", \"id\": \"cl26599969\", \"lastName\": \"Clarke\"}], \"newsletterEngagements\": 0, \"newslettersSentPast90Days\": 0, \"publishedContent\": 0, \"queryOptimization\": \"Cached with Supabase queries\", \"recentContentItems\": [], \"recentInteractions\": 2, \"relationshipHealth\": 4, \"relevantSocialPosts\": 0, \"totalAnalysts\": 99}, \"success\": true}\u001b[39m\n\n  424 |     if (response.status() === 200) {\n  425 |       const data = await response.json()\n> 426 |       expect(data).toHaveProperty('totalAnalysts')\n      |                    ^\n  427 |       expect(data).toHaveProperty('activeAnalysts')\n  428 |       expect(data).toHaveProperty('engagementRate')\n  429 |     }\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:426:20"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:51.639Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 20,
                        "line": 426
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-01f8de696375bebc4924",
              "file": "api/api-endpoints.spec.ts",
              "line": 412,
              "column": 7
            },
            {
              "title": "GET /api/dashboard/top-analysts - top analysts",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 47,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 799,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:446:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 446
                        },
                        "snippet": "  444 |     if (response.status() === 200) {\n  445 |       const data = await response.json()\n> 446 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  447 |     }\n  448 |   })\n  449 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 446
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  444 |     if (response.status() === 200) {\n  445 |       const data = await response.json()\n> 446 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  447 |     }\n  448 |   })\n  449 |\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:446:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:52.015Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 446
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-e20f3e6349bfaf1ded71",
              "file": "api/api-endpoints.spec.ts",
              "line": 432,
              "column": 7
            },
            {
              "title": "GET /api/dashboard/recent-activity - recent activity",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 48,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 326,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:464:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 464
                        },
                        "snippet": "  462 |     if (response.status() === 200) {\n  463 |       const data = await response.json()\n> 464 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  465 |     }\n  466 |   })\n  467 | })"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 464
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  462 |     if (response.status() === 200) {\n  463 |       const data = await response.json()\n> 464 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  465 |     }\n  466 |   })\n  467 | })\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:464:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:52.338Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 464
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-05e3e68c53c12d3ddfad",
              "file": "api/api-endpoints.spec.ts",
              "line": 450,
              "column": 7
            },
            {
              "title": "GET /api/dashboard/metrics - dashboard metrics",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 64,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 163,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"totalAnalysts\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"cacheAge\": 16, \"cached\": true, \"data\": {\"activeAlerts\": 0, \"activeAnalysts\": 99, \"analystsAddedPast90Days\": 99, \"averageInfluenceScore\": 0, \"briefingFollowUps\": 0, \"briefingsDue\": 0, \"briefingsPast90Days\": 0, \"briefingsPlanned\": 0, \"briefingsYTD\": 2, \"cacheDuration\": 300, \"cacheEnabled\": true, \"calendarMeetings\": 0, \"completedBriefings\": 0, \"contentItemsPast90Days\": 0, \"engagementRate\": 0, \"expectedPerformanceGain\": \"80-90% faster dashboard loads\", \"newAnalysts\": [{\"company\": \"AnalystCompany\", \"createdAt\": \"2025-08-01T09:01:19.935748+00:00\", \"firstName\": \"Sarah\", \"id\": \"cla28db4622c22443ebb41dae3d\", \"lastName\": \"Chen\"}, {\"company\": \"BLR\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"James\", \"id\": \"clec2663da\", \"lastName\": \"Davis\"}, {\"company\": \"3sixtyinsights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Nicholas\", \"id\": \"cl57d5aef7\", \"lastName\": \"Biron\"}, {\"company\": \"NextGen Insights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Yvette\", \"id\": \"clb97a8ef6\", \"lastName\": \"Cameron\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Jen\", \"id\": \"cl9277b2ec\", \"lastName\": \"Colletta\"}, {\"company\": \"Brandon Hall Group\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Mike\", \"id\": \"cl652fc6f3\", \"lastName\": \"Cook\"}, {\"company\": \"PeopleTech Partners\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Cara\", \"id\": \"cl3ea4b44b\", \"lastName\": \"Brennan\"}, {\"company\": \"NelsonHall\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Gary\", \"id\": \"cl51dc7829\", \"lastName\": \"Bragar\"}, {\"company\": \"IDC\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Megan\", \"id\": \"cl4ec31b8d\", \"lastName\": \"Buttita\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Elizabeth\", \"id\": \"cl26599969\", \"lastName\": \"Clarke\"}], \"newsletterEngagements\": 0, \"newslettersSentPast90Days\": 0, \"publishedContent\": 0, \"queryOptimization\": \"Cached with Supabase queries\", \"recentContentItems\": [], \"recentInteractions\": 2, \"relationshipHealth\": 4, \"relevantSocialPosts\": 0, \"totalAnalysts\": 99}, \"success\": true}\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"totalAnalysts\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"cacheAge\": 16, \"cached\": true, \"data\": {\"activeAlerts\": 0, \"activeAnalysts\": 99, \"analystsAddedPast90Days\": 99, \"averageInfluenceScore\": 0, \"briefingFollowUps\": 0, \"briefingsDue\": 0, \"briefingsPast90Days\": 0, \"briefingsPlanned\": 0, \"briefingsYTD\": 2, \"cacheDuration\": 300, \"cacheEnabled\": true, \"calendarMeetings\": 0, \"completedBriefings\": 0, \"contentItemsPast90Days\": 0, \"engagementRate\": 0, \"expectedPerformanceGain\": \"80-90% faster dashboard loads\", \"newAnalysts\": [{\"company\": \"AnalystCompany\", \"createdAt\": \"2025-08-01T09:01:19.935748+00:00\", \"firstName\": \"Sarah\", \"id\": \"cla28db4622c22443ebb41dae3d\", \"lastName\": \"Chen\"}, {\"company\": \"BLR\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"James\", \"id\": \"clec2663da\", \"lastName\": \"Davis\"}, {\"company\": \"3sixtyinsights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Nicholas\", \"id\": \"cl57d5aef7\", \"lastName\": \"Biron\"}, {\"company\": \"NextGen Insights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Yvette\", \"id\": \"clb97a8ef6\", \"lastName\": \"Cameron\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Jen\", \"id\": \"cl9277b2ec\", \"lastName\": \"Colletta\"}, {\"company\": \"Brandon Hall Group\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Mike\", \"id\": \"cl652fc6f3\", \"lastName\": \"Cook\"}, {\"company\": \"PeopleTech Partners\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Cara\", \"id\": \"cl3ea4b44b\", \"lastName\": \"Brennan\"}, {\"company\": \"NelsonHall\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Gary\", \"id\": \"cl51dc7829\", \"lastName\": \"Bragar\"}, {\"company\": \"IDC\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Megan\", \"id\": \"cl4ec31b8d\", \"lastName\": \"Buttita\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Elizabeth\", \"id\": \"cl26599969\", \"lastName\": \"Clarke\"}], \"newsletterEngagements\": 0, \"newslettersSentPast90Days\": 0, \"publishedContent\": 0, \"queryOptimization\": \"Cached with Supabase queries\", \"recentContentItems\": [], \"recentInteractions\": 2, \"relationshipHealth\": 4, \"relevantSocialPosts\": 0, \"totalAnalysts\": 99}, \"success\": true}\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:426:20",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 20,
                          "line": 426
                        },
                        "snippet": "  424 |     if (response.status() === 200) {\n  425 |       const data = await response.json()\n> 426 |       expect(data).toHaveProperty('totalAnalysts')\n      |                    ^\n  427 |       expect(data).toHaveProperty('activeAnalysts')\n  428 |       expect(data).toHaveProperty('engagementRate')\n  429 |     }"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 20,
                            "line": 426
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"totalAnalysts\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"cacheAge\": 16, \"cached\": true, \"data\": {\"activeAlerts\": 0, \"activeAnalysts\": 99, \"analystsAddedPast90Days\": 99, \"averageInfluenceScore\": 0, \"briefingFollowUps\": 0, \"briefingsDue\": 0, \"briefingsPast90Days\": 0, \"briefingsPlanned\": 0, \"briefingsYTD\": 2, \"cacheDuration\": 300, \"cacheEnabled\": true, \"calendarMeetings\": 0, \"completedBriefings\": 0, \"contentItemsPast90Days\": 0, \"engagementRate\": 0, \"expectedPerformanceGain\": \"80-90% faster dashboard loads\", \"newAnalysts\": [{\"company\": \"AnalystCompany\", \"createdAt\": \"2025-08-01T09:01:19.935748+00:00\", \"firstName\": \"Sarah\", \"id\": \"cla28db4622c22443ebb41dae3d\", \"lastName\": \"Chen\"}, {\"company\": \"BLR\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"James\", \"id\": \"clec2663da\", \"lastName\": \"Davis\"}, {\"company\": \"3sixtyinsights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Nicholas\", \"id\": \"cl57d5aef7\", \"lastName\": \"Biron\"}, {\"company\": \"NextGen Insights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Yvette\", \"id\": \"clb97a8ef6\", \"lastName\": \"Cameron\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Jen\", \"id\": \"cl9277b2ec\", \"lastName\": \"Colletta\"}, {\"company\": \"Brandon Hall Group\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Mike\", \"id\": \"cl652fc6f3\", \"lastName\": \"Cook\"}, {\"company\": \"PeopleTech Partners\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Cara\", \"id\": \"cl3ea4b44b\", \"lastName\": \"Brennan\"}, {\"company\": \"NelsonHall\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Gary\", \"id\": \"cl51dc7829\", \"lastName\": \"Bragar\"}, {\"company\": \"IDC\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Megan\", \"id\": \"cl4ec31b8d\", \"lastName\": \"Buttita\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Elizabeth\", \"id\": \"cl26599969\", \"lastName\": \"Clarke\"}], \"newsletterEngagements\": 0, \"newslettersSentPast90Days\": 0, \"publishedContent\": 0, \"queryOptimization\": \"Cached with Supabase queries\", \"recentContentItems\": [], \"recentInteractions\": 2, \"relationshipHealth\": 4, \"relevantSocialPosts\": 0, \"totalAnalysts\": 99}, \"success\": true}\u001b[39m\n\n  424 |     if (response.status() === 200) {\n  425 |       const data = await response.json()\n> 426 |       expect(data).toHaveProperty('totalAnalysts')\n      |                    ^\n  427 |       expect(data).toHaveProperty('activeAnalysts')\n  428 |       expect(data).toHaveProperty('engagementRate')\n  429 |     }\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:426:20"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:00.216Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 20,
                        "line": 426
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-5969cbae584cf34f691a",
              "file": "api/api-endpoints.spec.ts",
              "line": 412,
              "column": 7
            },
            {
              "title": "GET /api/dashboard/top-analysts - top analysts",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 66,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1170,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:446:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 446
                        },
                        "snippet": "  444 |     if (response.status() === 200) {\n  445 |       const data = await response.json()\n> 446 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  447 |     }\n  448 |   })\n  449 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 446
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  444 |     if (response.status() === 200) {\n  445 |       const data = await response.json()\n> 446 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  447 |     }\n  448 |   })\n  449 |\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:446:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:00.748Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 446
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-22f8f4ed7fe73b508c40",
              "file": "api/api-endpoints.spec.ts",
              "line": 432,
              "column": 7
            },
            {
              "title": "GET /api/dashboard/recent-activity - recent activity",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 67,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 811,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:464:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 464
                        },
                        "snippet": "  462 |     if (response.status() === 200) {\n  463 |       const data = await response.json()\n> 464 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  465 |     }\n  466 |   })\n  467 | })"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 464
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  462 |     if (response.status() === 200) {\n  463 |       const data = await response.json()\n> 464 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  465 |     }\n  466 |   })\n  467 | })\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:464:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:00.770Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 464
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-6caeebb8d27aeddfb701",
              "file": "api/api-endpoints.spec.ts",
              "line": 450,
              "column": 7
            },
            {
              "title": "GET /api/dashboard/metrics - dashboard metrics",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 82,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 550,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"totalAnalysts\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"cacheAge\": 24, \"cached\": true, \"data\": {\"activeAlerts\": 0, \"activeAnalysts\": 99, \"analystsAddedPast90Days\": 99, \"averageInfluenceScore\": 0, \"briefingFollowUps\": 0, \"briefingsDue\": 0, \"briefingsPast90Days\": 0, \"briefingsPlanned\": 0, \"briefingsYTD\": 2, \"cacheDuration\": 300, \"cacheEnabled\": true, \"calendarMeetings\": 0, \"completedBriefings\": 0, \"contentItemsPast90Days\": 0, \"engagementRate\": 0, \"expectedPerformanceGain\": \"80-90% faster dashboard loads\", \"newAnalysts\": [{\"company\": \"AnalystCompany\", \"createdAt\": \"2025-08-01T09:01:19.935748+00:00\", \"firstName\": \"Sarah\", \"id\": \"cla28db4622c22443ebb41dae3d\", \"lastName\": \"Chen\"}, {\"company\": \"BLR\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"James\", \"id\": \"clec2663da\", \"lastName\": \"Davis\"}, {\"company\": \"3sixtyinsights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Nicholas\", \"id\": \"cl57d5aef7\", \"lastName\": \"Biron\"}, {\"company\": \"NextGen Insights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Yvette\", \"id\": \"clb97a8ef6\", \"lastName\": \"Cameron\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Jen\", \"id\": \"cl9277b2ec\", \"lastName\": \"Colletta\"}, {\"company\": \"Brandon Hall Group\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Mike\", \"id\": \"cl652fc6f3\", \"lastName\": \"Cook\"}, {\"company\": \"PeopleTech Partners\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Cara\", \"id\": \"cl3ea4b44b\", \"lastName\": \"Brennan\"}, {\"company\": \"NelsonHall\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Gary\", \"id\": \"cl51dc7829\", \"lastName\": \"Bragar\"}, {\"company\": \"IDC\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Megan\", \"id\": \"cl4ec31b8d\", \"lastName\": \"Buttita\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Elizabeth\", \"id\": \"cl26599969\", \"lastName\": \"Clarke\"}], \"newsletterEngagements\": 0, \"newslettersSentPast90Days\": 0, \"publishedContent\": 0, \"queryOptimization\": \"Cached with Supabase queries\", \"recentContentItems\": [], \"recentInteractions\": 2, \"relationshipHealth\": 4, \"relevantSocialPosts\": 0, \"totalAnalysts\": 99}, \"success\": true}\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"totalAnalysts\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"cacheAge\": 24, \"cached\": true, \"data\": {\"activeAlerts\": 0, \"activeAnalysts\": 99, \"analystsAddedPast90Days\": 99, \"averageInfluenceScore\": 0, \"briefingFollowUps\": 0, \"briefingsDue\": 0, \"briefingsPast90Days\": 0, \"briefingsPlanned\": 0, \"briefingsYTD\": 2, \"cacheDuration\": 300, \"cacheEnabled\": true, \"calendarMeetings\": 0, \"completedBriefings\": 0, \"contentItemsPast90Days\": 0, \"engagementRate\": 0, \"expectedPerformanceGain\": \"80-90% faster dashboard loads\", \"newAnalysts\": [{\"company\": \"AnalystCompany\", \"createdAt\": \"2025-08-01T09:01:19.935748+00:00\", \"firstName\": \"Sarah\", \"id\": \"cla28db4622c22443ebb41dae3d\", \"lastName\": \"Chen\"}, {\"company\": \"BLR\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"James\", \"id\": \"clec2663da\", \"lastName\": \"Davis\"}, {\"company\": \"3sixtyinsights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Nicholas\", \"id\": \"cl57d5aef7\", \"lastName\": \"Biron\"}, {\"company\": \"NextGen Insights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Yvette\", \"id\": \"clb97a8ef6\", \"lastName\": \"Cameron\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Jen\", \"id\": \"cl9277b2ec\", \"lastName\": \"Colletta\"}, {\"company\": \"Brandon Hall Group\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Mike\", \"id\": \"cl652fc6f3\", \"lastName\": \"Cook\"}, {\"company\": \"PeopleTech Partners\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Cara\", \"id\": \"cl3ea4b44b\", \"lastName\": \"Brennan\"}, {\"company\": \"NelsonHall\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Gary\", \"id\": \"cl51dc7829\", \"lastName\": \"Bragar\"}, {\"company\": \"IDC\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Megan\", \"id\": \"cl4ec31b8d\", \"lastName\": \"Buttita\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Elizabeth\", \"id\": \"cl26599969\", \"lastName\": \"Clarke\"}], \"newsletterEngagements\": 0, \"newslettersSentPast90Days\": 0, \"publishedContent\": 0, \"queryOptimization\": \"Cached with Supabase queries\", \"recentContentItems\": [], \"recentInteractions\": 2, \"relationshipHealth\": 4, \"relevantSocialPosts\": 0, \"totalAnalysts\": 99}, \"success\": true}\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:426:20",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 20,
                          "line": 426
                        },
                        "snippet": "  424 |     if (response.status() === 200) {\n  425 |       const data = await response.json()\n> 426 |       expect(data).toHaveProperty('totalAnalysts')\n      |                    ^\n  427 |       expect(data).toHaveProperty('activeAnalysts')\n  428 |       expect(data).toHaveProperty('engagementRate')\n  429 |     }"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 20,
                            "line": 426
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"totalAnalysts\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"cacheAge\": 24, \"cached\": true, \"data\": {\"activeAlerts\": 0, \"activeAnalysts\": 99, \"analystsAddedPast90Days\": 99, \"averageInfluenceScore\": 0, \"briefingFollowUps\": 0, \"briefingsDue\": 0, \"briefingsPast90Days\": 0, \"briefingsPlanned\": 0, \"briefingsYTD\": 2, \"cacheDuration\": 300, \"cacheEnabled\": true, \"calendarMeetings\": 0, \"completedBriefings\": 0, \"contentItemsPast90Days\": 0, \"engagementRate\": 0, \"expectedPerformanceGain\": \"80-90% faster dashboard loads\", \"newAnalysts\": [{\"company\": \"AnalystCompany\", \"createdAt\": \"2025-08-01T09:01:19.935748+00:00\", \"firstName\": \"Sarah\", \"id\": \"cla28db4622c22443ebb41dae3d\", \"lastName\": \"Chen\"}, {\"company\": \"BLR\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"James\", \"id\": \"clec2663da\", \"lastName\": \"Davis\"}, {\"company\": \"3sixtyinsights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Nicholas\", \"id\": \"cl57d5aef7\", \"lastName\": \"Biron\"}, {\"company\": \"NextGen Insights\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Yvette\", \"id\": \"clb97a8ef6\", \"lastName\": \"Cameron\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Jen\", \"id\": \"cl9277b2ec\", \"lastName\": \"Colletta\"}, {\"company\": \"Brandon Hall Group\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Mike\", \"id\": \"cl652fc6f3\", \"lastName\": \"Cook\"}, {\"company\": \"PeopleTech Partners\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Cara\", \"id\": \"cl3ea4b44b\", \"lastName\": \"Brennan\"}, {\"company\": \"NelsonHall\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Gary\", \"id\": \"cl51dc7829\", \"lastName\": \"Bragar\"}, {\"company\": \"IDC\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Megan\", \"id\": \"cl4ec31b8d\", \"lastName\": \"Buttita\"}, {\"company\": \"Human Resource Executive\", \"createdAt\": \"2025-07-31T01:43:33.266426+00:00\", \"firstName\": \"Elizabeth\", \"id\": \"cl26599969\", \"lastName\": \"Clarke\"}], \"newsletterEngagements\": 0, \"newslettersSentPast90Days\": 0, \"publishedContent\": 0, \"queryOptimization\": \"Cached with Supabase queries\", \"recentContentItems\": [], \"recentInteractions\": 2, \"relationshipHealth\": 4, \"relevantSocialPosts\": 0, \"totalAnalysts\": 99}, \"success\": true}\u001b[39m\n\n  424 |     if (response.status() === 200) {\n  425 |       const data = await response.json()\n> 426 |       expect(data).toHaveProperty('totalAnalysts')\n      |                    ^\n  427 |       expect(data).toHaveProperty('activeAnalysts')\n  428 |       expect(data).toHaveProperty('engagementRate')\n  429 |     }\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:426:20"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:07.983Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 20,
                        "line": 426
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-e8feb4d98fa354aaa62f",
              "file": "api/api-endpoints.spec.ts",
              "line": 412,
              "column": 7
            },
            {
              "title": "GET /api/dashboard/top-analysts - top analysts",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 84,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 723,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:446:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 446
                        },
                        "snippet": "  444 |     if (response.status() === 200) {\n  445 |       const data = await response.json()\n> 446 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  447 |     }\n  448 |   })\n  449 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 446
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  444 |     if (response.status() === 200) {\n  445 |       const data = await response.json()\n> 446 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  447 |     }\n  448 |   })\n  449 |\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:446:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:08.394Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 446
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-16f87601b2628446460f",
              "file": "api/api-endpoints.spec.ts",
              "line": 432,
              "column": 7
            },
            {
              "title": "GET /api/dashboard/recent-activity - recent activity",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 85,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 157,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:464:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 464
                        },
                        "snippet": "  462 |     if (response.status() === 200) {\n  463 |       const data = await response.json()\n> 464 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  465 |     }\n  466 |   })\n  467 | })"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 464
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  462 |     if (response.status() === 200) {\n  463 |       const data = await response.json()\n> 464 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  465 |     }\n  466 |   })\n  467 | })\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:464:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:08.819Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 464
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-320fa51ca7c0e1ee81e2",
              "file": "api/api-endpoints.spec.ts",
              "line": 450,
              "column": 7
            },
            {
              "title": "GET /api/dashboard/metrics - dashboard metrics",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-fc83c3c8a7b6a5c0d2f1",
              "file": "api/api-endpoints.spec.ts",
              "line": 412,
              "column": 7
            },
            {
              "title": "GET /api/dashboard/top-analysts - top analysts",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-cc553353d61ab19fd092",
              "file": "api/api-endpoints.spec.ts",
              "line": 432,
              "column": 7
            },
            {
              "title": "GET /api/dashboard/recent-activity - recent activity",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-7f699ddaa42b976c4c58",
              "file": "api/api-endpoints.spec.ts",
              "line": 450,
              "column": 7
            },
            {
              "title": "GET /api/dashboard/metrics - dashboard metrics",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-d4b886151d3075bf82d4",
              "file": "api/api-endpoints.spec.ts",
              "line": 412,
              "column": 7
            },
            {
              "title": "GET /api/dashboard/top-analysts - top analysts",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-1710a4d34365ddb72eda",
              "file": "api/api-endpoints.spec.ts",
              "line": 432,
              "column": 7
            },
            {
              "title": "GET /api/dashboard/recent-activity - recent activity",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-585057a34a90c3cde4b0",
              "file": "api/api-endpoints.spec.ts",
              "line": 450,
              "column": 7
            }
          ]
        },
        {
          "title": "Briefings API Endpoints",
          "file": "api/api-endpoints.spec.ts",
          "line": 469,
          "column": 6,
          "specs": [
            {
              "title": "GET /api/briefings - list briefings",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 13,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 1975,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:35.347Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-fb290d26f1d5c90871cf",
              "file": "api/api-endpoints.spec.ts",
              "line": 470,
              "column": 7
            },
            {
              "title": "GET /api/briefings - list briefings",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 31,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 596,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:45.254Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-62c121af69d9cd05f369",
              "file": "api/api-endpoints.spec.ts",
              "line": 470,
              "column": 7
            },
            {
              "title": "GET /api/briefings - list briefings",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 49,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 843,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:52.978Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-226600d5d01b7b967a0b",
              "file": "api/api-endpoints.spec.ts",
              "line": 470,
              "column": 7
            },
            {
              "title": "GET /api/briefings - list briefings",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 68,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 1261,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:01.524Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-80a6d935482eda64b011",
              "file": "api/api-endpoints.spec.ts",
              "line": 470,
              "column": 7
            },
            {
              "title": "GET /api/briefings - list briefings",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 86,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 1578,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:09.286Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-a64243f24ec33de81835",
              "file": "api/api-endpoints.spec.ts",
              "line": 470,
              "column": 7
            },
            {
              "title": "GET /api/briefings - list briefings",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-31edc87597a7f23bfe79",
              "file": "api/api-endpoints.spec.ts",
              "line": 470,
              "column": 7
            },
            {
              "title": "GET /api/briefings - list briefings",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-eb0370fccc3384bafa60",
              "file": "api/api-endpoints.spec.ts",
              "line": 470,
              "column": 7
            }
          ]
        },
        {
          "title": "Social Media API Endpoints",
          "file": "api/api-endpoints.spec.ts",
          "line": 489,
          "column": 6,
          "specs": [
            {
              "title": "GET /api/social-media/recent-activity - recent social activity",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 14,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 1954,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:504:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 504
                        },
                        "snippet": "  502 |     if (response.status() === 200) {\n  503 |       const data = await response.json()\n> 504 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  505 |     }\n  506 |   })\n  507 | })"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 504
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  502 |     if (response.status() === 200) {\n  503 |       const data = await response.json()\n> 504 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  505 |     }\n  506 |   })\n  507 | })\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:504:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:35.502Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 504
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-fde9db2451fb106a9c95",
              "file": "api/api-endpoints.spec.ts",
              "line": 490,
              "column": 7
            },
            {
              "title": "GET /api/social-media/recent-activity - recent social activity",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 32,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 1711,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:504:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 504
                        },
                        "snippet": "  502 |     if (response.status() === 200) {\n  503 |       const data = await response.json()\n> 504 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  505 |     }\n  506 |   })\n  507 | })"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 504
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  502 |     if (response.status() === 200) {\n  503 |       const data = await response.json()\n> 504 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  505 |     }\n  506 |   })\n  507 | })\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:504:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:46.114Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 504
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-eee43ac8a203aa6bae7f",
              "file": "api/api-endpoints.spec.ts",
              "line": 490,
              "column": 7
            },
            {
              "title": "GET /api/social-media/recent-activity - recent social activity",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 50,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 545,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:504:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 504
                        },
                        "snippet": "  502 |     if (response.status() === 200) {\n  503 |       const data = await response.json()\n> 504 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  505 |     }\n  506 |   })\n  507 | })"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 504
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  502 |     if (response.status() === 200) {\n  503 |       const data = await response.json()\n> 504 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  505 |     }\n  506 |   })\n  507 | })\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:504:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:53.139Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 504
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-abd8da920390210c02dd",
              "file": "api/api-endpoints.spec.ts",
              "line": 490,
              "column": 7
            },
            {
              "title": "GET /api/social-media/recent-activity - recent social activity",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 69,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 376,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:504:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 504
                        },
                        "snippet": "  502 |     if (response.status() === 200) {\n  503 |       const data = await response.json()\n> 504 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  505 |     }\n  506 |   })\n  507 | })"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 504
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  502 |     if (response.status() === 200) {\n  503 |       const data = await response.json()\n> 504 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  505 |     }\n  506 |   })\n  507 | })\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:504:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:01.879Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 504
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-6c3fd3f67a7cabe64442",
              "file": "api/api-endpoints.spec.ts",
              "line": 490,
              "column": 7
            },
            {
              "title": "GET /api/social-media/recent-activity - recent social activity",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 87,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1415,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:504:35",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 35,
                          "line": 504
                        },
                        "snippet": "  502 |     if (response.status() === 200) {\n  503 |       const data = await response.json()\n> 504 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  505 |     }\n  506 |   })\n  507 | })"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 35,
                            "line": 504
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n\n  502 |     if (response.status() === 200) {\n  503 |       const data = await response.json()\n> 504 |       expect(Array.isArray(data)).toBe(true)\n      |                                   ^\n  505 |     }\n  506 |   })\n  507 | })\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:504:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:09.463Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 35,
                        "line": 504
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-41f4aaf13ed4b7559935",
              "file": "api/api-endpoints.spec.ts",
              "line": 490,
              "column": 7
            },
            {
              "title": "GET /api/social-media/recent-activity - recent social activity",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-4f5dde8a3e0b49120479",
              "file": "api/api-endpoints.spec.ts",
              "line": 490,
              "column": 7
            },
            {
              "title": "GET /api/social-media/recent-activity - recent social activity",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-f1335d022da943230aa8",
              "file": "api/api-endpoints.spec.ts",
              "line": 490,
              "column": 7
            }
          ]
        },
        {
          "title": "Error Handling",
          "file": "api/api-endpoints.spec.ts",
          "line": 509,
          "column": 6,
          "specs": [
            {
              "title": "404 for non-existent endpoints",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 15,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 1755,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:513:31",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 31,
                          "line": 513
                        },
                        "snippet": "  511 |     const response = await request.get(`${BASE_URL}/api/non-existent-endpoint`)\n  512 |     \n> 513 |     expect(response.status()).toBe(404)\n      |                               ^\n  514 |   })\n  515 |\n  516 |   test('405 for wrong HTTP methods', async ({ request }) => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 31,
                            "line": 513
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n  511 |     const response = await request.get(`${BASE_URL}/api/non-existent-endpoint`)\n  512 |     \n> 513 |     expect(response.status()).toBe(404)\n      |                               ^\n  514 |   })\n  515 |\n  516 |   test('405 for wrong HTTP methods', async ({ request }) => {\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:513:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:37.197Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 31,
                        "line": 513
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-e63ff2b5074ea73f93bf",
              "file": "api/api-endpoints.spec.ts",
              "line": 510,
              "column": 7
            },
            {
              "title": "405 for wrong HTTP methods",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 13,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 1621,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:37.327Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-63c768c1083e37dd35cf",
              "file": "api/api-endpoints.spec.ts",
              "line": 516,
              "column": 7
            },
            {
              "title": "400 for malformed JSON",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 16,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 1391,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:37.821Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-2652274ac74b307b763c",
              "file": "api/api-endpoints.spec.ts",
              "line": 522,
              "column": 7
            },
            {
              "title": "404 for non-existent endpoints",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 31,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 685,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:513:31",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 31,
                          "line": 513
                        },
                        "snippet": "  511 |     const response = await request.get(`${BASE_URL}/api/non-existent-endpoint`)\n  512 |     \n> 513 |     expect(response.status()).toBe(404)\n      |                               ^\n  514 |   })\n  515 |\n  516 |   test('405 for wrong HTTP methods', async ({ request }) => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 31,
                            "line": 513
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n  511 |     const response = await request.get(`${BASE_URL}/api/non-existent-endpoint`)\n  512 |     \n> 513 |     expect(response.status()).toBe(404)\n      |                               ^\n  514 |   })\n  515 |\n  516 |   test('405 for wrong HTTP methods', async ({ request }) => {\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:513:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:45.855Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 31,
                        "line": 513
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-f1529d9ebeeccfb76864",
              "file": "api/api-endpoints.spec.ts",
              "line": 510,
              "column": 7
            },
            {
              "title": "405 for wrong HTTP methods",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 33,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 218,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:46.328Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-8ba1fac8dcc865155547",
              "file": "api/api-endpoints.spec.ts",
              "line": 516,
              "column": 7
            },
            {
              "title": "400 for malformed JSON",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 34,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 883,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:46.956Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-cdb73c939e57a41e4a3a",
              "file": "api/api-endpoints.spec.ts",
              "line": 522,
              "column": 7
            },
            {
              "title": "404 for non-existent endpoints",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 51,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 336,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:513:31",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 31,
                          "line": 513
                        },
                        "snippet": "  511 |     const response = await request.get(`${BASE_URL}/api/non-existent-endpoint`)\n  512 |     \n> 513 |     expect(response.status()).toBe(404)\n      |                               ^\n  514 |   })\n  515 |\n  516 |   test('405 for wrong HTTP methods', async ({ request }) => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 31,
                            "line": 513
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n  511 |     const response = await request.get(`${BASE_URL}/api/non-existent-endpoint`)\n  512 |     \n> 513 |     expect(response.status()).toBe(404)\n      |                               ^\n  514 |   })\n  515 |\n  516 |   test('405 for wrong HTTP methods', async ({ request }) => {\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:513:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:53.352Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 31,
                        "line": 513
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-7b0bcf11d8b59eabf15b",
              "file": "api/api-endpoints.spec.ts",
              "line": 510,
              "column": 7
            },
            {
              "title": "405 for wrong HTTP methods",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 52,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 1146,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:54.024Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-acae159c2a02e70d9809",
              "file": "api/api-endpoints.spec.ts",
              "line": 516,
              "column": 7
            },
            {
              "title": "400 for malformed JSON",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 53,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 1631,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:54.023Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-b717a164745309d23e08",
              "file": "api/api-endpoints.spec.ts",
              "line": 522,
              "column": 7
            },
            {
              "title": "404 for non-existent endpoints",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 70,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 816,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:513:31",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 31,
                          "line": 513
                        },
                        "snippet": "  511 |     const response = await request.get(`${BASE_URL}/api/non-existent-endpoint`)\n  512 |     \n> 513 |     expect(response.status()).toBe(404)\n      |                               ^\n  514 |   })\n  515 |\n  516 |   test('405 for wrong HTTP methods', async ({ request }) => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 31,
                            "line": 513
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n  511 |     const response = await request.get(`${BASE_URL}/api/non-existent-endpoint`)\n  512 |     \n> 513 |     expect(response.status()).toBe(404)\n      |                               ^\n  514 |   })\n  515 |\n  516 |   test('405 for wrong HTTP methods', async ({ request }) => {\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:513:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:02.221Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 31,
                        "line": 513
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-5ff5f02d676cdae86058",
              "file": "api/api-endpoints.spec.ts",
              "line": 510,
              "column": 7
            },
            {
              "title": "405 for wrong HTTP methods",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 71,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 313,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:02.635Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-9546ff7827c689859574",
              "file": "api/api-endpoints.spec.ts",
              "line": 516,
              "column": 7
            },
            {
              "title": "400 for malformed JSON",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 68,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 753,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:02.790Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-6a33c384c67e1332710e",
              "file": "api/api-endpoints.spec.ts",
              "line": 522,
              "column": 7
            },
            {
              "title": "404 for non-existent endpoints",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 88,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 856,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:513:31",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 31,
                          "line": 513
                        },
                        "snippet": "  511 |     const response = await request.get(`${BASE_URL}/api/non-existent-endpoint`)\n  512 |     \n> 513 |     expect(response.status()).toBe(404)\n      |                               ^\n  514 |   })\n  515 |\n  516 |   test('405 for wrong HTTP methods', async ({ request }) => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 31,
                            "line": 513
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n  511 |     const response = await request.get(`${BASE_URL}/api/non-existent-endpoint`)\n  512 |     \n> 513 |     expect(response.status()).toBe(404)\n      |                               ^\n  514 |   })\n  515 |\n  516 |   test('405 for wrong HTTP methods', async ({ request }) => {\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:513:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:10.014Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 31,
                        "line": 513
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-f960b20188f471d4e1e0",
              "file": "api/api-endpoints.spec.ts",
              "line": 510,
              "column": 7
            },
            {
              "title": "405 for wrong HTTP methods",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 86,
                      "parallelIndex": 2,
                      "status": "interrupted",
                      "duration": 12,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:10.871Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-03698577de0a2c91e2be",
              "file": "api/api-endpoints.spec.ts",
              "line": 516,
              "column": 7
            },
            {
              "title": "400 for malformed JSON",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-eaabcae6edbf29113634",
              "file": "api/api-endpoints.spec.ts",
              "line": 522,
              "column": 7
            },
            {
              "title": "404 for non-existent endpoints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-8626fcb31e313c2301f9",
              "file": "api/api-endpoints.spec.ts",
              "line": 510,
              "column": 7
            },
            {
              "title": "405 for wrong HTTP methods",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-f33f3353a9a9cddabb1c",
              "file": "api/api-endpoints.spec.ts",
              "line": 516,
              "column": 7
            },
            {
              "title": "400 for malformed JSON",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-c4480bdffb18e7fe54e4",
              "file": "api/api-endpoints.spec.ts",
              "line": 522,
              "column": 7
            },
            {
              "title": "404 for non-existent endpoints",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-f1d065bf2631f708801e",
              "file": "api/api-endpoints.spec.ts",
              "line": 510,
              "column": 7
            },
            {
              "title": "405 for wrong HTTP methods",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-a5bc0705b79c31539bf3",
              "file": "api/api-endpoints.spec.ts",
              "line": 516,
              "column": 7
            },
            {
              "title": "400 for malformed JSON",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-19fedcb348d1c52230f6",
              "file": "api/api-endpoints.spec.ts",
              "line": 522,
              "column": 7
            }
          ]
        },
        {
          "title": "Rate Limiting and Security",
          "file": "api/api-endpoints.spec.ts",
          "line": 537,
          "column": 6,
          "specs": [
            {
              "title": "API endpoints have appropriate CORS headers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 13,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 2,
                      "error": {
                        "message": "TypeError: request.options is not a function",
                        "stack": "TypeError: request.options is not a function\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:539:36",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 36,
                          "line": 539
                        },
                        "snippet": "  537 | test.describe('Rate Limiting and Security', () => {\n  538 |   test('API endpoints have appropriate CORS headers', async ({ request }) => {\n> 539 |     const response = await request.options(`${BASE_URL}/api/settings/general`)\n      |                                    ^\n  540 |     \n  541 |     const headers = response.headers()\n  542 |     // Check for security headers (these may vary based on your implementation)"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 36,
                            "line": 539
                          },
                          "message": "TypeError: request.options is not a function\n\n  537 | test.describe('Rate Limiting and Security', () => {\n  538 |   test('API endpoints have appropriate CORS headers', async ({ request }) => {\n> 539 |     const response = await request.options(`${BASE_URL}/api/settings/general`)\n      |                                    ^\n  540 |     \n  541 |     const headers = response.headers()\n  542 |     // Check for security headers (these may vary based on your implementation)\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:539:36"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:38.951Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 36,
                        "line": 539
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-9209231d951d3928efa3",
              "file": "api/api-endpoints.spec.ts",
              "line": 538,
              "column": 7
            },
            {
              "title": "API endpoints reject requests with invalid content types",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 17,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 300,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:557:31",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 31,
                          "line": 557
                        },
                        "snippet": "  555 |     })\n  556 |     \n> 557 |     expect(response.status()).toBe(400)\n      |                               ^\n  558 |   })\n  559 | })"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 31,
                            "line": 557
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n  555 |     })\n  556 |     \n> 557 |     expect(response.status()).toBe(400)\n      |                               ^\n  558 |   })\n  559 | })\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:557:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:39.265Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 31,
                        "line": 557
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-14a38fda695ad2ce0483",
              "file": "api/api-endpoints.spec.ts",
              "line": 546,
              "column": 7
            },
            {
              "title": "API endpoints have appropriate CORS headers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 33,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "TypeError: request.options is not a function",
                        "stack": "TypeError: request.options is not a function\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:539:36",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 36,
                          "line": 539
                        },
                        "snippet": "  537 | test.describe('Rate Limiting and Security', () => {\n  538 |   test('API endpoints have appropriate CORS headers', async ({ request }) => {\n> 539 |     const response = await request.options(`${BASE_URL}/api/settings/general`)\n      |                                    ^\n  540 |     \n  541 |     const headers = response.headers()\n  542 |     // Check for security headers (these may vary based on your implementation)"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 36,
                            "line": 539
                          },
                          "message": "TypeError: request.options is not a function\n\n  537 | test.describe('Rate Limiting and Security', () => {\n  538 |   test('API endpoints have appropriate CORS headers', async ({ request }) => {\n> 539 |     const response = await request.options(`${BASE_URL}/api/settings/general`)\n      |                                    ^\n  540 |     \n  541 |     const headers = response.headers()\n  542 |     // Check for security headers (these may vary based on your implementation)\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:539:36"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:46.552Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 36,
                        "line": 539
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-98d29fb9e060de39570e",
              "file": "api/api-endpoints.spec.ts",
              "line": 538,
              "column": 7
            },
            {
              "title": "API endpoints reject requests with invalid content types",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 35,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 542,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:557:31",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 31,
                          "line": 557
                        },
                        "snippet": "  555 |     })\n  556 |     \n> 557 |     expect(response.status()).toBe(400)\n      |                               ^\n  558 |   })\n  559 | })"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 31,
                            "line": 557
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n  555 |     })\n  556 |     \n> 557 |     expect(response.status()).toBe(400)\n      |                               ^\n  558 |   })\n  559 | })\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:557:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:46.998Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 31,
                        "line": 557
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-85d25cd15646b149fcd1",
              "file": "api/api-endpoints.spec.ts",
              "line": 546,
              "column": 7
            },
            {
              "title": "API endpoints have appropriate CORS headers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 49,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 2,
                      "error": {
                        "message": "TypeError: request.options is not a function",
                        "stack": "TypeError: request.options is not a function\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:539:36",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 36,
                          "line": 539
                        },
                        "snippet": "  537 | test.describe('Rate Limiting and Security', () => {\n  538 |   test('API endpoints have appropriate CORS headers', async ({ request }) => {\n> 539 |     const response = await request.options(`${BASE_URL}/api/settings/general`)\n      |                                    ^\n  540 |     \n  541 |     const headers = response.headers()\n  542 |     // Check for security headers (these may vary based on your implementation)"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 36,
                            "line": 539
                          },
                          "message": "TypeError: request.options is not a function\n\n  537 | test.describe('Rate Limiting and Security', () => {\n  538 |   test('API endpoints have appropriate CORS headers', async ({ request }) => {\n> 539 |     const response = await request.options(`${BASE_URL}/api/settings/general`)\n      |                                    ^\n  540 |     \n  541 |     const headers = response.headers()\n  542 |     // Check for security headers (these may vary based on your implementation)\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:539:36"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:53.826Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 36,
                        "line": 539
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-93f7d5bc0aa832122f2c",
              "file": "api/api-endpoints.spec.ts",
              "line": 538,
              "column": 7
            },
            {
              "title": "API endpoints reject requests with invalid content types",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 54,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1434,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:557:31",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 31,
                          "line": 557
                        },
                        "snippet": "  555 |     })\n  556 |     \n> 557 |     expect(response.status()).toBe(400)\n      |                               ^\n  558 |   })\n  559 | })"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 31,
                            "line": 557
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n  555 |     })\n  556 |     \n> 557 |     expect(response.status()).toBe(400)\n      |                               ^\n  558 |   })\n  559 | })\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:557:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:07:54.209Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 31,
                        "line": 557
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-b7881e153b1b3d665766",
              "file": "api/api-endpoints.spec.ts",
              "line": 546,
              "column": 7
            },
            {
              "title": "API endpoints have appropriate CORS headers",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 71,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 2,
                      "error": {
                        "message": "TypeError: request.options is not a function",
                        "stack": "TypeError: request.options is not a function\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:539:36",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 36,
                          "line": 539
                        },
                        "snippet": "  537 | test.describe('Rate Limiting and Security', () => {\n  538 |   test('API endpoints have appropriate CORS headers', async ({ request }) => {\n> 539 |     const response = await request.options(`${BASE_URL}/api/settings/general`)\n      |                                    ^\n  540 |     \n  541 |     const headers = response.headers()\n  542 |     // Check for security headers (these may vary based on your implementation)"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 36,
                            "line": 539
                          },
                          "message": "TypeError: request.options is not a function\n\n  537 | test.describe('Rate Limiting and Security', () => {\n  538 |   test('API endpoints have appropriate CORS headers', async ({ request }) => {\n> 539 |     const response = await request.options(`${BASE_URL}/api/settings/general`)\n      |                                    ^\n  540 |     \n  541 |     const headers = response.headers()\n  542 |     // Check for security headers (these may vary based on your implementation)\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:539:36"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:02.954Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 36,
                        "line": 539
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-dfa06a87835038d929e2",
              "file": "api/api-endpoints.spec.ts",
              "line": 538,
              "column": 7
            },
            {
              "title": "API endpoints reject requests with invalid content types",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 72,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 1147,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:557:31",
                        "location": {
                          "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                          "column": 31,
                          "line": 557
                        },
                        "snippet": "  555 |     })\n  556 |     \n> 557 |     expect(response.status()).toBe(400)\n      |                               ^\n  558 |   })\n  559 | })"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                            "column": 31,
                            "line": 557
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n  555 |     })\n  556 |     \n> 557 |     expect(response.status()).toBe(400)\n      |                               ^\n  558 |   })\n  559 | })\n    at /Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts:557:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-04T04:08:03.265Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/arnaudgrunwald/AGcodework/analyst-portal/tests/api/api-endpoints.spec.ts",
                        "column": 31,
                        "line": 557
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-8c75f8ec98cae8efd7ee",
              "file": "api/api-endpoints.spec.ts",
              "line": 546,
              "column": 7
            },
            {
              "title": "API endpoints have appropriate CORS headers",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-520a0fbc69fd3643cb5d",
              "file": "api/api-endpoints.spec.ts",
              "line": 538,
              "column": 7
            },
            {
              "title": "API endpoints reject requests with invalid content types",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-7aa598e6f086554e3464",
              "file": "api/api-endpoints.spec.ts",
              "line": 546,
              "column": 7
            },
            {
              "title": "API endpoints have appropriate CORS headers",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-f3657dbb5995a999ddcf",
              "file": "api/api-endpoints.spec.ts",
              "line": 538,
              "column": 7
            },
            {
              "title": "API endpoints reject requests with invalid content types",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Microsoft Edge",
                  "projectName": "Microsoft Edge",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-c9096f4a34558c56a390",
              "file": "api/api-endpoints.spec.ts",
              "line": 546,
              "column": 7
            },
            {
              "title": "API endpoints have appropriate CORS headers",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-fb683226f6b654830968",
              "file": "api/api-endpoints.spec.ts",
              "line": 538,
              "column": 7
            },
            {
              "title": "API endpoints reject requests with invalid content types",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Google Chrome",
                  "projectName": "Google Chrome",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2aa5c695beafbd0aba0c-6c928b580d13f8f5fc90",
              "file": "api/api-endpoints.spec.ts",
              "line": 546,
              "column": 7
            }
          ]
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-08-04T04:07:19.260Z",
    "duration": 51643.666,
    "expected": 58,
    "skipped": 63,
    "unexpected": 82,
    "flaky": 0
  }
}